{
    "name": "array-rank",
    "prev": "array-in-bounds-p",
    "next": "array-row-major-index",
    "up": "Arrays Dictionary",
    "header": {
        "type": "Function",
        "text": "array-rank"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "array-rank",
                    "text": " array =>  rank\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "array",
                    "desc": "an array."
                },
                {
                    "name": "rank",
                    "desc": "a non-negative integer."
                }
            ]
        },
        {
            "type": "Description",
            "text": "Returns the number of dimensions of array.\n"
        },
        {
            "type": "Examples",
            "text": "      (array-rank (make-array '())) =>  0\n      (array-rank (make-array 4)) =>  1\n      (array-rank (make-array '(4))) =>  1\n      (array-rank (make-array '(2 3))) =>  2\n"
        },
        {
            "type": "Exceptional Situations",
            "text": "Should signal an error of type type-error if its argument is not an array.\n"
        },
        {
            "type": "See Also",
            "text": "*Note array-rank-limit:: , *Note make-array::\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: array-rank,  Next: array-row-major-index,  Prev: array-in-bounds-p,  Up: Arrays Dictionary\n\narray-rank                                                       [Function]\n---------------------------------------------------------------------------\n\n`array-rank'  array =>  rank\n\nArguments and Values::\n......................\n\narray--an array.\n\nrank--a non-negative integer.\n\nDescription::\n.............\n\nReturns the number of dimensions of array.\n\nExamples::\n..........\n\n      (array-rank (make-array '())) =>  0\n      (array-rank (make-array 4)) =>  1\n      (array-rank (make-array '(4))) =>  1\n      (array-rank (make-array '(2 3))) =>  2\n\nExceptional Situations::\n........................\n\nShould signal an error of type type-error if its argument is not an array.\n\nSee Also::\n..........\n\n*Note array-rank-limit:: , *Note make-array::\n\n"
}