{
    "name": "list-all-packages",
    "prev": "import",
    "next": "rename-package",
    "up": "Packages Dictionary",
    "header": {
        "type": "Function",
        "text": "list-all-packages"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "list-all-packages",
                    "text": " <no arguments> =>  packages\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "packages",
                    "desc": "a list of package objects."
                }
            ]
        },
        {
            "type": "Description",
            "text": "list-all-packages returns a\nfresh\nlist of\nall registered packages.\n"
        },
        {
            "type": "Examples",
            "text": "      (let ((before (list-all-packages)))\n         (make-package 'temp)\n         (set-difference (list-all-packages) before)) =>  (#<PACKAGE \"TEMP\">)\n"
        },
        {
            "type": "Affected By",
            "text": "defpackage, delete-package, make-package\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: list-all-packages,  Next: rename-package,  Prev: import,  Up: Packages Dictionary\n\nlist-all-packages                                                [Function]\n---------------------------------------------------------------------------\n\n`list-all-packages'  <no arguments> =>  packages\n\nArguments and Values::\n......................\n\npackages--a list of package objects.\n\nDescription::\n.............\n\nlist-all-packages returns a\n\nfresh\n\nlist of\n\nall registered packages.\n\nExamples::\n..........\n\n      (let ((before (list-all-packages)))\n         (make-package 'temp)\n         (set-difference (list-all-packages) before)) =>  (#<PACKAGE \"TEMP\">)\n\nAffected By::\n.............\n\ndefpackage, delete-package, make-package\n\n"
}