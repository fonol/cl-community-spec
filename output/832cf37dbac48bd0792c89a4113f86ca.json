{
    "name": "zerop",
    "prev": "minusp",
    "next": "floor",
    "up": "Numbers Dictionary",
    "header": {
        "type": "Function",
        "text": "zerop"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "zerop",
                    "text": " number =>  generalized-boolean\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Pronunciation",
            "text": "pronounced 'z\\=e (, )r\\=o(, )p\\=e\n"
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "number",
                    "desc": "a number."
                },
                {
                    "name": "generalized-boolean",
                    "desc": "a generalized boolean."
                }
            ]
        },
        {
            "type": "Description",
            "text": "Returns true if number is zero (integer, float, or complex); otherwise,\nreturns false.\nRegardless of whether an implementation provides distinct representations\nfor positive and negative floating-point zeros, (zerop -0.0) always\nreturns true.\n"
        },
        {
            "type": "Examples",
            "text": "      (zerop 0) =>  true\n      (zerop 1) =>  false\n      (zerop -0.0) =>  true\n      (zerop 0/100) =>  true\n      (zerop #c(0 0.0)) =>  true\n"
        },
        {
            "type": "Exceptional Situations",
            "text": "Should signal an error of type type-error if number is not a number.\n"
        },
        {
            "type": "Notes",
            "text": "      (zerop number) == (= number 0)\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: zerop,  Next: floor,  Prev: minusp,  Up: Numbers Dictionary\n\nzerop                                                            [Function]\n---------------------------------------------------------------------------\n\n`zerop'  number =>  generalized-boolean\n\nPronunciation::\n...............\n\npronounced 'z\\=e (, )r\\=o(, )p\\=e\n\nArguments and Values::\n......................\n\nnumber--a number.\n\ngeneralized-boolean--a generalized boolean.\n\nDescription::\n.............\n\nReturns true if number is zero (integer, float, or complex); otherwise,\nreturns false.\n\nRegardless of whether an implementation provides distinct representations\nfor positive and negative floating-point zeros, (zerop -0.0) always\nreturns true.\n\nExamples::\n..........\n\n      (zerop 0) =>  true\n      (zerop 1) =>  false\n      (zerop -0.0) =>  true\n      (zerop 0/100) =>  true\n      (zerop #c(0 0.0)) =>  true\n\nExceptional Situations::\n........................\n\nShould signal an error of type type-error if number is not a number.\n\nNotes::\n.......\n\n      (zerop number) == (= number 0)\n\n"
}