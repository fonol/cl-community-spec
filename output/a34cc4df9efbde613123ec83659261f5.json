{
    "name": "elt",
    "prev": "copy-seq",
    "next": "fill",
    "up": "Sequences Dictionary",
    "header": {
        "type": "Accessor",
        "text": "elt"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "elt",
                    "text": " sequence index =>  object\n(setf (`         elt' sequence index) new-object)\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "sequence",
                    "desc": "a proper sequence."
                },
                {
                    "name": "index",
                    "desc": "a valid sequence index for sequence."
                },
                {
                    "name": "object",
                    "desc": "an object."
                },
                {
                    "name": "new-object",
                    "desc": "an object."
                }
            ]
        },
        {
            "type": "Description",
            "text": "Accesses the element of sequence specified by index.\n"
        },
        {
            "type": "Examples",
            "text": "      (setq str (copy-seq \"0123456789\")) =>  \"0123456789\"\n      (elt str 6) =>  #\\6\n      (setf (elt str 0) #\\#) =>  #\\#\n      str =>  \"#123456789\"\n"
        },
        {
            "type": "Exceptional Situations",
            "text": "Should be prepared to signal an error of type type-error if sequence is\nnot a proper sequence.  Should signal an error of type type-error if index\nis not a valid sequence index for sequence.\n"
        },
        {
            "type": "See Also",
            "text": "*Note aref:: , *Note nth:: ,\n*Note Compiler Terminology::\n"
        },
        {
            "type": "Notes",
            "text": "aref may be used to access vector elements that are beyond the vector's\nfill pointer.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: elt,  Next: fill,  Prev: copy-seq,  Up: Sequences Dictionary\n\nelt                                                              [Accessor]\n---------------------------------------------------------------------------\n\n`elt'  sequence index =>  object\n\n(setf (`         elt' sequence index) new-object)\nArguments and Values::\n......................\n\nsequence--a proper sequence.\n\nindex--a valid sequence index for sequence.\n\nobject--an object.\n\nnew-object--an object.\n\nDescription::\n.............\n\nAccesses the element of sequence specified by index.\n\nExamples::\n..........\n\n      (setq str (copy-seq \"0123456789\")) =>  \"0123456789\"\n      (elt str 6) =>  #\\6\n      (setf (elt str 0) #\\#) =>  #\\#\n      str =>  \"#123456789\"\n\nExceptional Situations::\n........................\n\nShould be prepared to signal an error of type type-error if sequence is\nnot a proper sequence.  Should signal an error of type type-error if index\nis not a valid sequence index for sequence.\n\nSee Also::\n..........\n\n*Note aref:: , *Note nth:: ,\n\n*Note Compiler Terminology::\n\nNotes::\n.......\n\naref may be used to access vector elements that are beyond the vector's\nfill pointer.\n\n"
}