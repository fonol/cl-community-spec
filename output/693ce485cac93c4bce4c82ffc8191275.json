{
    "name": "make-concatenated-stream",
    "prev": "concatenated-stream-streams",
    "next": "get-output-stream-string",
    "up": "Streams Dictionary",
    "header": {
        "type": "Function",
        "text": "make-concatenated-stream"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "make-concatenated-stream",
                    "text": " &rest input-streams =>  concatenated-stream\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "input-stream",
                    "desc": "an input stream."
                },
                {
                    "name": "concatenated-stream",
                    "desc": "a concatenated stream."
                }
            ]
        },
        {
            "type": "Description",
            "text": "Returns a concatenated stream that has the indicated input-streams\ninitially associated with it.\n"
        },
        {
            "type": "Examples",
            "text": "      (read (make-concatenated-stream\n              (make-string-input-stream \"1\")\n              (make-string-input-stream \"2\"))) =>  12\n"
        },
        {
            "type": "Exceptional Situations",
            "text": "Should signal type-error if any argument is not an input stream.\n"
        },
        {
            "type": "See Also",
            "text": "*Note concatenated-stream-streams::\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: make-concatenated-stream,  Next: get-output-stream-string,  Prev: concatenated-stream-streams,  Up: Streams Dictionary\n\nmake-concatenated-stream                                         [Function]\n---------------------------------------------------------------------------\n\n`make-concatenated-stream'  &rest input-streams =>  concatenated-stream\n\nArguments and Values::\n......................\n\ninput-stream--an input stream.\n\nconcatenated-stream--a concatenated stream.\n\nDescription::\n.............\n\nReturns a concatenated stream that has the indicated input-streams\ninitially associated with it.\n\nExamples::\n..........\n\n      (read (make-concatenated-stream\n              (make-string-input-stream \"1\")\n              (make-string-input-stream \"2\"))) =>  12\n\nExceptional Situations::\n........................\n\nShould signal type-error if any argument is not an input stream.\n\nSee Also::\n..........\n\n*Note concatenated-stream-streams::\n\n"
}