{
    "name": "A specifier for a rest parameter",
    "prev": "Specifiers for optional parameters",
    "next": "Specifiers for keyword parameters",
    "up": "Ordinary Lambda Lists",
    "header": {
        "type": null,
        "text": null
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "A specifier for a rest parameter",
            "text": "&rest, if present, must be followed by a single rest parameter specifier,\nwhich in turn must be followed by another lambda list keyword or the end\nof the lambda list.  After all optional parameter specifiers have been\nprocessed, then there may or may not be a rest parameter.  If there is a\nrest parameter, it is bound to a list of all as-yet-unprocessed arguments.\nIf no unprocessed arguments remain, the rest parameter is bound to the\nempty list.  If there is no rest parameter and there are no keyword\nparameters, then an error should be signaled if any unprocessed arguments\nremain; see *Note Error Checking in Function Calls::.  The value of a rest\nparameter is permitted, but not required, to share structure with the last\nargument to apply.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: A specifier for a rest parameter,  Next: Specifiers for keyword parameters,  Prev: Specifiers for optional parameters,  Up: Ordinary Lambda Lists\n\nA specifier for a rest parameter\n................................\n\n&rest, if present, must be followed by a single rest parameter specifier,\nwhich in turn must be followed by another lambda list keyword or the end\nof the lambda list.  After all optional parameter specifiers have been\nprocessed, then there may or may not be a rest parameter.  If there is a\nrest parameter, it is bound to a list of all as-yet-unprocessed arguments.\nIf no unprocessed arguments remain, the rest parameter is bound to the\nempty list.  If there is no rest parameter and there are no keyword\nparameters, then an error should be signaled if any unprocessed arguments\nremain; see *Note Error Checking in Function Calls::.  The value of a rest\nparameter is permitted, but not required, to share structure with the last\nargument to apply.\n\n"
}