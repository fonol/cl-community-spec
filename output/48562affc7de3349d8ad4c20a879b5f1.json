{
    "name": "Dynamic Control of the Arrangement of Output",
    "prev": "Pretty Printer Concepts",
    "next": "Format Directive Interface",
    "up": "Pretty Printer Concepts",
    "header": {
        "type": null,
        "text": null
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Dynamic Control of the Arrangement of Output",
            "text": "The actions of the pretty printer when a piece of output is too large to\nfit in the space available can be precisely controlled.  Three concepts\nunderlie the way these operations work--logical blocks , conditional\nnewlines , and sections .  Before proceeding further, it is important to\ndefine these terms.\nThe first line of Figure 22-3 shows a schematic piece of output.  Each of\nthe characters in the output is represented by \"-\".  The positions of\nconditional newlines are indicated by digits.  The beginnings and ends of\nlogical blocks are indicated by \"<\" and \">\" respectively.\nThe output as a whole is a logical block and the outermost section.  This\nsection is indicated by the 0's on the second line of Figure 1.  Logical\nblocks nested within the output are specified by the macro\npprint-logical-block.  Conditional newline positions are specified by\ncalls to pprint-newline.  Each conditional newline defines two sections\n(one before it and one after it) and is associated with a third (the\nsection immediately containing it).\nThe section after a conditional newline consists of: all the output up to,\nbut not including, (a) the next conditional newline immediately contained\nin the same logical block; or if (a) is not applicable, (b) the next\nnewline that is at a lesser level of nesting in logical blocks; or if (b)\nis not applicable, (c) the end of the output.\nThe section before a conditional newline consists of: all the output back\nto, but not including, (a) the previous conditional newline that is\nimmediately contained in the same logical block; or if (a) is not\napplicable, (b) the beginning of the immediately containing logical block.\nThe last four lines in Figure 1 indicate the sections before and after the\nfour conditional newlines.\nThe section immediately containing a conditional newline is the shortest\nsection that contains the conditional newline in question.  In Figure 22-3,\nthe first conditional newline is immediately contained in the section\nmarked with 0's, the second and third conditional newlines are immediately\ncontained in the section before the fourth conditional newline, and the\nfourth conditional newline is immediately contained in the section after\nthe first conditional newline.\n      <-1---<--<--2---3->--4-->->\n      000000000000000000000000000\n      11 111111111111111111111111\n                22 222\n                   333 3333\n             44444444444444 44444\n  Figure 22-2: Example of Logical Blocks, Conditional Newlines, and Sections\nWhenever possible, the pretty printer displays the entire contents of a\nsection on a single line.  However, if the section is too long to fit in\nthe space available, line breaks are inserted at conditional newline\npositions within the section.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: Dynamic Control of the Arrangement of Output,  Next: Format Directive Interface,  Prev: Pretty Printer Concepts,  Up: Pretty Printer Concepts\n\nDynamic Control of the Arrangement of Output\n............................................\n\nThe actions of the pretty printer when a piece of output is too large to\nfit in the space available can be precisely controlled.  Three concepts\nunderlie the way these operations work--logical blocks , conditional\nnewlines , and sections .  Before proceeding further, it is important to\ndefine these terms.\n\nThe first line of Figure 22-3 shows a schematic piece of output.  Each of\nthe characters in the output is represented by \"-\".  The positions of\nconditional newlines are indicated by digits.  The beginnings and ends of\nlogical blocks are indicated by \"<\" and \">\" respectively.\n\nThe output as a whole is a logical block and the outermost section.  This\nsection is indicated by the 0's on the second line of Figure 1.  Logical\nblocks nested within the output are specified by the macro\npprint-logical-block.  Conditional newline positions are specified by\ncalls to pprint-newline.  Each conditional newline defines two sections\n(one before it and one after it) and is associated with a third (the\nsection immediately containing it).\n\nThe section after a conditional newline consists of: all the output up to,\nbut not including, (a) the next conditional newline immediately contained\nin the same logical block; or if (a) is not applicable, (b) the next\nnewline that is at a lesser level of nesting in logical blocks; or if (b)\nis not applicable, (c) the end of the output.\n\nThe section before a conditional newline consists of: all the output back\nto, but not including, (a) the previous conditional newline that is\nimmediately contained in the same logical block; or if (a) is not\napplicable, (b) the beginning of the immediately containing logical block.\nThe last four lines in Figure 1 indicate the sections before and after the\nfour conditional newlines.\n\nThe section immediately containing a conditional newline is the shortest\nsection that contains the conditional newline in question.  In Figure 22-3,\nthe first conditional newline is immediately contained in the section\nmarked with 0's, the second and third conditional newlines are immediately\ncontained in the section before the fourth conditional newline, and the\nfourth conditional newline is immediately contained in the section after\nthe first conditional newline.\n\n      <-1---<--<--2---3->--4-->->\n      000000000000000000000000000\n      11 111111111111111111111111\n                22 222\n                   333 3333\n             44444444444444 44444\n\n  Figure 22-2: Example of Logical Blocks, Conditional Newlines, and Sections\n\nWhenever possible, the pretty printer displays the entire contents of a\nsection on a single line.  However, if the section is too long to fit in\nthe space available, line breaks are inserted at conditional newline\npositions within the section.\n\n"
}