{
    "name": "rename-file",
    "prev": "file-write-date",
    "next": "delete-file",
    "up": "Files Dictionary",
    "header": {
        "type": "Function",
        "text": "rename-file"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "rename-file",
                    "text": " filespec new-name =>  defaulted-new-name, old-truename,new-truename\n\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "filespec",
                    "desc": "a pathname designator."
                },
                {
                    "name": "new-name",
                    "desc": "a pathname designator other than a stream."
                },
                {
                    "name": "defaulted-new-name",
                    "desc": "a pathname"
                },
                {
                    "name": "old-truename",
                    "desc": "a physical pathname."
                },
                {
                    "name": "new-truename",
                    "desc": "a physical pathname."
                }
            ]
        },
        {
            "type": "Description",
            "text": "rename-file modifies the file system in such a way that the file indicated\nby filespec is renamed to defaulted-new-name.\nIt is an error to specify a filename containing a wild component, for\nfilespec to contain a nil component where the file system does not permit\na nil component, or for the result of defaulting missing components of\nnew-name from filespec to contain a nil component where the file system\ndoes not permit a nil component.\nIf new-name is a logical pathname, rename-file returns a logical pathname\nas its primary value.\nrename-file returns three values if successful.  The primary value,\ndefaulted-new-name, is the resulting name which is composed of new-name\nwith any missing components filled in by performing a merge-pathnames\noperation using filespec as the defaults.  The secondary value,\nold-truename, is the truename of the file before it was renamed.  The\ntertiary value, new-truename, is the truename of the file after it was\nrenamed.\nIf the filespec designator is an open stream, then the stream itself and\nthe file associated with it are affected (if the file system permits).\n"
        },
        {
            "type": "Examples",
            "text": "     ;; An example involving logical pathnames.\n      (with-open-file (stream \"sys:chemistry;lead.text\"\n                              :direction :output :if-exists :error)\n        (princ \"eureka\" stream)\n        (values (pathname stream) (truename stream)))\n     =>  #P\"SYS:CHEMISTRY;LEAD.TEXT.NEWEST\", #P\"Q:>sys>chem>lead.text.1\"\n      (rename-file \"sys:chemistry;lead.text\" \"gold.text\")\n     =>  #P\"SYS:CHEMISTRY;GOLD.TEXT.NEWEST\",\n        #P\"Q:>sys>chem>lead.text.1\",\n        #P\"Q:>sys>chem>gold.text.1\"\n"
        },
        {
            "type": "Exceptional Situations",
            "text": "If the renaming operation is not successful, an error of type file-error\nis signaled.\nAn error of type file-error might be signaled if filespec is wild.\n"
        },
        {
            "type": "See Also",
            "text": "*Note truename:: , pathname, logical-pathname, *Note File System\nConcepts::,\n*Note Pathnames as Filenames::\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: rename-file,  Next: delete-file,  Prev: file-write-date,  Up: Files Dictionary\n\nrename-file                                                      [Function]\n---------------------------------------------------------------------------\n\n`rename-file'  filespec new-name =>  defaulted-new-name, old-truename,\nnew-truename\n\nArguments and Values::\n......................\n\nfilespec--a pathname designator.\n\nnew-name--a pathname designator other than a stream.\n\ndefaulted-new-name--a pathname\n\nold-truename--a physical pathname.\n\nnew-truename--a physical pathname.\n\nDescription::\n.............\n\nrename-file modifies the file system in such a way that the file indicated\nby filespec is renamed to defaulted-new-name.\n\nIt is an error to specify a filename containing a wild component, for\nfilespec to contain a nil component where the file system does not permit\na nil component, or for the result of defaulting missing components of\nnew-name from filespec to contain a nil component where the file system\ndoes not permit a nil component.\n\nIf new-name is a logical pathname, rename-file returns a logical pathname\nas its primary value.\n\nrename-file returns three values if successful.  The primary value,\ndefaulted-new-name, is the resulting name which is composed of new-name\nwith any missing components filled in by performing a merge-pathnames\noperation using filespec as the defaults.  The secondary value,\nold-truename, is the truename of the file before it was renamed.  The\ntertiary value, new-truename, is the truename of the file after it was\nrenamed.\n\nIf the filespec designator is an open stream, then the stream itself and\nthe file associated with it are affected (if the file system permits).\n\nExamples::\n..........\n\n     ;; An example involving logical pathnames.\n      (with-open-file (stream \"sys:chemistry;lead.text\"\n                              :direction :output :if-exists :error)\n        (princ \"eureka\" stream)\n        (values (pathname stream) (truename stream)))\n     =>  #P\"SYS:CHEMISTRY;LEAD.TEXT.NEWEST\", #P\"Q:>sys>chem>lead.text.1\"\n      (rename-file \"sys:chemistry;lead.text\" \"gold.text\")\n     =>  #P\"SYS:CHEMISTRY;GOLD.TEXT.NEWEST\",\n        #P\"Q:>sys>chem>lead.text.1\",\n        #P\"Q:>sys>chem>gold.text.1\"\n\nExceptional Situations::\n........................\n\nIf the renaming operation is not successful, an error of type file-error\nis signaled.\n\nAn error of type file-error might be signaled if filespec is wild.\n\nSee Also::\n..........\n\n*Note truename:: , pathname, logical-pathname, *Note File System\nConcepts::,\n\n*Note Pathnames as Filenames::\n\n"
}