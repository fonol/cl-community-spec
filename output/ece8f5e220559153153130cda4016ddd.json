{
    "name": "Tilde Asterisk-> Go-To",
    "prev": "FORMAT Control-Flow Operations",
    "next": "Tilde Left-Bracket-> Conditional Expression",
    "up": "FORMAT Control-Flow Operations",
    "header": {
        "type": null,
        "text": null
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Tilde Asterisk: Go-To",
            "text": "The next arg is ignored.  ~n* ignores the next n arguments.\n~:* backs up in the list of arguments so that the argument last processed\nwill be processed again.  ~n:* backs up n arguments.\nWhen within a ~{ construct (see below), the ignoring (in either direction)\nis relative to the list of arguments being processed by the iteration.\n~n@* goes to the nth arg, where 0 means the first one; n defaults to 0, so\n~@* goes back to the first arg.  Directives after a ~n@* will take\narguments in sequence beginning with the one gone to.  When within a ~{\nconstruct, the \"goto\" is relative to the list of arguments being processed\nby the iteration.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: Tilde Asterisk-> Go-To,  Next: Tilde Left-Bracket-> Conditional Expression,  Prev: FORMAT Control-Flow Operations,  Up: FORMAT Control-Flow Operations\n\nTilde Asterisk: Go-To\n.....................\n\nThe next arg is ignored.  ~n* ignores the next n arguments.\n\n~:* backs up in the list of arguments so that the argument last processed\nwill be processed again.  ~n:* backs up n arguments.\n\nWhen within a ~{ construct (see below), the ignoring (in either direction)\nis relative to the list of arguments being processed by the iteration.\n\n~n@* goes to the nth arg, where 0 means the first one; n defaults to 0, so\n~@* goes back to the first arg.  Directives after a ~n@* will take\narguments in sequence beginning with the one gone to.  When within a ~{\nconstruct, the \"goto\" is relative to the list of arguments being processed\nby the iteration.\n\n"
}