{
    "name": "Reinitializing an Instance",
    "prev": "Changing the Class of an Instance",
    "next": "Meta-Objects",
    "up": "Objects",
    "header": {
        "type": null,
        "text": "Reinitializing an Instance"
    },
    "sections": [
        {
            "type": "",
            "text": "The generic function reinitialize-instance may be used to change the\nvalues of slots according to initialization arguments.\nThe process of reinitialization changes the values of some slots and\nperforms any user-defined actions.  It does not modify the structure of an\ninstance to add or delete slots, and it does not use any :initform forms\nto initialize slots.\nThe generic function reinitialize-instance may be called directly.  It\ntakes one required argument, the instance.  It also takes any number of\ninitialization arguments to be used by methods for reinitialize-instance\nor for shared-initialize. The arguments after the required instance must\nform an initialization argument list.\nThere is a system-supplied primary method for reinitialize-instance whose\nparameter specializer is the class standard-object.  First this method\nchecks the validity of initialization arguments and signals an error if an\ninitialization argument is supplied that is not declared as valid.  (For\nmore information, see *Note Declaring the Validity of Initialization\nArguments::.) Then it calls the generic function shared-initialize with\nthe following arguments: the instance, nil, and the initialization\narguments it received.\n* Menu:\n* Customizing Reinitialization::\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: Reinitializing an Instance,  Next: Meta-Objects,  Prev: Changing the Class of an Instance,  Up: Objects\n\nReinitializing an Instance\n==========================\n\nThe generic function reinitialize-instance may be used to change the\nvalues of slots according to initialization arguments.\n\nThe process of reinitialization changes the values of some slots and\nperforms any user-defined actions.  It does not modify the structure of an\ninstance to add or delete slots, and it does not use any :initform forms\nto initialize slots.\n\nThe generic function reinitialize-instance may be called directly.  It\ntakes one required argument, the instance.  It also takes any number of\ninitialization arguments to be used by methods for reinitialize-instance\nor for shared-initialize. The arguments after the required instance must\nform an initialization argument list.\n\nThere is a system-supplied primary method for reinitialize-instance whose\nparameter specializer is the class standard-object.  First this method\nchecks the validity of initialization arguments and signals an error if an\ninitialization argument is supplied that is not declared as valid.  (For\nmore information, see *Note Declaring the Validity of Initialization\nArguments::.) Then it calls the generic function shared-initialize with\nthe following arguments: the instance, nil, and the initialization\narguments it received.\n\n* Menu:\n\n* Customizing Reinitialization::\n\n"
}