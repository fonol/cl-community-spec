{
    "name": "sqrt",
    "prev": "signum",
    "next": "random-state",
    "up": "Numbers Dictionary",
    "header": {
        "type": "Function",
        "text": "sqrt, isqrt"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "sqrt",
                    "text": " number =>  root\n"
                },
                {
                    "name": "isqrt",
                    "text": " natural =>  natural-root\n\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "number, root",
                    "desc": "a number."
                },
                {
                    "name": "natural, natural-root",
                    "desc": "a non-negative integer."
                }
            ]
        },
        {
            "type": "Description",
            "text": "sqrt and isqrt compute square roots.\nsqrt returns the principal square root of number.  If the number is not a\ncomplex but is negative, then the result is a complex.\nisqrt returns the greatest integer less than or equal to the exact\npositive square root of natural.\nIf number is a positive rational, it is implementation-dependent whether\nroot is a rational or a float.  If number is a negative rational, it is\nimplementation-dependent whether root is a complex rational or a complex\nfloat.\nThe mathematical definition of complex square root (whether or not minus\nzero is supported) follows:\n(sqrt x) = (exp (/ (log x) 2))\nThe branch cut for square root lies along the negative real axis,\ncontinuous with quadrant II.  The range consists of the right half-plane,\nincluding the non-negative imaginary axis and excluding the negative\nimaginary axis.\n"
        },
        {
            "type": "Examples",
            "text": "      (sqrt 9.0) =>  3.0\n      (sqrt -9.0) =>  #C(0.0 3.0)\n      (isqrt 9) =>  3\n      (sqrt 12) =>  3.4641016\n      (isqrt 12) =>  3\n      (isqrt 300) =>  17\n      (isqrt 325) =>  18\n      (sqrt 25)\n     =>  5\n     OR=> 5.0\n      (isqrt 25) =>  5\n      (sqrt -1) =>  #C(0.0 1.0)\n      (sqrt #c(0 2)) =>  #C(1.0 1.0)\n"
        },
        {
            "type": "Exceptional Situations",
            "text": "The function sqrt should signal type-error if its argument is not a number.\nThe function isqrt should signal type-error if its argument is not a\nnon-negative integer.\nThe functions sqrt and isqrt might signal arithmetic-error.\n"
        },
        {
            "type": "See Also",
            "text": "*Note exp; expt:: , *Note log:: , *Note Rule of Float Substitutability::\n"
        },
        {
            "type": "Notes",
            "text": "      (isqrt x) == (values (floor (sqrt x)))\nbut it is potentially more efficient.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: sqrt,  Next: random-state,  Prev: signum,  Up: Numbers Dictionary\n\nsqrt, isqrt                                                      [Function]\n---------------------------------------------------------------------------\n\n`sqrt'  number =>  root\n\n`isqrt'  natural =>  natural-root\n\nArguments and Values::\n......................\n\nnumber, root--a number.\n\nnatural, natural-root--a non-negative integer.\n\nDescription::\n.............\n\nsqrt and isqrt compute square roots.\n\nsqrt returns the principal square root of number.  If the number is not a\ncomplex but is negative, then the result is a complex.\n\nisqrt returns the greatest integer less than or equal to the exact\npositive square root of natural.\n\nIf number is a positive rational, it is implementation-dependent whether\nroot is a rational or a float.  If number is a negative rational, it is\nimplementation-dependent whether root is a complex rational or a complex\nfloat.\n\nThe mathematical definition of complex square root (whether or not minus\nzero is supported) follows:\n\n(sqrt x) = (exp (/ (log x) 2))\n\nThe branch cut for square root lies along the negative real axis,\ncontinuous with quadrant II.  The range consists of the right half-plane,\nincluding the non-negative imaginary axis and excluding the negative\nimaginary axis.\n\nExamples::\n..........\n\n      (sqrt 9.0) =>  3.0\n      (sqrt -9.0) =>  #C(0.0 3.0)\n      (isqrt 9) =>  3\n      (sqrt 12) =>  3.4641016\n      (isqrt 12) =>  3\n      (isqrt 300) =>  17\n      (isqrt 325) =>  18\n      (sqrt 25)\n     =>  5\n     OR=> 5.0\n      (isqrt 25) =>  5\n      (sqrt -1) =>  #C(0.0 1.0)\n      (sqrt #c(0 2)) =>  #C(1.0 1.0)\n\nExceptional Situations::\n........................\n\nThe function sqrt should signal type-error if its argument is not a number.\n\nThe function isqrt should signal type-error if its argument is not a\nnon-negative integer.\n\nThe functions sqrt and isqrt might signal arithmetic-error.\n\nSee Also::\n..........\n\n*Note exp; expt:: , *Note log:: , *Note Rule of Float Substitutability::\n\nNotes::\n.......\n\n      (isqrt x) == (values (floor (sqrt x)))\n\nbut it is potentially more efficient.\n\n"
}