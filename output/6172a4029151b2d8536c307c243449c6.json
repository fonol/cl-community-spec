{
    "name": "Destructuring Lambda Lists",
    "prev": "Macro Lambda Lists",
    "next": "Boa Lambda Lists",
    "up": "Lambda Lists",
    "header": {
        "type": null,
        "text": "Destructuring Lambda Lists"
    },
    "sections": [
        {
            "type": "",
            "text": "A destructuring lambda list is used by destructuring-bind.\nDestructuring lambda lists are closely related to macro lambda lists; see\n*Note Macro Lambda Lists::.  A destructuring lambda list can contain all\nof the lambda list keywords listed for macro lambda lists except for\n&environment, and supports destructuring in the same way.  Inner lambda\nlists nested within a macro lambda list have the syntax of destructuring\nlambda lists.\nA destructuring lambda list has the following syntax:\nreqvars ::={var | !lambda-list}*\noptvars ::=[&optional {var | ({var | !lambda-list} [init-form [supplied-p-parameter]])}*]\nrestvar ::=[{&rest | &body} {var | !lambda-list}]\nkeyvars ::=[&key {var | ({var | (keyword-name {var | !lambda-list})} [init-form [supplied-p-parameter]])}*\n            [&allow-other-keys]]\nauxvars ::=[&aux {var | (var [init-form])}*]\nenvvar ::=[&environment var]\nwholevar ::=[&whole var]\nlambda-list ::=(!wholevar !reqvars !optvars !restvar !keyvars !auxvars) |\n                (!wholevar !reqvars !optvars . var)\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: Destructuring Lambda Lists,  Next: Boa Lambda Lists,  Prev: Macro Lambda Lists,  Up: Lambda Lists\n\nDestructuring Lambda Lists\n--------------------------\n\nA destructuring lambda list is used by destructuring-bind.\n\nDestructuring lambda lists are closely related to macro lambda lists; see\n*Note Macro Lambda Lists::.  A destructuring lambda list can contain all\nof the lambda list keywords listed for macro lambda lists except for\n&environment, and supports destructuring in the same way.  Inner lambda\nlists nested within a macro lambda list have the syntax of destructuring\nlambda lists.\n\nA destructuring lambda list has the following syntax:\n\nreqvars ::={var | !lambda-list}*\n\noptvars ::=[&optional {var | ({var | !lambda-list} [init-form [supplied-p-parameter]])}*]\n\nrestvar ::=[{&rest | &body} {var | !lambda-list}]\n\nkeyvars ::=[&key {var | ({var | (keyword-name {var | !lambda-list})} [init-form [supplied-p-parameter]])}*\n            [&allow-other-keys]]\n\nauxvars ::=[&aux {var | (var [init-form])}*]\n\nenvvar ::=[&environment var]\n\nwholevar ::=[&whole var]\n\nlambda-list ::=(!wholevar !reqvars !optvars !restvar !keyvars !auxvars) |\n                (!wholevar !reqvars !optvars . var)\n\n"
}