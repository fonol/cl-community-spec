{
    "name": "makunbound",
    "prev": "boundp",
    "next": "set",
    "up": "Symbols Dictionary",
    "header": {
        "type": "Function",
        "text": "makunbound"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "makunbound",
                    "text": " symbol =>  symbol\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "symbol",
                    "desc": "a symbol"
                }
            ]
        },
        {
            "type": "Description",
            "text": "Makes the symbol be unbound, regardless of whether it was previously bound.\n"
        },
        {
            "type": "Examples",
            "text": "      (setf (symbol-value 'a) 1)\n      (boundp 'a) =>  true\n      a =>  1\n      (makunbound 'a) =>  A\n      (boundp 'a) =>  false\n"
        },
        {
            "type": "Side Effects",
            "text": "The value cell of symbol is modified.\n"
        },
        {
            "type": "Exceptional Situations",
            "text": "Should signal an error of type type-error if symbol is not a symbol.\n"
        },
        {
            "type": "See Also",
            "text": "*Note boundp:: , *Note fmakunbound::\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: makunbound,  Next: set,  Prev: boundp,  Up: Symbols Dictionary\n\nmakunbound                                                       [Function]\n---------------------------------------------------------------------------\n\n`makunbound'  symbol =>  symbol\n\nArguments and Values::\n......................\n\nsymbol--a symbol\n\nDescription::\n.............\n\nMakes the symbol be unbound, regardless of whether it was previously bound.\n\nExamples::\n..........\n\n      (setf (symbol-value 'a) 1)\n      (boundp 'a) =>  true\n      a =>  1\n      (makunbound 'a) =>  A\n      (boundp 'a) =>  false\n\nSide Effects::\n..............\n\nThe value cell of symbol is modified.\n\nExceptional Situations::\n........................\n\nShould signal an error of type type-error if symbol is not a symbol.\n\nSee Also::\n..........\n\n*Note boundp:: , *Note fmakunbound::\n\n"
}