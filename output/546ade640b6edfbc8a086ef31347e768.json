{
    "name": "float",
    "prev": "decode-float",
    "next": "floatp",
    "up": "Numbers Dictionary",
    "header": {
        "type": "Function",
        "text": "float"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "float",
                    "text": " number &optional prototype =>  float\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "number",
                    "desc": "a real."
                },
                {
                    "name": "prototype",
                    "desc": "a float."
                },
                {
                    "name": "float",
                    "desc": "a float."
                }
            ]
        },
        {
            "type": "Description",
            "text": "float converts a\nreal\nnumber to a float.\nIf a prototype is supplied, a float is returned that is mathematically\nequal to number but has the same format as prototype.\nIf prototype is not supplied, then if the number is already a float, it is\nreturned; otherwise, a float is returned that is mathematically equal to\nnumber but is a single float.\n"
        },
        {
            "type": "Examples",
            "text": "      (float 0) =>  0.0\n      (float 1 .5) =>  1.0\n      (float 1.0) =>  1.0\n      (float 1/2) =>  0.5\n     =>  1.0d0\n     OR=> 1.0\n      (eql (float 1.0 1.0d0) 1.0d0) =>  true\n"
        },
        {
            "type": "See Also",
            "text": "*Note coerce::\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: float,  Next: floatp,  Prev: decode-float,  Up: Numbers Dictionary\n\nfloat                                                            [Function]\n---------------------------------------------------------------------------\n\n`float'  number &optional prototype =>  float\n\nArguments and Values::\n......................\n\nnumber--a real.\n\nprototype--a float.\n\nfloat--a float.\n\nDescription::\n.............\n\nfloat converts a\n\nreal\n\nnumber to a float.\n\nIf a prototype is supplied, a float is returned that is mathematically\nequal to number but has the same format as prototype.\n\nIf prototype is not supplied, then if the number is already a float, it is\nreturned; otherwise, a float is returned that is mathematically equal to\nnumber but is a single float.\n\nExamples::\n..........\n\n      (float 0) =>  0.0\n      (float 1 .5) =>  1.0\n      (float 1.0) =>  1.0\n      (float 1/2) =>  0.5\n     =>  1.0d0\n     OR=> 1.0\n      (eql (float 1.0 1.0d0) 1.0d0) =>  true\n\nSee Also::\n..........\n\n*Note coerce::\n\n"
}