{
    "name": "allocate-instance",
    "prev": "ensure-generic-function",
    "next": "reinitialize-instance",
    "up": "Objects Dictionary",
    "header": {
        "type": "Standard Generic Function",
        "text": "allocate-instance"
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "allocate-instance",
                    "text": " class &rest initargs &key &allow-other-keys =>new-instance\n\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "allocate-instance",
                    "text": " (class standard-class) &rest initargs\n"
                },
                {
                    "name": "allocate-instance",
                    "text": " (class structure-class) &rest initargs\n\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "class",
                    "desc": "a class."
                },
                {
                    "name": "initargs",
                    "desc": "a list of keyword/value pairs (initialization argument names and"
                },
                {
                    "name": "initargs",
                    "desc": "a list of keyword/value pairs (initialization argument names andvalues).\n"
                },
                {
                    "name": "new-instance",
                    "desc": "an object whose class is class."
                }
            ]
        },
        {
            "type": "Description",
            "text": "The generic function allocate-instance creates and returns a new instance\nof the class, without initializing it.  When the class is a standard\nclass, this means that the slots are unbound; when the class is a\nstructure class, this means the slots' values are unspecified.\nThe caller of allocate-instance is expected to have already checked the\ninitialization arguments.\nThe generic function allocate-instance is called by make-instance, as\ndescribed in *Note Object Creation and Initialization::.\n"
        },
        {
            "type": "See Also",
            "text": "*Note defclass:: , *Note make-instance:: , *Note class-of:: , *Note Object\nCreation and Initialization::\n"
        },
        {
            "type": "Notes",
            "text": "The consequences of adding methods to allocate-instance is unspecified.\nThis capability might be added by the Metaobject Protocol.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: allocate-instance,  Next: reinitialize-instance,  Prev: ensure-generic-function,  Up: Objects Dictionary\n\nallocate-instance                               [Standard Generic Function]\n---------------------------------------------------------------------------\n\nSyntax::\n........\n\n`allocate-instance'  class &rest initargs &key &allow-other-keys =>\nnew-instance\n\nMethod Signatures::\n...................\n\n`allocate-instance'  (class standard-class) &rest initargs\n\n`allocate-instance'  (class structure-class) &rest initargs\n\nArguments and Values::\n......................\n\nclass--a class.\n\ninitargs--a list of keyword/value pairs (initialization argument names and\nvalues).\n\nnew-instance--an object whose class is class.\n\nDescription::\n.............\n\nThe generic function allocate-instance creates and returns a new instance\nof the class, without initializing it.  When the class is a standard\nclass, this means that the slots are unbound; when the class is a\nstructure class, this means the slots' values are unspecified.\n\nThe caller of allocate-instance is expected to have already checked the\ninitialization arguments.\n\nThe generic function allocate-instance is called by make-instance, as\ndescribed in *Note Object Creation and Initialization::.\n\nSee Also::\n..........\n\n*Note defclass:: , *Note make-instance:: , *Note class-of:: , *Note Object\nCreation and Initialization::\n\nNotes::\n.......\n\nThe consequences of adding methods to allocate-instance is unspecified.\nThis capability might be added by the Metaobject Protocol.\n\n"
}