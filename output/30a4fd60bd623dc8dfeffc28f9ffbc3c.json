{
    "name": "Specifiers for the required parameters",
    "prev": "Ordinary Lambda Lists",
    "next": "Specifiers for optional parameters",
    "up": "Ordinary Lambda Lists",
    "header": {
        "type": null,
        "text": null
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Specifiers for the required parameters",
            "text": "These are all the parameter specifiers up to the first lambda list keyword;\nif there are no lambda list keywords, then all the specifiers are for\nrequired parameters.  Each required parameter is specified by a parameter\nvariable var.  var is bound as a lexical variable unless it is declared\nspecial.\nIf there are n required parameters (n may be zero), there must be at least\nn passed arguments, and the required parameters are bound to the first n\npassed arguments; see *Note Error Checking in Function Calls::.  The other\nparameters are then processed using any remaining arguments.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: Specifiers for the required parameters,  Next: Specifiers for optional parameters,  Prev: Ordinary Lambda Lists,  Up: Ordinary Lambda Lists\n\nSpecifiers for the required parameters\n......................................\n\nThese are all the parameter specifiers up to the first lambda list keyword;\nif there are no lambda list keywords, then all the specifiers are for\nrequired parameters.  Each required parameter is specified by a parameter\nvariable var.  var is bound as a lexical variable unless it is declared\nspecial.\n\nIf there are n required parameters (n may be zero), there must be at least\nn passed arguments, and the required parameters are bound to the first n\npassed arguments; see *Note Error Checking in Function Calls::.  The other\nparameters are then processed using any remaining arguments.\n\n"
}