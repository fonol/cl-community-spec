{
    "name": "Examples of WHILE and UNTIL clauses",
    "prev": "Examples of ALWAYS",
    "next": null,
    "up": "Termination Test Clauses",
    "header": {
        "type": null,
        "text": null
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Examples of WHILE and UNTIL clauses",
            "text": "      (loop while (hungry-p) do (eat))\n     ;; UNTIL NOT is equivalent to WHILE.\n      (loop until (not (hungry-p)) do (eat))\n     ;; Collect the length and the items of STACK.\n      (let ((stack '(a b c d e f)))\n        (loop for item = (length stack) then (pop stack)\n              collect item\n              while stack))\n     =>  (6 A B C D E F)\n     ;; Use WHILE to terminate a loop that otherwise wouldn't terminate.\n     ;; Note that WHILE occurs after the WHEN.\n      (loop for i fixnum from 3\n            when (oddp i) collect i\n            while (< i 5))\n     =>  (3 5)\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: Examples of WHILE and UNTIL clauses,  Prev: Examples of ALWAYS,  Up: Termination Test Clauses\n\nExamples of WHILE and UNTIL clauses\n...................................\n\n      (loop while (hungry-p) do (eat))\n     \n     ;; UNTIL NOT is equivalent to WHILE.\n      (loop until (not (hungry-p)) do (eat))\n     \n     ;; Collect the length and the items of STACK.\n      (let ((stack '(a b c d e f)))\n        (loop for item = (length stack) then (pop stack)\n              collect item\n              while stack))\n     =>  (6 A B C D E F)\n     \n     ;; Use WHILE to terminate a loop that otherwise wouldn't terminate.\n     ;; Note that WHILE occurs after the WHEN.\n      (loop for i fixnum from 3\n            when (oddp i) collect i\n            while (< i 5))\n     =>  (3 5)\n\n"
}