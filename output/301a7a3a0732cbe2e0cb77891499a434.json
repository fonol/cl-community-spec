{
    "name": "find-package",
    "prev": "find-symbol",
    "next": "find-all-symbols",
    "up": "Packages Dictionary",
    "header": {
        "type": "Function",
        "text": "find-package"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "find-package",
                    "text": " name =>  package\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "name",
                    "desc": "a string designator or a package object."
                },
                {
                    "name": "package",
                    "desc": "a package object or nil."
                }
            ]
        },
        {
            "type": "Description",
            "text": "If name is a string designator, find-package locates and returns the\npackage whose name or nickname is name.  This search is case sensitive.\nIf there is no such package, find-package returns nil.\nIf name is a package object, that package object is returned.\n"
        },
        {
            "type": "Examples",
            "text": "      (find-package 'common-lisp) =>  #<PACKAGE \"COMMON-LISP\">\n      (find-package \"COMMON-LISP-USER\") =>  #<PACKAGE \"COMMON-LISP-USER\">\n      (find-package 'not-there) =>  NIL\n"
        },
        {
            "type": "Affected By",
            "text": "The set of packages created by the implementation.\ndefpackage, delete-package, make-package, rename-package\n"
        },
        {
            "type": "See Also",
            "text": "*Note make-package::\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: find-package,  Next: find-all-symbols,  Prev: find-symbol,  Up: Packages Dictionary\n\nfind-package                                                     [Function]\n---------------------------------------------------------------------------\n\n`find-package'  name =>  package\n\nArguments and Values::\n......................\n\nname--a string designator or a package object.\n\npackage--a package object or nil.\n\nDescription::\n.............\n\nIf name is a string designator, find-package locates and returns the\npackage whose name or nickname is name.  This search is case sensitive.\nIf there is no such package, find-package returns nil.\n\nIf name is a package object, that package object is returned.\n\nExamples::\n..........\n\n      (find-package 'common-lisp) =>  #<PACKAGE \"COMMON-LISP\">\n      (find-package \"COMMON-LISP-USER\") =>  #<PACKAGE \"COMMON-LISP-USER\">\n      (find-package 'not-there) =>  NIL\n\nAffected By::\n.............\n\nThe set of packages created by the implementation.\n\ndefpackage, delete-package, make-package, rename-package\n\nSee Also::\n..........\n\n*Note make-package::\n\n"
}