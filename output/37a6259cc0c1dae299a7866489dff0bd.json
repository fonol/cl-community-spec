{
    "name": "null",
    "prev": "endp",
    "next": "nconc",
    "up": "Conses Dictionary",
    "header": {
        "type": "Function",
        "text": "null"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "null",
                    "text": " object =>  boolean\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "object",
                    "desc": "an object."
                },
                {
                    "name": "boolean",
                    "desc": "a boolean."
                }
            ]
        },
        {
            "type": "Description",
            "text": "Returns t if object is the empty list; otherwise, returns nil.\n"
        },
        {
            "type": "Examples",
            "text": "      (null '()) =>  T\n      (null nil) =>  T\n      (null t) =>  NIL\n      (null 1) =>  NIL\n"
        },
        {
            "type": "See Also",
            "text": "*Note not::\n"
        },
        {
            "type": "Notes",
            "text": "null is intended to be used to test for the empty list whereas not is\nintended to be used to invert a boolean (or generalized boolean).\nOperationally, null and not compute the same result; which to use is a\nmatter of style.\n      (null object) == (typep object 'null) == (eq object '())\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: null,  Next: nconc,  Prev: endp,  Up: Conses Dictionary\n\nnull                                                             [Function]\n---------------------------------------------------------------------------\n\n`null'  object =>  boolean\n\nArguments and Values::\n......................\n\nobject--an object.\n\nboolean--a boolean.\n\nDescription::\n.............\n\nReturns t if object is the empty list; otherwise, returns nil.\n\nExamples::\n..........\n\n      (null '()) =>  T\n      (null nil) =>  T\n      (null t) =>  NIL\n      (null 1) =>  NIL\n\nSee Also::\n..........\n\n*Note not::\n\nNotes::\n.......\n\nnull is intended to be used to test for the empty list whereas not is\nintended to be used to invert a boolean (or generalized boolean).\nOperationally, null and not compute the same result; which to use is a\nmatter of style.\n\n      (null object) == (typep object 'null) == (eq object '())\n\n"
}