{
    "name": "number",
    "prev": "Numbers Dictionary",
    "next": "complex (System Class)",
    "up": "Numbers Dictionary",
    "header": {
        "type": "System Class",
        "text": "number"
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Class Precedence List",
            "text": "",
            "items": [
                {
                    "name": "number",
                    "link": "b1bc248a7ff2b2e95569f56de68615df"
                },
                {
                    "name": " t",
                    "link": null
                }
            ]
        },
        {
            "type": "Description",
            "text": "The type number contains objects which represent mathematical numbers.\nThe types real and complex are disjoint subtypes of number.\nThe function = tests for numerical equality.  The function eql, when its\narguments are both numbers, tests that they have both the same type and\nnumerical value.  Two numbers that are the same under eql or = are not\nnecessarily the same under eq.\n"
        },
        {
            "type": "Notes",
            "text": "Common Lisp differs from mathematics on some naming issues.  In\nmathematics, the set of real numbers is traditionally described as a\nsubset of the complex numbers, but in Common Lisp, the type real and the\ntype complex are disjoint.  The Common Lisp type which includes all\nmathematical complex numbers is called number.  The reasons for these\ndifferences include historical precedent, compatibility with most other\npopular computer languages, and various issues of time and space\nefficiency.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: number,  Next: complex (System Class),  Prev: Numbers Dictionary,  Up: Numbers Dictionary\n\nnumber                                                       [System Class]\n---------------------------------------------------------------------------\n\nClass Precedence List::\n.......................\n\nnumber, t\n\nDescription::\n.............\n\nThe type number contains objects which represent mathematical numbers.\n\nThe types real and complex are disjoint subtypes of number.\n\nThe function = tests for numerical equality.  The function eql, when its\narguments are both numbers, tests that they have both the same type and\nnumerical value.  Two numbers that are the same under eql or = are not\nnecessarily the same under eq.\n\nNotes::\n.......\n\nCommon Lisp differs from mathematics on some naming issues.  In\nmathematics, the set of real numbers is traditionally described as a\nsubset of the complex numbers, but in Common Lisp, the type real and the\ntype complex are disjoint.  The Common Lisp type which includes all\nmathematical complex numbers is called number.  The reasons for these\ndifferences include historical precedent, compatibility with most other\npopular computer languages, and various issues of time and space\nefficiency.\n\n"
}