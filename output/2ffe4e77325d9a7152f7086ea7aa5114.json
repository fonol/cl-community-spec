{
    "name": "max",
    "prev": "=",
    "next": "minusp",
    "up": "Numbers Dictionary",
    "header": {
        "type": "Function",
        "text": "max, min"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "max",
                    "text": " &rest reals^+ =>  max-real\n"
                },
                {
                    "name": "min",
                    "text": " &rest reals^+ =>  min-real\n\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "real",
                    "desc": "a real."
                },
                {
                    "name": "max-real, min-real",
                    "desc": "a real."
                }
            ]
        },
        {
            "type": "Description",
            "text": "max returns the real that is greatest (closest to positive infinity).  min\nreturns the real that is least (closest to negative infinity).\nFor max, the implementation has the choice of returning the largest\nargument as is or applying the rules of floating-point contagion, taking\nall the arguments into consideration for contagion purposes.  Also, if one\nor more of the arguments are =, then any one of them may be chosen as the\nvalue to return.  For example, if the reals are a mixture of rationals and\nfloats, and the largest argument is a rational, then the implementation is\nfree to produce either that rational or its float approximation; if the\nlargest argument is a float of a smaller format than the largest format of\nany float argument, then the implementation is free to return the argument\nin its given format or expanded to the larger format.  Similar remarks\napply to min (replacing \"largest argument\" by \"smallest argument\").\n"
        },
        {
            "type": "Examples",
            "text": "      (max 3) =>  3\n      (min 3) =>  3\n      (max 6 12) =>  12\n      (min 6 12) =>  6\n      (max -6 -12) =>  -6\n      (min -6 -12) =>  -12\n      (max 1 3 2 -7) =>  3\n      (min 1 3 2 -7) =>  -7\n      (max -2 3 0 7) =>  7\n      (min -2 3 0 7) =>  -2\n      (max 5.0 2) =>  5.0\n      (min 5.0 2)\n     =>  2\n     OR=> 2.0\n      (max 3.0 7 1)\n     =>  7\n     OR=> 7.0\n      (min 3.0 7 1)\n     =>  1\n     OR=> 1.0\n      (max 1.0s0 7.0d0) =>  7.0d0\n      (min 1.0s0 7.0d0)\n     =>  1.0s0\n     OR=> 1.0d0\n      (max 3 1 1.0s0 1.0d0)\n     =>  3\n     OR=> 3.0d0\n      (min 3 1 1.0s0 1.0d0)\n     =>  1\n     OR=> 1.0s0\n     OR=> 1.0d0\n"
        },
        {
            "type": "Exceptional Situations",
            "text": "Should signal an error of type type-error if any number is not a real.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: max,  Next: minusp,  Prev: =,  Up: Numbers Dictionary\n\nmax, min                                                         [Function]\n---------------------------------------------------------------------------\n\n`max'  &rest reals^+ =>  max-real\n\n`min'  &rest reals^+ =>  min-real\n\nArguments and Values::\n......................\n\nreal--a real.\n\nmax-real, min-real--a real.\n\nDescription::\n.............\n\nmax returns the real that is greatest (closest to positive infinity).  min\nreturns the real that is least (closest to negative infinity).\n\nFor max, the implementation has the choice of returning the largest\nargument as is or applying the rules of floating-point contagion, taking\nall the arguments into consideration for contagion purposes.  Also, if one\nor more of the arguments are =, then any one of them may be chosen as the\nvalue to return.  For example, if the reals are a mixture of rationals and\nfloats, and the largest argument is a rational, then the implementation is\nfree to produce either that rational or its float approximation; if the\nlargest argument is a float of a smaller format than the largest format of\nany float argument, then the implementation is free to return the argument\nin its given format or expanded to the larger format.  Similar remarks\napply to min (replacing \"largest argument\" by \"smallest argument\").\n\nExamples::\n..........\n\n      (max 3) =>  3\n      (min 3) =>  3\n      (max 6 12) =>  12\n      (min 6 12) =>  6\n      (max -6 -12) =>  -6\n      (min -6 -12) =>  -12\n      (max 1 3 2 -7) =>  3\n      (min 1 3 2 -7) =>  -7\n      (max -2 3 0 7) =>  7\n      (min -2 3 0 7) =>  -2\n      (max 5.0 2) =>  5.0\n      (min 5.0 2)\n     =>  2\n     OR=> 2.0\n      (max 3.0 7 1)\n     =>  7\n     OR=> 7.0\n      (min 3.0 7 1)\n     =>  1\n     OR=> 1.0\n      (max 1.0s0 7.0d0) =>  7.0d0\n      (min 1.0s0 7.0d0)\n     =>  1.0s0\n     OR=> 1.0d0\n      (max 3 1 1.0s0 1.0d0)\n     =>  3\n     OR=> 3.0d0\n      (min 3 1 1.0s0 1.0d0)\n     =>  1\n     OR=> 1.0s0\n     OR=> 1.0d0\n\nExceptional Situations::\n........................\n\nShould signal an error of type type-error if any number is not a real.\n\n"
}