{
    "name": "hash-table-p",
    "prev": "make-hash-table",
    "next": "hash-table-count",
    "up": "Hash Tables Dictionary",
    "header": {
        "type": "Function",
        "text": "hash-table-p"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "hash-table-p",
                    "text": " object =>  generalized-boolean\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "object",
                    "desc": "an object."
                },
                {
                    "name": "generalized-boolean",
                    "desc": "a generalized boolean."
                }
            ]
        },
        {
            "type": "Description",
            "text": "Returns true if object is of type hash-table; otherwise, returns false.\n"
        },
        {
            "type": "Examples",
            "text": "      (setq table (make-hash-table)) =>  #<HASH-TABLE EQL 0/120 32511220>\n      (hash-table-p table) =>  true\n      (hash-table-p 37) =>  false\n      (hash-table-p '((a . 1) (b . 2))) =>  false\n"
        },
        {
            "type": "Notes",
            "text": "      (hash-table-p object) == (typep object 'hash-table)\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: hash-table-p,  Next: hash-table-count,  Prev: make-hash-table,  Up: Hash Tables Dictionary\n\nhash-table-p                                                     [Function]\n---------------------------------------------------------------------------\n\n`hash-table-p'  object =>  generalized-boolean\n\nArguments and Values::\n......................\n\nobject--an object.\n\ngeneralized-boolean--a generalized boolean.\n\nDescription::\n.............\n\nReturns true if object is of type hash-table; otherwise, returns false.\n\nExamples::\n..........\n\n      (setq table (make-hash-table)) =>  #<HASH-TABLE EQL 0/120 32511220>\n      (hash-table-p table) =>  true\n      (hash-table-p 37) =>  false\n      (hash-table-p '((a . 1) (b . 2))) =>  false\n\nNotes::\n.......\n\n      (hash-table-p object) == (typep object 'hash-table)\n\n"
}