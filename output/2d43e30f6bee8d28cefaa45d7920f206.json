{
    "name": "merge-pathnames",
    "prev": "translate-pathname",
    "next": null,
    "up": "Filenames Dictionary",
    "header": {
        "type": "Function",
        "text": "merge-pathnames"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "merge-pathnames",
                    "text": " pathname &optional default-pathname default-version=>  merged-pathname\n\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "pathname",
                    "desc": "a pathname designator."
                },
                {
                    "name": "default-pathname",
                    "desc": "a pathname designator.The default is the value of *default-pathname-defaults*.\n"
                },
                {
                    "name": "default-version",
                    "desc": "a valid pathname version.The default is :newest.\n"
                },
                {
                    "name": "merged-pathname",
                    "desc": "a pathname."
                }
            ]
        },
        {
            "type": "Description",
            "text": "Constructs a pathname from pathname by filling in any unsupplied\ncomponents with the corresponding values from default-pathname and\ndefault-version.\nDefaulting of pathname components is done by filling in components taken\nfrom another pathname.\nThis is especially useful for cases such as a program that has an input\nfile and an output file.  Unspecified components of the output pathname\nwill come from the input pathname, except that the type should not default\nto the type of the input pathname but rather to the appropriate default\ntype for output from the program; for example, see the function\ncompile-file-pathname.\nIf no version is supplied, default-version is used.  If default-version is\nnil, the version component will remain unchanged.\nIf pathname explicitly specifies a host and not a device, and if the host\ncomponent of default-pathname matches the host component of pathname, then\nthe device is taken from the default-pathname; otherwise the device will\nbe the default file device for that host.  If pathname does not specify a\nhost, device, directory, name, or type, each such component is copied from\ndefault-pathname.  If pathname does not specify a name, then the version,\nif not provided, will come from default-pathname, just like the other\ncomponents.  If pathname does specify a name, then the version is not\naffected by default-pathname. If this process leaves the version missing,\nthe default-version is used.  If the host's file name syntax provides a way\nto input a version without a name or type, the user can let the name and\ntype default but supply a version different from the one in\ndefault-pathname.\nIf pathname is a stream, pathname effectively becomes (pathname pathname).\nmerge-pathnames can be used on either an open or a closed stream.\nIf pathname is a pathname it represents the name used to open the file.\nThis may be, but is not required to be, the actual name of the file.\nmerge-pathnames recognizes a logical pathname namestring when\ndefault-pathname is a logical pathname,\nor when the namestring begins with the name of a defined logical host\nfollowed by a colon.  In the first of these two cases,\nthe host portion of the logical pathname namestring and its following\ncolon are optional.\nmerge-pathnames returns a logical pathname if and only if its first\nargument is a logical pathname,\nor its first argument is a logical pathname namestring with an explicit\nhost, or its first argument does not specify a host and the\ndefault-pathname is a logical pathname.\nPathname merging treats a relative directory specially.  If\n(pathname-directory pathname) is a list whose car is :relative, and\n(pathname-directory default-pathname) is a list, then the merged directory\nis the value of\n      (append (pathname-directory default-pathname)\n              (cdr  ;remove :relative from the front\n                (pathname-directory pathname)))\nexcept that if the resulting list contains a string or :wild immediately\nfollowed by :back, both of them are removed.  This removal of redundant\n:back keywords is repeated as many times as possible.  If\n(pathname-directory default-pathname) is not a list or (pathname-directory\npathname) is not a list whose car is :relative, the merged directory is\n(or (pathname-directory pathname) (pathname-directory default-pathname))\nmerge-pathnames maps customary case in pathname into customary case in the\noutput pathname.\n"
        },
        {
            "type": "Examples",
            "text": "      (merge-pathnames \"CMUC::FORMAT\"\n                       \"CMUC::PS:<LISPIO>.FASL\")\n     =>  #P\"CMUC::PS:<LISPIO>FORMAT.FASL.0\"\n"
        },
        {
            "type": "See Also",
            "text": "*default-pathname-defaults*, pathname, logical-pathname, *Note File System\nConcepts::,\n*Note Pathnames as Filenames::\n"
        },
        {
            "type": "Notes",
            "text": "The net effect is that if just a name is supplied, the host, device,\ndirectory, and type will come from default-pathname, but the version will\ncome from default-version.  If nothing or just a directory is supplied,\nthe name, type, and version will come from default-pathname together.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: merge-pathnames,  Prev: translate-pathname,  Up: Filenames Dictionary\n\nmerge-pathnames                                                  [Function]\n---------------------------------------------------------------------------\n\n`merge-pathnames'  pathname &optional default-pathname default-version\n=>  merged-pathname\n\nArguments and Values::\n......................\n\npathname--a pathname designator.\n\ndefault-pathname--a pathname designator.\n\nThe default is the value of *default-pathname-defaults*.\n\ndefault-version--a valid pathname version.\n\nThe default is :newest.\n\nmerged-pathname--a pathname.\n\nDescription::\n.............\n\nConstructs a pathname from pathname by filling in any unsupplied\ncomponents with the corresponding values from default-pathname and\ndefault-version.\n\nDefaulting of pathname components is done by filling in components taken\nfrom another pathname.\n\nThis is especially useful for cases such as a program that has an input\nfile and an output file.  Unspecified components of the output pathname\nwill come from the input pathname, except that the type should not default\nto the type of the input pathname but rather to the appropriate default\ntype for output from the program; for example, see the function\ncompile-file-pathname.\n\nIf no version is supplied, default-version is used.  If default-version is\nnil, the version component will remain unchanged.\n\nIf pathname explicitly specifies a host and not a device, and if the host\ncomponent of default-pathname matches the host component of pathname, then\nthe device is taken from the default-pathname; otherwise the device will\nbe the default file device for that host.  If pathname does not specify a\nhost, device, directory, name, or type, each such component is copied from\ndefault-pathname.  If pathname does not specify a name, then the version,\nif not provided, will come from default-pathname, just like the other\ncomponents.  If pathname does specify a name, then the version is not\naffected by default-pathname. If this process leaves the version missing,\nthe default-version is used.  If the host's file name syntax provides a way\nto input a version without a name or type, the user can let the name and\ntype default but supply a version different from the one in\ndefault-pathname.\n\nIf pathname is a stream, pathname effectively becomes (pathname pathname).\nmerge-pathnames can be used on either an open or a closed stream.\n\nIf pathname is a pathname it represents the name used to open the file.\nThis may be, but is not required to be, the actual name of the file.\n\nmerge-pathnames recognizes a logical pathname namestring when\ndefault-pathname is a logical pathname,\n\nor when the namestring begins with the name of a defined logical host\nfollowed by a colon.  In the first of these two cases,\n\nthe host portion of the logical pathname namestring and its following\ncolon are optional.\n\nmerge-pathnames returns a logical pathname if and only if its first\nargument is a logical pathname,\n\nor its first argument is a logical pathname namestring with an explicit\nhost, or its first argument does not specify a host and the\ndefault-pathname is a logical pathname.\n\nPathname merging treats a relative directory specially.  If\n(pathname-directory pathname) is a list whose car is :relative, and\n(pathname-directory default-pathname) is a list, then the merged directory\nis the value of\n\n      (append (pathname-directory default-pathname)\n              (cdr  ;remove :relative from the front\n                (pathname-directory pathname)))\n\nexcept that if the resulting list contains a string or :wild immediately\nfollowed by :back, both of them are removed.  This removal of redundant\n:back keywords is repeated as many times as possible.  If\n(pathname-directory default-pathname) is not a list or (pathname-directory\npathname) is not a list whose car is :relative, the merged directory is\n(or (pathname-directory pathname) (pathname-directory default-pathname))\n\nmerge-pathnames maps customary case in pathname into customary case in the\noutput pathname.\n\nExamples::\n..........\n\n      (merge-pathnames \"CMUC::FORMAT\"\n                       \"CMUC::PS:<LISPIO>.FASL\")\n     =>  #P\"CMUC::PS:<LISPIO>FORMAT.FASL.0\"\n\nSee Also::\n..........\n\n*default-pathname-defaults*, pathname, logical-pathname, *Note File System\nConcepts::,\n\n*Note Pathnames as Filenames::\n\nNotes::\n.......\n\nThe net effect is that if just a name is supplied, the host, device,\ndirectory, and type will come from default-pathname, but the version will\ncome from default-version.  If nothing or just a directory is supplied,\nthe name, type, and version will come from default-pathname together.\n\n"
}