{
    "name": "Double-Quote",
    "prev": "Semicolon",
    "next": "Backquote",
    "up": "Standard Macro Characters",
    "header": {
        "type": null,
        "text": "Double-Quote"
    },
    "sections": [
        {
            "type": "",
            "text": "Syntax: \"<<text>>\"\nThe double-quote is used to begin and end a string.  When a double-quote\nis encountered, characters are read from the input stream and accumulated\nuntil another double-quote is encountered.  If a single escape character\nis seen, the single escape character is discarded, the next character is\naccumulated, and accumulation continues.  The accumulated characters up to\nbut not including the matching double-quote are made into a simple string\nand returned.\nIt is implementation-dependent which attributes of the accumulated\ncharacters are removed in this process.\nExamples of the use of the double-quote character are in Figure 2-18.\n  \"Foo\"                      ;A string with three characters in it  \n  \"\"                         ;An empty string                       \n  \"\\\"APL\\\\360?\\\" he cried.\"  ;A string with twenty characters       \n  \"|x| = |-x|\"               ;A ten-character string                \n          Figure 2-18: Examples of the use of double-quote         \nNote that to place a single escape character or a double-quote into a\nstring, such a character must be preceded by a single escape character.\nNote, too, that a multiple escape character need not be quoted by a single\nescape character within a string.\nFor information on how the Lisp printer prints strings, see *Note Printing\nStrings::.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: Double-Quote,  Next: Backquote,  Prev: Semicolon,  Up: Standard Macro Characters\n\nDouble-Quote\n------------\n\nSyntax: \"<<text>>\"\n\nThe double-quote is used to begin and end a string.  When a double-quote\nis encountered, characters are read from the input stream and accumulated\nuntil another double-quote is encountered.  If a single escape character\nis seen, the single escape character is discarded, the next character is\naccumulated, and accumulation continues.  The accumulated characters up to\nbut not including the matching double-quote are made into a simple string\nand returned.\n\nIt is implementation-dependent which attributes of the accumulated\ncharacters are removed in this process.\n\nExamples of the use of the double-quote character are in Figure 2-18.\n\n  \"Foo\"                      ;A string with three characters in it  \n  \"\"                         ;An empty string                       \n  \"\\\"APL\\\\360?\\\" he cried.\"  ;A string with twenty characters       \n  \"|x| = |-x|\"               ;A ten-character string                \n\n          Figure 2-18: Examples of the use of double-quote         \n\n\nNote that to place a single escape character or a double-quote into a\nstring, such a character must be preceded by a single escape character.\nNote, too, that a multiple escape character need not be quoted by a single\nescape character within a string.\n\nFor information on how the Lisp printer prints strings, see *Note Printing\nStrings::.\n\n"
}