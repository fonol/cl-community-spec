{
    "name": "Method Selection and Combination",
    "prev": "Keyword Arguments in Generic Functions and Methods",
    "next": "Inheritance of Methods",
    "up": "Generic Functions and Methods",
    "header": {
        "type": null,
        "text": "Method Selection and Combination"
    },
    "sections": [
        {
            "type": "",
            "text": "When a generic function is called with particular arguments, it must\ndetermine the code to execute.  This code is called the effective method\nfor those arguments.  The effective method is a combination of the\napplicable methods in the generic function that calls some or all of the\nmethods.\nIf a generic function is called and no methods are applicable, the generic\nfunction no-applicable-method is invoked, with the results from that call\nbeing used as the results of the call to the original generic function.\nCalling no-applicable-method takes precedence over checking for acceptable\nkeyword arguments; see *Note Keyword Arguments in Generic Functions and\nMethods::.\nWhen the effective method has been determined, it is invoked with the same\narguments as were passed to the generic function.  Whatever values it\nreturns are returned as the values of the generic function.\n* Menu:\n* Determining the Effective Method::\n* Selecting the Applicable Methods::\n* Sorting the Applicable Methods by Precedence Order::\n* Applying method combination to the sorted list of applicable methods::\n* Standard Method Combination::\n* Declarative Method Combination::\n* Built-in Method Combination Types::\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: Method Selection and Combination,  Next: Inheritance of Methods,  Prev: Keyword Arguments in Generic Functions and Methods,  Up: Generic Functions and Methods\n\nMethod Selection and Combination\n--------------------------------\n\nWhen a generic function is called with particular arguments, it must\ndetermine the code to execute.  This code is called the effective method\nfor those arguments.  The effective method is a combination of the\napplicable methods in the generic function that calls some or all of the\nmethods.\n\nIf a generic function is called and no methods are applicable, the generic\nfunction no-applicable-method is invoked, with the results from that call\nbeing used as the results of the call to the original generic function.\nCalling no-applicable-method takes precedence over checking for acceptable\nkeyword arguments; see *Note Keyword Arguments in Generic Functions and\nMethods::.\n\nWhen the effective method has been determined, it is invoked with the same\narguments as were passed to the generic function.  Whatever values it\nreturns are returned as the values of the generic function.\n\n* Menu:\n\n* Determining the Effective Method::\n* Selecting the Applicable Methods::\n* Sorting the Applicable Methods by Precedence Order::\n* Applying method combination to the sorted list of applicable methods::\n* Standard Method Combination::\n* Declarative Method Combination::\n* Built-in Method Combination Types::\n\n"
}