{
    "name": "remf",
    "prev": "getf",
    "next": "intersection",
    "up": "Conses Dictionary",
    "header": {
        "type": "Macro",
        "text": "remf"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "remf",
                    "text": " place indicator =>  generalized-boolean\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "place",
                    "desc": "a place."
                },
                {
                    "name": "indicator",
                    "desc": "an object."
                },
                {
                    "name": "generalized-boolean",
                    "desc": "a generalized boolean."
                }
            ]
        },
        {
            "type": "Description",
            "text": "remf removes from the property list stored in place a property_1 with a\nproperty indicator identical to indicator.\nIf there are multiple properties_1 with the identical key, remf only\nremoves the first such property.\nremf returns false if no such property was found, or true if a property\nwas found.\nThe property indicator and the corresponding property value are removed in\nan undefined order by destructively splicing the property list.\nremf is permitted to either setf place or to setf any part, car or cdr, of\nthe list structure held by that place.\nFor information about the evaluation of subforms of place, see *Note\nEvaluation of Subforms to Places::.\n"
        },
        {
            "type": "Examples",
            "text": "      (setq x (cons () ())) =>  (NIL)\n      (setf (getf (car x) 'prop1) 'val1) =>  VAL1\n      (remf (car x) 'prop1) =>  true\n      (remf (car x) 'prop1) =>  false\n"
        },
        {
            "type": "Side Effects",
            "text": "The property list stored in place is modified.\n"
        },
        {
            "type": "See Also",
            "text": "*Note remprop:: , *Note getf::\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: remf,  Next: intersection,  Prev: getf,  Up: Conses Dictionary\n\nremf                                                                [Macro]\n---------------------------------------------------------------------------\n\n`remf'  place indicator =>  generalized-boolean\n\nArguments and Values::\n......................\n\nplace--a place.\n\nindicator--an object.\n\ngeneralized-boolean--a generalized boolean.\n\nDescription::\n.............\n\nremf removes from the property list stored in place a property_1 with a\nproperty indicator identical to indicator.\n\nIf there are multiple properties_1 with the identical key, remf only\nremoves the first such property.\n\nremf returns false if no such property was found, or true if a property\nwas found.\n\nThe property indicator and the corresponding property value are removed in\nan undefined order by destructively splicing the property list.\n\nremf is permitted to either setf place or to setf any part, car or cdr, of\nthe list structure held by that place.\n\nFor information about the evaluation of subforms of place, see *Note\nEvaluation of Subforms to Places::.\n\nExamples::\n..........\n\n      (setq x (cons () ())) =>  (NIL)\n      (setf (getf (car x) 'prop1) 'val1) =>  VAL1\n      (remf (car x) 'prop1) =>  true\n      (remf (car x) 'prop1) =>  false\n\nSide Effects::\n..............\n\nThe property list stored in place is modified.\n\nSee Also::\n..........\n\n*Note remprop:: , *Note getf::\n\n"
}