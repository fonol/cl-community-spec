{
    "name": "Lexical Variables",
    "prev": "Symbols as Forms",
    "next": "Dynamic Variables",
    "up": "The Evaluation Model",
    "header": {
        "type": null,
        "text": null
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Lexical Variables",
            "text": "A lexical variable is a variable that can be referenced only within the\nlexical scope of the form that establishes that variable; lexical\nvariables have lexical scope.  Each time a form creates a lexical binding\nof a variable, a fresh binding is established.\nWithin the scope of a binding for a lexical variable name, uses of that\nname as a variable are considered to be references to that binding except\nwhere the variable is shadowed_2 by a form that establishes a fresh\nbinding for that variable name, or by a form that locally declares the\nname special.\nA lexical variable always has a value.  There is no operator that\nintroduces a binding for a lexical variable without giving it an initial\nvalue, nor is there any operator that can make a lexical variable be\nunbound.\nBindings of lexical variables are found in the lexical environment.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: Lexical Variables,  Next: Dynamic Variables,  Prev: Symbols as Forms,  Up: The Evaluation Model\n\nLexical Variables\n.................\n\nA lexical variable is a variable that can be referenced only within the\nlexical scope of the form that establishes that variable; lexical\nvariables have lexical scope.  Each time a form creates a lexical binding\nof a variable, a fresh binding is established.\n\nWithin the scope of a binding for a lexical variable name, uses of that\nname as a variable are considered to be references to that binding except\nwhere the variable is shadowed_2 by a form that establishes a fresh\nbinding for that variable name, or by a form that locally declares the\nname special.\n\nA lexical variable always has a value.  There is no operator that\nintroduces a binding for a lexical variable without giving it an initial\nvalue, nor is there any operator that can make a lexical variable be\nunbound.\n\nBindings of lexical variables are found in the lexical environment.\n\n"
}