{
    "name": "The \"Compound Type Specifier Kind\" Section of a Dictionary Entry",
    "prev": "Dictionary Entries for Type Specifiers",
    "next": "The \"Compound Type Specifier Syntax\" Section of a Dictionary Entry",
    "up": "Interpreting Dictionary Entries",
    "header": {
        "type": null,
        "text": null
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "The \"Compound Type Specifier Kind\" Section of a Dictionary Entry",
            "text": "An \"abbreviating\" type specifier is one that describes a subtype for which\nit is in principle possible to enumerate the elements, but for which in\npractice it is impractical to do so.\nA \"specializing\" type specifier is one that describes a subtype by\nrestricting the type of one or more components of the type, such as\nelement type or complex part type.\nA \"predicating\" type specifier is one that describes a subtype containing\nonly those objects that satisfy a given predicate.\nA \"combining\" type specifier is one that describes a subtype in a\ncompositional way, using combining operations (such as \"and,\" \"or,\" and\n\"not\") on other types.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: The ``Compound Type Specifier Kind'' Section of a Dictionary Entry,  Next: The ``Compound Type Specifier Syntax'' Section of a Dictionary Entry,  Prev: Dictionary Entries for Type Specifiers,  Up: Interpreting Dictionary Entries\n\nThe \"Compound Type Specifier Kind\" Section of a Dictionary Entry\n................................................................\n\nAn \"abbreviating\" type specifier is one that describes a subtype for which\nit is in principle possible to enumerate the elements, but for which in\npractice it is impractical to do so.\n\nA \"specializing\" type specifier is one that describes a subtype by\nrestricting the type of one or more components of the type, such as\nelement type or complex part type.\n\nA \"predicating\" type specifier is one that describes a subtype containing\nonly those objects that satisfy a given predicate.\n\nA \"combining\" type specifier is one that describes a subtype in a\ncompositional way, using combining operations (such as \"and,\" \"or,\" and\n\"not\") on other types.\n\n"
}