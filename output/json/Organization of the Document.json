{
    "name": "Organization of the Document",
    "prev": "Scope",
    "next": "Referenced Publications",
    "up": "Introduction (Introduction)",
    "header": {
        "type": null,
        "text": "Organization of the Document"
    },
    "sections": [
        {
            "type": "",
            "text": "This is a reference document, not a tutorial document.  Where possible and\nconvenient, the order of presentation has been chosen so that the more\nprimitive topics precede those that build upon them;  however, linear\nreadability has not been a priority.\nThis document is divided into chapters by topic.  Any given chapter might\ncontain conceptual material, dictionary entries, or both.\nDefined names within the dictionary portion of a chapter are grouped in a\nway that brings related topics into physical proximity.  Many such\ngroupings were possible, and no deep significance should be inferred from\nthe particular grouping that was chosen.  To see defined names grouped\nalphabetically, consult the index.  For a complete list of defined names,\nsee *Note Symbols in the COMMON-LISP Package::.\nIn order to compensate for the sometimes-unordered portions of this\ndocument, a glossary has been provided; see *Note Glossary::.  The\nglossary provides connectivity by providing easy access to definitions of\nterms, and in some cases by providing examples or cross references to\nadditional conceptual material.\nFor information about notational conventions used in this document, see\n*Note Definitions::.\nFor information about conformance, see *Note Conformance::.\nFor information about extensions and subsets, see *Note Language\nExtensions:: and *Note Language Subsets::.\nFor information about how programs in the language are parsed by the Lisp\nreader, see *Note Syntax::.\nFor information about how programs in the language are compiled and\nexecuted, see *Note Evaluation and Compilation::.\nFor information about data types, see *Note Types and Classes::.  Not all\ntypes and classes are defined in this chapter; many are defined in chapter\ncorresponding to their topic-for example, the numeric types are defined in\n*Note Numbers::.  For a complete list of standardized types, see\nFigure~4-2.\nFor information about general purpose control and data flow, see *Note\nData and Control Flow:: or *Note Iteration::.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: Organization of the Document,  Next: Referenced Publications,  Prev: Scope,  Up: Introduction (Introduction)\n\nOrganization of the Document\n============================\n\nThis is a reference document, not a tutorial document.  Where possible and\nconvenient, the order of presentation has been chosen so that the more\nprimitive topics precede those that build upon them;  however, linear\nreadability has not been a priority.\n\nThis document is divided into chapters by topic.  Any given chapter might\ncontain conceptual material, dictionary entries, or both.\n\nDefined names within the dictionary portion of a chapter are grouped in a\nway that brings related topics into physical proximity.  Many such\ngroupings were possible, and no deep significance should be inferred from\nthe particular grouping that was chosen.  To see defined names grouped\nalphabetically, consult the index.  For a complete list of defined names,\nsee *Note Symbols in the COMMON-LISP Package::.\n\nIn order to compensate for the sometimes-unordered portions of this\ndocument, a glossary has been provided; see *Note Glossary::.  The\nglossary provides connectivity by providing easy access to definitions of\nterms, and in some cases by providing examples or cross references to\nadditional conceptual material.\n\nFor information about notational conventions used in this document, see\n*Note Definitions::.\n\nFor information about conformance, see *Note Conformance::.\n\nFor information about extensions and subsets, see *Note Language\nExtensions:: and *Note Language Subsets::.\n\nFor information about how programs in the language are parsed by the Lisp\nreader, see *Note Syntax::.\n\nFor information about how programs in the language are compiled and\nexecuted, see *Note Evaluation and Compilation::.\n\nFor information about data types, see *Note Types and Classes::.  Not all\ntypes and classes are defined in this chapter; many are defined in chapter\ncorresponding to their topic-for example, the numeric types are defined in\n*Note Numbers::.  For a complete list of standardized types, see\nFigure~4-2.\n\nFor information about general purpose control and data flow, see *Note\nData and Control Flow:: or *Note Iteration::.\n\n"
}