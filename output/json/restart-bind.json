{
    "name": "restart-bind",
    "prev": "invoke-restart-interactively",
    "next": "restart-case",
    "up": "Conditions Dictionary",
    "header": {
        "type": "Macro",
        "text": "restart-bind"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "restart-bind",
                    "text": " ({(name function {!key-val-pair}*)}) {form}*=>  {result}*\n\nkey-val-pair ::=:interactive-function interactive-function | \n                 :report-function report-function | \n                 :test-function test-function\n\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "name",
                    "desc": "a symbol; not evaluated."
                },
                {
                    "name": "function",
                    "desc": "a form; evaluated."
                },
                {
                    "name": "forms",
                    "desc": "an implicit progn."
                },
                {
                    "name": "interactive-function",
                    "desc": "a form; evaluated."
                },
                {
                    "name": "report-function",
                    "desc": "a form; evaluated."
                },
                {
                    "name": "test-function",
                    "desc": "a form; evaluated."
                },
                {
                    "name": "results",
                    "desc": "the values returned by the forms."
                }
            ]
        },
        {
            "type": "Description",
            "text": "restart-bind executes the body of forms in a dynamic environment where\nrestarts with the given names are in effect.\nIf a name is nil, it indicates an anonymous restart; if a name is a\nnon-nil symbol, it indicates a named restart.\nThe function, interactive-function, and report-function are\nunconditionally evaluated in the current lexical and dynamic environment\nprior to evaluation of the body. Each of these forms must evaluate to a\nfunction.\nIf invoke-restart is done on that restart, the function which resulted\nfrom evaluating function is called, in the dynamic environment of the\ninvoke-restart, with the arguments given to invoke-restart.  The function\nmay either perform a non-local transfer of control or may return normally.\nIf the restart is invoked interactively from the debugger (using\ninvoke-restart-interactively), the arguments are defaulted by calling the\nfunction which resulted from evaluating interactive-function.  That\nfunction may optionally prompt interactively on query I/O, and should\nreturn a list of arguments to be used by invoke-restart-interactively when\ninvoking the restart.\nIf a restart is invoked interactively but no interactive-function is used,\nthen an argument list of nil is used. In that case, the function must be\ncompatible with an empty argument list.\nIf the restart is presented interactively (e.g., by the debugger), the\npresentation is done by calling the function which resulted from\nevaluating report-function.  This function must be a function of one\nargument, a stream.  It is expected to print a description of the action\nthat the restart takes to that stream.  This function is called any time\nthe restart is printed while *print-escape* is nil.\nIn the case of interactive invocation, the result is dependent on the\nvalue of :interactive-function as follows.\n:interactive-function\n     Value is evaluated in the current lexical environment and should\n     return a function of no arguments which constructs a list of\n     arguments to be used by invoke-restart-interactively when invoking\n     this restart.  The function may prompt interactively using query I/O\n     if necessary.\n:report-function\n     Value is evaluated in the current lexical environment and should\n     return a function of one argument, a stream, which prints on the\n     stream a summary of the action that this restart takes.  This\n     function is called whenever the restart is reported (printed while\n     *print-escape* is nil).  If no :report-function option is provided,\n     the manner in which the restart is reported is\n     implementation-dependent.\n:test-function\n     Value is evaluated in the current lexical environment and should\n     return a function of one argument, a condition, which returns true if\n     the restart is to be considered visible.\n"
        },
        {
            "type": "Affected By",
            "text": "*query-io*.\n"
        },
        {
            "type": "See Also",
            "text": "*Note restart-case:: , *Note with-simple-restart::\n"
        },
        {
            "type": "Notes",
            "text": "restart-bind is primarily intended to be used to implement restart-case\nand  might be useful in implementing other macros. Programmers who are\nuncertain about whether to use restart-case or restart-bind should prefer\nrestart-case for the cases where it is powerful enough, using restart-bind\nonly in cases where its full generality is really needed.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: restart-bind,  Next: restart-case,  Prev: invoke-restart-interactively,  Up: Conditions Dictionary\n\nrestart-bind                                                        [Macro]\n---------------------------------------------------------------------------\n\n`restart-bind'  ({(name function {!key-val-pair}*)}) {form}*\n=>  {result}*\n\nkey-val-pair ::=:interactive-function interactive-function | \n                 :report-function report-function | \n                 :test-function test-function\n\nArguments and Values::\n......................\n\nname--a symbol; not evaluated.\n\nfunction--a form; evaluated.\n\nforms--an implicit progn.\n\ninteractive-function--a form; evaluated.\n\nreport-function--a form; evaluated.\n\ntest-function--a form; evaluated.\n\nresults--the values returned by the forms.\n\nDescription::\n.............\n\nrestart-bind executes the body of forms in a dynamic environment where\nrestarts with the given names are in effect.\n\nIf a name is nil, it indicates an anonymous restart; if a name is a\nnon-nil symbol, it indicates a named restart.\n\nThe function, interactive-function, and report-function are\nunconditionally evaluated in the current lexical and dynamic environment\nprior to evaluation of the body. Each of these forms must evaluate to a\nfunction.\n\nIf invoke-restart is done on that restart, the function which resulted\nfrom evaluating function is called, in the dynamic environment of the\ninvoke-restart, with the arguments given to invoke-restart.  The function\nmay either perform a non-local transfer of control or may return normally.\n\nIf the restart is invoked interactively from the debugger (using\ninvoke-restart-interactively), the arguments are defaulted by calling the\nfunction which resulted from evaluating interactive-function.  That\nfunction may optionally prompt interactively on query I/O, and should\nreturn a list of arguments to be used by invoke-restart-interactively when\ninvoking the restart.\n\nIf a restart is invoked interactively but no interactive-function is used,\nthen an argument list of nil is used. In that case, the function must be\ncompatible with an empty argument list.\n\nIf the restart is presented interactively (e.g., by the debugger), the\npresentation is done by calling the function which resulted from\nevaluating report-function.  This function must be a function of one\nargument, a stream.  It is expected to print a description of the action\nthat the restart takes to that stream.  This function is called any time\nthe restart is printed while *print-escape* is nil.\n\nIn the case of interactive invocation, the result is dependent on the\nvalue of :interactive-function as follows.\n\n:interactive-function\n     Value is evaluated in the current lexical environment and should\n     return a function of no arguments which constructs a list of\n     arguments to be used by invoke-restart-interactively when invoking\n     this restart.  The function may prompt interactively using query I/O\n     if necessary.\n\n:report-function\n     Value is evaluated in the current lexical environment and should\n     return a function of one argument, a stream, which prints on the\n     stream a summary of the action that this restart takes.  This\n     function is called whenever the restart is reported (printed while\n     *print-escape* is nil).  If no :report-function option is provided,\n     the manner in which the restart is reported is\n     implementation-dependent.\n\n:test-function\n     Value is evaluated in the current lexical environment and should\n     return a function of one argument, a condition, which returns true if\n     the restart is to be considered visible.\n\nAffected By::\n.............\n\n*query-io*.\n\nSee Also::\n..........\n\n*Note restart-case:: , *Note with-simple-restart::\n\nNotes::\n.......\n\nrestart-bind is primarily intended to be used to implement restart-case\nand  might be useful in implementing other macros. Programmers who are\nuncertain about whether to use restart-case or restart-bind should prefer\nrestart-case for the cases where it is powerful enough, using restart-bind\nonly in cases where its full generality is really needed.\n\n"
}