{
    "name": "Requiring Non-Null Rest Parameters in the \"Syntax\" Section",
    "prev": "Naming Conventions for Rest Parameters",
    "next": "Return values in the \"Syntax\" Section",
    "up": "Interpreting Dictionary Entries",
    "header": {
        "type": null,
        "text": null
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "F",
                    "text": " &rest arguments^+\nmeans the same as\n\n"
                },
                {
                    "name": "F",
                    "text": " &rest arguments\n\nbut introduces the additional requirement that there be at least one\nargument.\n\n"
                }
            ],
            "text": "`F'  &rest arguments^+\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: Requiring Non-Null Rest Parameters in the ``Syntax'' Section,  Next: Return values in the ``Syntax'' Section,  Prev: Naming Conventions for Rest Parameters,  Up: Interpreting Dictionary Entries\n\nRequiring Non-Null Rest Parameters in the \"Syntax\" Section\n..........................................................\n\nIn some cases it is useful to refer to all arguments equally as a single\naggregation using a rest parameter while at the same time requiring at\nleast one argument.  A variety of imperative and declarative means are\navailable in code for expressing such a restriction, however they\ngenerally do not manifest themselves in a lambda list.  For descriptive\npurposes within this specification,\n\n`F'  &rest arguments^+\n\nmeans the same as\n\n`F'  &rest arguments\n\nbut introduces the additional requirement that there be at least one\nargument.\n\n"
}