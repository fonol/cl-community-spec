{
    "name": "Naming Conventions for Rest Parameters",
    "prev": "Special \"Syntax\" Notations for Overloaded Operators",
    "next": "Requiring Non-Null Rest Parameters in the \"Syntax\" Section",
    "up": "Interpreting Dictionary Entries",
    "header": {
        "type": null,
        "text": null
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "F",
                    "text": " &rest arguments\nit is appropriate to refer either to the rest parameter named arguments by\nname, or to one of its elements by speaking of \"an argument,\" \"some\nargument,\" \"each argument\" etc.\n\n"
                }
            ],
            "text": "`F'  &rest arguments\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: Naming Conventions for Rest Parameters,  Next: Requiring Non-Null Rest Parameters in the ``Syntax'' Section,  Prev: Special ``Syntax'' Notations for Overloaded Operators,  Up: Interpreting Dictionary Entries\n\nNaming Conventions for Rest Parameters\n......................................\n\nWithin this specification, if the name of a rest parameter is chosen to be\na plural noun, use of that name in parameter font refers to the list to\nwhich the rest parameter is bound.  Use of the singular form of that name\nin parameter font refers to an element of that list.\n\nFor example, given a syntax description such as:\n\n`F'  &rest arguments\n\nit is appropriate to refer either to the rest parameter named arguments by\nname, or to one of its elements by speaking of \"an argument,\" \"some\nargument,\" \"each argument\" etc.\n\n"
}