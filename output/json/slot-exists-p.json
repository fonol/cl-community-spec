{
    "name": "slot-exists-p",
    "prev": "slot-boundp",
    "next": "slot-makunbound",
    "up": "Objects Dictionary",
    "header": {
        "type": "Function",
        "text": "slot-exists-p"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "slot-exists-p",
                    "text": " object slot-name =>  generalized-boolean\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "object",
                    "desc": "an object."
                },
                {
                    "name": "slot-name",
                    "desc": "a symbol."
                },
                {
                    "name": "generalized-boolean",
                    "desc": "a generalized boolean."
                }
            ]
        },
        {
            "type": "Description",
            "text": "Returns true if the object has a slot named slot-name.\n"
        },
        {
            "type": "Affected By",
            "text": "defclass, defstruct\n"
        },
        {
            "type": "See Also",
            "text": "*Note defclass:: , *Note slot-missing::\n"
        },
        {
            "type": "Notes",
            "text": "Although no implementation is required to do so, implementors are strongly\nencouraged to implement the function slot-exists-p using the function\nslot-exists-p-using-class described in the Metaobject Protocol.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: slot-exists-p,  Next: slot-makunbound,  Prev: slot-boundp,  Up: Objects Dictionary\n\nslot-exists-p                                                    [Function]\n---------------------------------------------------------------------------\n\n`slot-exists-p'  object slot-name =>  generalized-boolean\n\nArguments and Values::\n......................\n\nobject--an object.\n\nslot-name--a symbol.\n\ngeneralized-boolean--a generalized boolean.\n\nDescription::\n.............\n\nReturns true if the object has a slot named slot-name.\n\nAffected By::\n.............\n\ndefclass, defstruct\n\nSee Also::\n..........\n\n*Note defclass:: , *Note slot-missing::\n\nNotes::\n.......\n\nAlthough no implementation is required to do so, implementors are strongly\nencouraged to implement the function slot-exists-p using the function\nslot-exists-p-using-class described in the Metaobject Protocol.\n\n"
}