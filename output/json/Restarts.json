{
    "name": "Restarts",
    "prev": "Resignaling a Condition",
    "next": "Interactive Use of Restarts",
    "up": "Signaling and Handling Conditions",
    "header": {
        "type": null,
        "text": null
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Restarts",
            "text": "The interactive condition handler returns only through non-local transfer\nof control to specially defined restarts that can be set up either by the\nsystem or by user code.  Transferring control to a restart is called\n\"invoking\" the restart.  Like handlers, active restarts are established\ndynamically, and only active restarts can be invoked.  An active restart\ncan be invoked by the user from the debugger or by a program by using\ninvoke-restart.\nA restart contains a function to be called when the restart is invoked, an\noptional name that can be used to find or invoke the restart, and an\noptional set of interaction information for the debugger to use to enable\nthe user to manually invoke a restart.\nThe name of a restart is used by invoke-restart. Restarts that can be\ninvoked only within the debugger do not need names.\nRestarts can be established by using restart-bind, restart-case, and\nwith-simple-restart.  A restart function can itself invoke any other\nrestart that was active at the time of establishment of the restart of\nwhich the function is part.\nThe restarts established by a restart-bind form, a restart-case form, or a\nwith-simple-restart form have dynamic extent which extends for the\nduration of that form's execution.\nRestarts of the same name can be ordered from least recent to most recent\naccording to the following two rules:\n1.\n     Each restart in a set of active restarts R_1 is more recent than\n     every restart in a set R_2 if the restarts in R_2 were active when\n     the  restarts in R_1 were established.\n2.\n     Let r_1 and r_2 be two active restarts with the same name established\n     by the same form. Then r_1 is more recent than r_2 if r_1 was defined\n     to the left of r_2 in the form that established them.\nIf a restart is invoked but does not transfer control, the values\nresulting from the restart function are returned by the function that\ninvoked the restart, either invoke-restart or invoke-restart-interactively.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: Restarts,  Next: Interactive Use of Restarts,  Prev: Resignaling a Condition,  Up: Signaling and Handling Conditions\n\nRestarts\n........\n\nThe interactive condition handler returns only through non-local transfer\nof control to specially defined restarts that can be set up either by the\nsystem or by user code.  Transferring control to a restart is called\n\"invoking\" the restart.  Like handlers, active restarts are established\ndynamically, and only active restarts can be invoked.  An active restart\ncan be invoked by the user from the debugger or by a program by using\ninvoke-restart.\n\nA restart contains a function to be called when the restart is invoked, an\noptional name that can be used to find or invoke the restart, and an\noptional set of interaction information for the debugger to use to enable\nthe user to manually invoke a restart.\n\nThe name of a restart is used by invoke-restart. Restarts that can be\ninvoked only within the debugger do not need names.\n\nRestarts can be established by using restart-bind, restart-case, and\nwith-simple-restart.  A restart function can itself invoke any other\nrestart that was active at the time of establishment of the restart of\nwhich the function is part.\n\nThe restarts established by a restart-bind form, a restart-case form, or a\nwith-simple-restart form have dynamic extent which extends for the\nduration of that form's execution.\n\nRestarts of the same name can be ordered from least recent to most recent\naccording to the following two rules:\n\n1.\n     Each restart in a set of active restarts R_1 is more recent than\n     every restart in a set R_2 if the restarts in R_2 were active when\n     the  restarts in R_1 were established.\n\n2.\n     Let r_1 and r_2 be two active restarts with the same name established\n     by the same form. Then r_1 is more recent than r_2 if r_1 was defined\n     to the left of r_2 in the form that established them.\n\nIf a restart is invoked but does not transfer control, the values\nresulting from the restart function are returned by the function that\ninvoked the restart, either invoke-restart or invoke-restart-interactively.\n\n"
}