{
    "name": "logtest",
    "prev": "logcount",
    "next": "byte",
    "up": "Numbers Dictionary",
    "header": {
        "type": "Function",
        "text": "logtest"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "logtest",
                    "text": " integer-1 integer-2 =>  generalized-boolean\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "integer-1",
                    "desc": "an integer."
                },
                {
                    "name": "integer-2",
                    "desc": "an integer."
                },
                {
                    "name": "generalized-boolean",
                    "desc": "a generalized boolean."
                }
            ]
        },
        {
            "type": "Description",
            "text": "Returns true if any of the bits designated by the 1's in integer-1 is 1 in\ninteger-2; otherwise it is false.  integer-1 and integer-2 are treated as\nif they were binary.\nNegative integer-1 and integer-2 are treated as if they were represented\nin two's-complement binary.\n"
        },
        {
            "type": "Examples",
            "text": "      (logtest 1 7) =>  true\n      (logtest 1 2) =>  false\n      (logtest -2 -1) =>  true\n      (logtest 0 -1) =>  false\n"
        },
        {
            "type": "Exceptional Situations",
            "text": "Should signal an error of type type-error if integer-1 is not an integer.\nShould signal an error of type type-error if integer-2 is not an integer.\n"
        },
        {
            "type": "Notes",
            "text": "      (logtest x y) == (not (zerop (logand x y)))\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: logtest,  Next: byte,  Prev: logcount,  Up: Numbers Dictionary\n\nlogtest                                                          [Function]\n---------------------------------------------------------------------------\n\n`logtest'  integer-1 integer-2 =>  generalized-boolean\n\nArguments and Values::\n......................\n\ninteger-1--an integer.\n\ninteger-2--an integer.\n\ngeneralized-boolean--a generalized boolean.\n\nDescription::\n.............\n\nReturns true if any of the bits designated by the 1's in integer-1 is 1 in\ninteger-2; otherwise it is false.  integer-1 and integer-2 are treated as\nif they were binary.\n\nNegative integer-1 and integer-2 are treated as if they were represented\nin two's-complement binary.\n\nExamples::\n..........\n\n      (logtest 1 7) =>  true\n      (logtest 1 2) =>  false\n      (logtest -2 -1) =>  true\n      (logtest 0 -1) =>  false\n\nExceptional Situations::\n........................\n\nShould signal an error of type type-error if integer-1 is not an integer.\nShould signal an error of type type-error if integer-2 is not an integer.\n\nNotes::\n.......\n\n      (logtest x y) == (not (zerop (logand x y)))\n\n"
}