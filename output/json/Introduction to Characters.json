{
    "name": "Introduction to Characters",
    "prev": "Character Concepts",
    "next": "Introduction to Scripts and Repertoires",
    "up": "Character Concepts",
    "header": {
        "type": null,
        "text": "Introduction to Characters"
    },
    "sections": [
        {
            "type": "",
            "text": "A character is an object that represents a unitary token (e.g., a letter,\na special symbol, or a \"control character\") in an aggregate quantity of\ntext (e.g., a string or a text stream).\nCommon Lisp allows an implementation to provide support for international\nlanguage characters as well as characters used in specialized arenas\n(e.g., mathematics).\nThe following figures contain lists of defined names applicable to\ncharacters.\nFigure 13-1 lists some defined names relating to character attributes and\ncharacter predicates.\n  alpha-char-p     char-not-equal     char>            \n  alphanumericp    char-not-greaterp  char>=           \n  both-case-p      char-not-lessp     digit-char-p     \n  char-code-limit  char/=             graphic-char-p   \n  char-equal       char<              lower-case-p     \n  char-greaterp    char<=             standard-char-p  \n  char-lessp       char=              upper-case-p     \n       Figure 13-1: Character defined names - 1      \nFigure 13-2 lists some character construction and conversion defined names.\n  char-code      char-name    code-char   \n  char-downcase  char-upcase  digit-char  \n  char-int       character    name-char   \n  Figure 13-2: Character defined names - 2\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: Introduction to Characters,  Next: Introduction to Scripts and Repertoires,  Prev: Character Concepts,  Up: Character Concepts\n\nIntroduction to Characters\n--------------------------\n\nA character is an object that represents a unitary token (e.g., a letter,\na special symbol, or a \"control character\") in an aggregate quantity of\ntext (e.g., a string or a text stream).\n\nCommon Lisp allows an implementation to provide support for international\nlanguage characters as well as characters used in specialized arenas\n(e.g., mathematics).\n\nThe following figures contain lists of defined names applicable to\ncharacters.\n\nFigure 13-1 lists some defined names relating to character attributes and\ncharacter predicates.\n\n  alpha-char-p     char-not-equal     char>            \n  alphanumericp    char-not-greaterp  char>=           \n  both-case-p      char-not-lessp     digit-char-p     \n  char-code-limit  char/=             graphic-char-p   \n  char-equal       char<              lower-case-p     \n  char-greaterp    char<=             standard-char-p  \n  char-lessp       char=              upper-case-p     \n\n       Figure 13-1: Character defined names - 1      \n\n\nFigure 13-2 lists some character construction and conversion defined names.\n\n  char-code      char-name    code-char   \n  char-downcase  char-upcase  digit-char  \n  char-int       character    name-char   \n\n  Figure 13-2: Character defined names - 2\n\n\n"
}