{
    "name": "Rule of Float Approximation",
    "prev": "Examples of Rule of Float and Rational Contagion",
    "next": "Rule of Float Underflow and Overflow",
    "up": "Floating-point Computations",
    "header": {
        "type": null,
        "text": null
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Rule of Float Approximation",
            "text": "Computations with floats are only approximate, although they are described\nas if the results were mathematically accurate.  Two mathematically\nidentical expressions may be computationally different because of errors\ninherent in the floating-point approximation process.  The precision of a\nfloat is not necessarily correlated with the accuracy of that number.  For\ninstance, 3.142857142857142857 is a more precise approximation to \\pi than\n3.14159, but the latter is more accurate.  The precision refers to the\nnumber of bits retained in the representation.  When an operation combines\na short float with a long float, the result will be a long float.  Common\nLisp functions assume that the accuracy of arguments to them does not\nexceed their precision.  Therefore when two small floats are combined, the\nresult is a small float.  Common Lisp functions never convert\nautomatically from a larger size to a smaller one.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: Rule of Float Approximation,  Next: Rule of Float Underflow and Overflow,  Prev: Examples of Rule of Float and Rational Contagion,  Up: Floating-point Computations\n\nRule of Float Approximation\n...........................\n\nComputations with floats are only approximate, although they are described\nas if the results were mathematically accurate.  Two mathematically\nidentical expressions may be computationally different because of errors\ninherent in the floating-point approximation process.  The precision of a\nfloat is not necessarily correlated with the accuracy of that number.  For\ninstance, 3.142857142857142857 is a more precise approximation to \\pi than\n3.14159, but the latter is more accurate.  The precision refers to the\nnumber of bits retained in the representation.  When an operation combines\na short float with a long float, the result will be a long float.  Common\nLisp functions assume that the accuracy of arguments to them does not\nexceed their precision.  Therefore when two small floats are combined, the\nresult is a small float.  Common Lisp functions never convert\nautomatically from a larger size to a smaller one.\n\n"
}