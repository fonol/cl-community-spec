{
    "name": "Tilde F-> Fixed-Format Floating-Point",
    "prev": "FORMAT Floating-Point Printers",
    "next": "Tilde E-> Exponential Floating-Point",
    "up": "FORMAT Floating-Point Printers",
    "header": {
        "type": null,
        "text": null
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Tilde F: Fixed-Format Floating-Point",
            "text": "The next arg is printed as a float.\nThe full form is ~w,d,k,overflowchar,padcharF.  The parameter w is the\nwidth of the field to be printed; d is the number of digits to print after\nthe decimal point; k is a scale factor that defaults to zero.\nExactly w characters will be output.  First, leading copies of the\ncharacter padchar (which defaults to a space) are printed, if necessary,\nto pad the field on the left.  If the arg is negative, then a minus sign\nis printed; if the arg is not negative, then a plus sign is printed if and\nonly if the @ modifier was supplied.  Then a sequence of digits,\ncontaining a single embedded decimal point, is printed; this represents\nthe magnitude of the value of arg times 10^k, rounded to d fractional\ndigits.  When rounding up and rounding down would produce printed values\nequidistant from the scaled value of arg, then the implementation is free\nto use either one.  For example, printing the argument 6.375 using the\nformat ~4,2F may correctly produce either 6.37 or 6.38.  Leading zeros are\nnot permitted, except that a single zero digit is output before the\ndecimal point if the printed value is less than one, and this single zero\ndigit is not output at all if w=d+1.\nIf it is impossible to print the value in the required format in a field\nof width w, then one of two actions is taken.  If the parameter\noverflowchar is supplied, then w copies of that parameter are printed\ninstead of the scaled value of arg.  If the overflowchar parameter is\nomitted, then the scaled value is printed using more than w characters, as\nmany more as may be needed.\nIf the w parameter is omitted, then the field is of variable width.  In\neffect, a value is chosen for w in such a way that no leading pad\ncharacters need to be printed and exactly d characters will follow the\ndecimal point.  For example, the directive ~,2F will print exactly two\ndigits after the decimal point and as many as necessary before the decimal\npoint.\nIf the parameter d is omitted, then there is no constraint on the number\nof digits to appear after the decimal point.  A value is chosen for d in\nsuch a way that as many digits as possible may be printed subject to the\nwidth constraint imposed by the parameter w and the constraint that no\ntrailing zero digits may appear in the fraction, except that if the\nfraction to be printed is zero, then a single zero digit should appear\nafter the decimal point if permitted by the width constraint.\nIf both w and d are omitted, then the effect is to print the value using\nordinary free-format output; prin1 uses this format for any number whose\nmagnitude is either zero or between 10^-3 (inclusive) and 10^7 (exclusive).\nIf w is omitted, then if the magnitude of arg is so large (or, if d is\nalso omitted, so small) that more than 100 digits would have to be\nprinted, then an implementation is free, at its discretion, to print the\nnumber using exponential notation instead, as if by the directive ~E (with\nall parameters to ~E defaulted, not taking their values from the ~F\ndirective).\nIf arg is a rational number, then it is coerced to be a single float and\nthen printed.  Alternatively, an implementation is permitted to process a\nrational number by any other method that has essentially the same behavior\nbut avoids loss of precision or overflow because of the coercion.  If w\nand d are not supplied and the number has no exact decimal representation,\nfor example 1/3, some precision cutoff must be chosen by the\nimplementation since only a finite number of digits may be printed.\nIf arg is a complex number or some non-numeric object, then it is printed\nusing the format directive ~wD, thereby printing it in decimal radix and a\nminimum field width of w.\n~F binds *print-escape* to false\nand *print-readably* to false.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: Tilde F-> Fixed-Format Floating-Point,  Next: Tilde E-> Exponential Floating-Point,  Prev: FORMAT Floating-Point Printers,  Up: FORMAT Floating-Point Printers\n\nTilde F: Fixed-Format Floating-Point\n....................................\n\nThe next arg is printed as a float.\n\nThe full form is ~w,d,k,overflowchar,padcharF.  The parameter w is the\nwidth of the field to be printed; d is the number of digits to print after\nthe decimal point; k is a scale factor that defaults to zero.\n\nExactly w characters will be output.  First, leading copies of the\ncharacter padchar (which defaults to a space) are printed, if necessary,\nto pad the field on the left.  If the arg is negative, then a minus sign\nis printed; if the arg is not negative, then a plus sign is printed if and\nonly if the @ modifier was supplied.  Then a sequence of digits,\ncontaining a single embedded decimal point, is printed; this represents\nthe magnitude of the value of arg times 10^k, rounded to d fractional\ndigits.  When rounding up and rounding down would produce printed values\nequidistant from the scaled value of arg, then the implementation is free\nto use either one.  For example, printing the argument 6.375 using the\nformat ~4,2F may correctly produce either 6.37 or 6.38.  Leading zeros are\nnot permitted, except that a single zero digit is output before the\ndecimal point if the printed value is less than one, and this single zero\ndigit is not output at all if w=d+1.\n\nIf it is impossible to print the value in the required format in a field\nof width w, then one of two actions is taken.  If the parameter\noverflowchar is supplied, then w copies of that parameter are printed\ninstead of the scaled value of arg.  If the overflowchar parameter is\nomitted, then the scaled value is printed using more than w characters, as\nmany more as may be needed.\n\nIf the w parameter is omitted, then the field is of variable width.  In\neffect, a value is chosen for w in such a way that no leading pad\ncharacters need to be printed and exactly d characters will follow the\ndecimal point.  For example, the directive ~,2F will print exactly two\ndigits after the decimal point and as many as necessary before the decimal\npoint.\n\nIf the parameter d is omitted, then there is no constraint on the number\nof digits to appear after the decimal point.  A value is chosen for d in\nsuch a way that as many digits as possible may be printed subject to the\nwidth constraint imposed by the parameter w and the constraint that no\ntrailing zero digits may appear in the fraction, except that if the\nfraction to be printed is zero, then a single zero digit should appear\nafter the decimal point if permitted by the width constraint.\n\nIf both w and d are omitted, then the effect is to print the value using\nordinary free-format output; prin1 uses this format for any number whose\nmagnitude is either zero or between 10^-3 (inclusive) and 10^7 (exclusive).\n\nIf w is omitted, then if the magnitude of arg is so large (or, if d is\nalso omitted, so small) that more than 100 digits would have to be\nprinted, then an implementation is free, at its discretion, to print the\nnumber using exponential notation instead, as if by the directive ~E (with\nall parameters to ~E defaulted, not taking their values from the ~F\ndirective).\n\nIf arg is a rational number, then it is coerced to be a single float and\nthen printed.  Alternatively, an implementation is permitted to process a\nrational number by any other method that has essentially the same behavior\nbut avoids loss of precision or overflow because of the coercion.  If w\nand d are not supplied and the number has no exact decimal representation,\nfor example 1/3, some precision cutoff must be chosen by the\nimplementation since only a finite number of digits may be printed.\n\nIf arg is a complex number or some non-numeric object, then it is printed\nusing the format directive ~wD, thereby printing it in decimal radix and a\nminimum field width of w.\n\n~F binds *print-escape* to false\n\nand *print-readably* to false.\n\n"
}