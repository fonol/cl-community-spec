{
    "name": "+",
    "prev": "-",
    "next": "*",
    "up": "Environment Dictionary",
    "header": {
        "type": "Variable",
        "text": "+, ++, +++"
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Value Type",
            "text": "an object.\n"
        },
        {
            "type": "Initial Value",
            "text": "implementation-dependent.\n"
        },
        {
            "type": "Description",
            "text": "The variables +, ++, and +++ are maintained by the Lisp read-eval-print\nloop to save forms that were recently evaluated.\nThe value of +   is the last form that was evaluated, the value of ++  is\nthe previous value of +, and the value of +++ is the previous value of ++.\n"
        },
        {
            "type": "Examples",
            "text": "     (+ 0 1) =>  1\n     (- 4 2) =>  2\n     (/ 9 3) =>  3\n     (list + ++ +++) =>  ((/ 9 3) (- 4 2) (+ 0 1))\n     (setq a 1 b 2 c 3 d (list a b c)) =>  (1 2 3)\n     (setq a 4 b 5 c 6 d (list a b c)) =>  (4 5 6)\n     (list a b c) =>  (4 5 6)\n     (eval +++) =>  (1 2 3)\n     #.`(,@++ d) =>  (1 2 3 (1 2 3))\n"
        },
        {
            "type": "Affected By",
            "text": "Lisp read-eval-print loop.\n"
        },
        {
            "type": "See Also",
            "text": "*Note -:: (variable), * (variable), *Note /:: (variable), *Note Top level\nloop::\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: +,  Next: *,  Prev: -,  Up: Environment Dictionary\n\n+, ++, +++                                                       [Variable]\n---------------------------------------------------------------------------\n\nValue Type::\n............\n\nan object.\n\nInitial Value::\n...............\n\nimplementation-dependent.\n\nDescription::\n.............\n\nThe variables +, ++, and +++ are maintained by the Lisp read-eval-print\nloop to save forms that were recently evaluated.\n\nThe value of +   is the last form that was evaluated, the value of ++  is\nthe previous value of +, and the value of +++ is the previous value of ++.\n\nExamples::\n..........\n\n     (+ 0 1) =>  1\n     (- 4 2) =>  2\n     (/ 9 3) =>  3\n     (list + ++ +++) =>  ((/ 9 3) (- 4 2) (+ 0 1))\n     (setq a 1 b 2 c 3 d (list a b c)) =>  (1 2 3)\n     (setq a 4 b 5 c 6 d (list a b c)) =>  (4 5 6)\n     (list a b c) =>  (4 5 6)\n     (eval +++) =>  (1 2 3)\n     #.`(,@++ d) =>  (1 2 3 (1 2 3))\n\nAffected By::\n.............\n\nLisp read-eval-print loop.\n\nSee Also::\n..........\n\n*Note -:: (variable), * (variable), *Note /:: (variable), *Note Top level\nloop::\n\n"
}