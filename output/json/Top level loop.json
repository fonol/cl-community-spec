{
    "name": "Top level loop",
    "prev": "The External Environment",
    "next": "Debugging Utilities",
    "up": "The External Environment",
    "header": {
        "type": null,
        "text": "Top level loop"
    },
    "sections": [
        {
            "type": "",
            "text": "The top level loop is the Common Lisp mechanism by which the user normally\ninteracts with the Common Lisp system. This loop is sometimes referred to\nas the Lisp read-eval-print loop because it typically consists of an\nendless loop that reads an expression, evaluates it and prints the results.\nThe top level loop is not completely specified; thus the user interface is\nimplementation-defined.  The top level loop prints all values resulting\nfrom the evaluation of a form.  Figure 25-1 lists variables that are\nmaintained by the Lisp read-eval-print loop.\n  *    +    /    -     **   ++   //         ***  +++  ///     \n  Figure 25-1: Variables maintained by the Read-Eval-Print Loop\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: Top level loop,  Next: Debugging Utilities,  Prev: The External Environment,  Up: The External Environment\n\nTop level loop\n--------------\n\nThe top level loop is the Common Lisp mechanism by which the user normally\ninteracts with the Common Lisp system. This loop is sometimes referred to\nas the Lisp read-eval-print loop because it typically consists of an\nendless loop that reads an expression, evaluates it and prints the results.\n\nThe top level loop is not completely specified; thus the user interface is\nimplementation-defined.  The top level loop prints all values resulting\nfrom the evaluation of a form.  Figure 25-1 lists variables that are\nmaintained by the Lisp read-eval-print loop.\n\n  *    +    /    -     **   ++   //         ***  +++  ///     \n\n  Figure 25-1: Variables maintained by the Read-Eval-Print Loop\n\n\n"
}