{
    "name": "dribble",
    "prev": "inspect",
    "next": "-",
    "up": "Environment Dictionary",
    "header": {
        "type": "Function",
        "text": "dribble"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "dribble",
                    "text": " &optional pathname =>  implementation-dependent\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "pathname",
                    "desc": "a pathname designator."
                }
            ]
        },
        {
            "type": "Description",
            "text": "Either binds *standard-input* and *standard-output* or takes other\nappropriate action, so as to send a record of the input/output interaction\nto a file named by pathname.  dribble is intended to create a readable\nrecord of an interactive session.\nIf pathname is a logical pathname, it is translated into a physical\npathname as if by calling translate-logical-pathname.\n(dribble) terminates the recording of input and output and closes the\ndribble file.\nIf dribble is called while a stream to a \"dribble file\" is still open from\na previous call to dribble, the effect is implementation-defined.  For\nexample, the already-open stream might be closed, or dribbling might occur\nboth to the old stream and to a new one, or the old stream might stay open\nbut not receive any further output, or the new request might be ignored,\nor some other action might be taken.\n"
        },
        {
            "type": "Affected By",
            "text": "The implementation.\n"
        },
        {
            "type": "Exceptional Situations",
            "text": "If a failure occurs when performing some operation on the file system\nwhile creating the dribble file, an error of type file-error is signaled.\nAn error of type file-error might be signaled if pathname is a designator\nfor a wild pathname.\n"
        },
        {
            "type": "See Also",
            "text": "*Note Pathnames as Filenames::\n"
        },
        {
            "type": "Notes",
            "text": "dribble can return before subsequent forms are executed. It also can enter\na recursive interaction loop, returning only when (dribble) is done.\ndribble is intended primarily for interactive debugging; its effect cannot\nbe relied upon when used in a program.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: dribble,  Next: -,  Prev: inspect,  Up: Environment Dictionary\n\ndribble                                                          [Function]\n---------------------------------------------------------------------------\n\n`dribble'  &optional pathname =>  implementation-dependent\n\nArguments and Values::\n......................\n\npathname--a pathname designator.\n\nDescription::\n.............\n\nEither binds *standard-input* and *standard-output* or takes other\nappropriate action, so as to send a record of the input/output interaction\nto a file named by pathname.  dribble is intended to create a readable\nrecord of an interactive session.\n\nIf pathname is a logical pathname, it is translated into a physical\npathname as if by calling translate-logical-pathname.\n\n(dribble) terminates the recording of input and output and closes the\ndribble file.\n\nIf dribble is called while a stream to a \"dribble file\" is still open from\na previous call to dribble, the effect is implementation-defined.  For\nexample, the already-open stream might be closed, or dribbling might occur\nboth to the old stream and to a new one, or the old stream might stay open\nbut not receive any further output, or the new request might be ignored,\nor some other action might be taken.\n\nAffected By::\n.............\n\nThe implementation.\n\nExceptional Situations::\n........................\n\nIf a failure occurs when performing some operation on the file system\nwhile creating the dribble file, an error of type file-error is signaled.\n\nAn error of type file-error might be signaled if pathname is a designator\nfor a wild pathname.\n\nSee Also::\n..........\n\n*Note Pathnames as Filenames::\n\nNotes::\n.......\n\ndribble can return before subsequent forms are executed. It also can enter\na recursive interaction loop, returning only when (dribble) is done.\n\ndribble is intended primarily for interactive debugging; its effect cannot\nbe relied upon when used in a program.\n\n"
}