{
    "name": "Simple Loop",
    "prev": "Simple vs Extended Loop",
    "next": "Extended Loop",
    "up": "Overview of the Loop Facility",
    "header": {
        "type": null,
        "text": null
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Simple Loop",
            "text": "A simple loop form is one that has a body containing only compound forms.\nEach form is evaluated in turn from left to right.  When the last form has\nbeen evaluated, then the first form is evaluated again, and so on, in a\nnever-ending cycle.  A simple loop form establishes an implicit block\nnamed nil.  The execution of a simple loop can be terminated by explicitly\ntransfering control to the implicit block (using return or return-from) or\nto some exit point outside of the block (e.g., using throw, go, or\nreturn-from).\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: Simple Loop,  Next: Extended Loop,  Prev: Simple vs Extended Loop,  Up: Overview of the Loop Facility\n\nSimple Loop\n...........\n\nA simple loop form is one that has a body containing only compound forms.\nEach form is evaluated in turn from left to right.  When the last form has\nbeen evaluated, then the first form is evaluated again, and so on, in a\nnever-ending cycle.  A simple loop form establishes an implicit block\nnamed nil.  The execution of a simple loop can be terminated by explicitly\ntransfering control to the implicit block (using return or return-from) or\nto some exit point outside of the block (e.g., using throw, go, or\nreturn-from).\n\n"
}