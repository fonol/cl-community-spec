{
    "name": "Logical Operations on Integers",
    "prev": "Viewing Integers as Bits and Bytes",
    "next": "Byte Operations on Integers",
    "up": "Numeric Operations",
    "header": {
        "type": null,
        "text": null
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Logical Operations on Integers",
            "text": "Logical operations require integers as arguments; an error of type\ntype-error should be signaled if an argument is supplied that is not an\ninteger.  Integer arguments to logical operations are treated as if they\nwere represented in two's-complement notation.\nFigure 12-5 shows defined names relating to logical operations on numbers.\n  ash          boole-ior       logbitp   \n  boole        boole-nand      logcount  \n  boole-1      boole-nor       logeqv    \n  boole-2      boole-orc1      logior    \n  boole-and    boole-orc2      lognand   \n  boole-andc1  boole-set       lognor    \n  boole-andc2  boole-xor       lognot    \n  boole-c1     integer-length  logorc1   \n  boole-c2     logand          logorc2   \n  boole-clr    logandc1        logtest   \n  boole-eqv    logandc2        logxor    \n  Figure 12-5: Defined names relating to logical operations on numbers.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: Logical Operations on Integers,  Next: Byte Operations on Integers,  Prev: Viewing Integers as Bits and Bytes,  Up: Numeric Operations\n\nLogical Operations on Integers\n..............................\n\nLogical operations require integers as arguments; an error of type\ntype-error should be signaled if an argument is supplied that is not an\ninteger.  Integer arguments to logical operations are treated as if they\nwere represented in two's-complement notation.\n\nFigure 12-5 shows defined names relating to logical operations on numbers.\n\n  ash          boole-ior       logbitp   \n  boole        boole-nand      logcount  \n  boole-1      boole-nor       logeqv    \n  boole-2      boole-orc1      logior    \n  boole-and    boole-orc2      lognand   \n  boole-andc1  boole-set       lognor    \n  boole-andc2  boole-xor       lognot    \n  boole-c1     integer-length  logorc1   \n  boole-c2     logand          logorc2   \n  boole-clr    logandc1        logtest   \n  boole-eqv    logandc2        logxor    \n\n  Figure 12-5: Defined names relating to logical operations on numbers.\n\n\n"
}