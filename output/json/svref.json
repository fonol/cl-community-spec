{
    "name": "svref",
    "prev": "simple-vector-p",
    "next": "vector",
    "up": "Arrays Dictionary",
    "header": {
        "type": "Accessor",
        "text": "svref"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "svref",
                    "text": " simple-vector index =>  element\n(setf (`         svref' simple-vector index) new-element)\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "simple-vector",
                    "desc": "a simple vector."
                },
                {
                    "name": "index",
                    "desc": "a valid array index for the simple-vector."
                },
                {
                    "name": "element, new-element",
                    "desc": "an object (whose type is a subtype of the array"
                }
            ]
        },
        {
            "type": "Description",
            "text": "Accesses the element of simple-vector specified by index.\n"
        },
        {
            "type": "Examples",
            "text": "      (simple-vector-p (setq v (vector 1 2 'sirens))) =>  true\n      (svref v 0) =>  1\n      (svref v 2) =>  SIRENS\n      (setf (svref v 1) 'newcomer) =>  NEWCOMER\n      v =>  #(1 NEWCOMER SIRENS)\n"
        },
        {
            "type": "See Also",
            "text": "*Note aref:: , sbit, schar, *Note vector:: ,\n*Note Compiler Terminology::\n"
        },
        {
            "type": "Notes",
            "text": "svref is identical to aref except that it requires its first argument to\nbe a simple vector.\n      (svref v i) == (aref (the simple-vector v) i)\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: svref,  Next: vector,  Prev: simple-vector-p,  Up: Arrays Dictionary\n\nsvref                                                            [Accessor]\n---------------------------------------------------------------------------\n\n`svref'  simple-vector index =>  element\n\n(setf (`         svref' simple-vector index) new-element)\nArguments and Values::\n......................\n\nsimple-vector--a simple vector.\n\nindex--a valid array index for the simple-vector.\n\nelement, new-element--an object (whose type is a subtype of the array\nelement type of the simple-vector).\n\nDescription::\n.............\n\nAccesses the element of simple-vector specified by index.\n\nExamples::\n..........\n\n      (simple-vector-p (setq v (vector 1 2 'sirens))) =>  true\n      (svref v 0) =>  1\n      (svref v 2) =>  SIRENS\n      (setf (svref v 1) 'newcomer) =>  NEWCOMER\n      v =>  #(1 NEWCOMER SIRENS)\n\nSee Also::\n..........\n\n*Note aref:: , sbit, schar, *Note vector:: ,\n\n*Note Compiler Terminology::\n\nNotes::\n.......\n\nsvref is identical to aref except that it requires its first argument to\nbe a simple vector.\n\n      (svref v i) == (aref (the simple-vector v) i)\n\n"
}