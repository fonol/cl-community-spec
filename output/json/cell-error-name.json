{
    "name": "cell-error-name",
    "prev": "cell-error",
    "next": "parse-error",
    "up": "Conditions Dictionary",
    "header": {
        "type": "Function",
        "text": "cell-error-name"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "cell-error-name",
                    "text": " condition =>  name\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "condition",
                    "desc": "a condition of type cell-error."
                },
                {
                    "name": "name",
                    "desc": "an object."
                }
            ]
        },
        {
            "type": "Description",
            "text": "Returns the name of the offending cell involved in the situation\nrepresented by condition.\nThe nature of the result depends on the specific type of condition.  For\nexample, if the condition is of type unbound-variable, the result is the\nname of the unbound variable which was being accessed, if the condition is\nof type undefined-function, this is the name of the undefined function\nwhich was being accessed, and if the condition is of type unbound-slot,\nthis is the name of the slot which was being accessed.\n"
        },
        {
            "type": "See Also",
            "text": "cell-error, unbound-slot, unbound-variable, undefined-function, *Note\nCondition System Concepts::\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: cell-error-name,  Next: parse-error,  Prev: cell-error,  Up: Conditions Dictionary\n\ncell-error-name                                                  [Function]\n---------------------------------------------------------------------------\n\n`cell-error-name'  condition =>  name\n\nArguments and Values::\n......................\n\ncondition--a condition of type cell-error.\n\nname--an object.\n\nDescription::\n.............\n\nReturns the name of the offending cell involved in the situation\nrepresented by condition.\n\nThe nature of the result depends on the specific type of condition.  For\nexample, if the condition is of type unbound-variable, the result is the\nname of the unbound variable which was being accessed, if the condition is\nof type undefined-function, this is the name of the undefined function\nwhich was being accessed, and if the condition is of type unbound-slot,\nthis is the name of the slot which was being accessed.\n\nSee Also::\n..........\n\ncell-error, unbound-slot, unbound-variable, undefined-function, *Note\nCondition System Concepts::\n\n"
}