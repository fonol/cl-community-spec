{
    "name": "Stream Arguments to Standardized Functions",
    "prev": "Stream Variables",
    "next": "Restrictions on Composite Streams",
    "up": "Stream Concepts",
    "header": {
        "type": null,
        "text": "Stream Arguments to Standardized Functions"
    },
    "sections": [
        {
            "type": "",
            "text": "The operators in Figure 21-7 accept stream arguments that might be either\nopen or closed streams.\n  broadcast-stream-streams     file-author       pathnamep                     \n  close                        file-namestring   probe-file                    \n  compile-file                 file-write-date   rename-file                   \n  compile-file-pathname        host-namestring   streamp                       \n  concatenated-stream-streams  load              synonym-stream-symbol         \n  delete-file                  logical-pathname  translate-logical-pathname    \n  directory                    merge-pathnames   translate-pathname            \n  directory-namestring         namestring        truename                      \n  dribble                      open              two-way-stream-input-stream   \n  echo-stream-input-stream     open-stream-p     two-way-stream-output-stream  \n  echo-stream-ouput-stream     parse-namestring  wild-pathname-p               \n  ed                           pathname          with-open-file                \n  enough-namestring            pathname-match-p                                \n        Figure 21-7: Operators that accept either Open or Closed Streams      \nThe operators in Figure 21-8 accept stream arguments that must be open\nstreams.\n clear-input              output-stream-p         read-char-no-hang          \n clear-output             peek-char               read-delimited-list        \n file-length              pprint                  read-line                  \n file-position            pprint-fill             read-preserving-whitespace \n file-string-length       pprint-indent           stream-element-type        \n finish-output            pprint-linear           stream-external-format     \n force-output             pprint-logical-block    terpri                     \n format                   pprint-newline          unread-char                \n fresh-line               pprint-tab              with-open-stream           \n get-output-stream-string pprint-tabular          write                      \n input-stream-p           prin1                   write-byte                 \n interactive-stream-p     princ                   write-char                 \n listen                   print                   write-line                 \n make-broadcast-stream    print-object            write-string               \n make-concatenated-stream print-unreadable-object y-or-n-p                   \n make-echo-stream         read                    yes-or-no-p                \n make-synonym-stream      read-byte                                          \n make-two-way-stream      read-char                                          \n             Figure 21-8: Operators that accept Open Streams only            \n"
        }
    ],
    "_otext": "File: gcl.info,  Node: Stream Arguments to Standardized Functions,  Next: Restrictions on Composite Streams,  Prev: Stream Variables,  Up: Stream Concepts\n\nStream Arguments to Standardized Functions\n------------------------------------------\n\nThe operators in Figure 21-7 accept stream arguments that might be either\nopen or closed streams.\n\n  broadcast-stream-streams     file-author       pathnamep                     \n  close                        file-namestring   probe-file                    \n  compile-file                 file-write-date   rename-file                   \n  compile-file-pathname        host-namestring   streamp                       \n  concatenated-stream-streams  load              synonym-stream-symbol         \n  delete-file                  logical-pathname  translate-logical-pathname    \n  directory                    merge-pathnames   translate-pathname            \n  directory-namestring         namestring        truename                      \n  dribble                      open              two-way-stream-input-stream   \n  echo-stream-input-stream     open-stream-p     two-way-stream-output-stream  \n  echo-stream-ouput-stream     parse-namestring  wild-pathname-p               \n  ed                           pathname          with-open-file                \n  enough-namestring            pathname-match-p                                \n\n        Figure 21-7: Operators that accept either Open or Closed Streams      \n\n\nThe operators in Figure 21-8 accept stream arguments that must be open\nstreams.\n\n clear-input              output-stream-p         read-char-no-hang          \n clear-output             peek-char               read-delimited-list        \n file-length              pprint                  read-line                  \n file-position            pprint-fill             read-preserving-whitespace \n file-string-length       pprint-indent           stream-element-type        \n finish-output            pprint-linear           stream-external-format     \n force-output             pprint-logical-block    terpri                     \n format                   pprint-newline          unread-char                \n fresh-line               pprint-tab              with-open-stream           \n get-output-stream-string pprint-tabular          write                      \n input-stream-p           prin1                   write-byte                 \n interactive-stream-p     princ                   write-char                 \n listen                   print                   write-line                 \n make-broadcast-stream    print-object            write-string               \n make-concatenated-stream print-unreadable-object y-or-n-p                   \n make-echo-stream         read                    yes-or-no-p                \n make-synonym-stream      read-byte                                          \n make-two-way-stream      read-char                                          \n\n             Figure 21-8: Operators that accept Open Streams only            \n\n\n"
}