{
    "name": "class-name",
    "prev": "initialize-instance",
    "next": "(setf class-name)",
    "up": "Objects Dictionary",
    "header": {
        "type": "Standard Generic Function",
        "text": "class-name"
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "class-name",
                    "text": " class =>  name\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "class-name",
                    "text": " (class class)\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "class",
                    "desc": "a class object."
                },
                {
                    "name": "name",
                    "desc": "a symbol."
                }
            ]
        },
        {
            "type": "Description",
            "text": "Returns the name of the given class.\n"
        },
        {
            "type": "See Also",
            "text": "*Note find-class:: , *Note Classes::\n"
        },
        {
            "type": "Notes",
            "text": "If S is a symbol such that S =(class-name C) and C =(find-class S), then S\nis the proper name of C.  For further discussion, see *Note Classes::.\nThe name of an anonymous class is nil.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: class-name,  Next: (setf class-name),  Prev: initialize-instance,  Up: Objects Dictionary\n\nclass-name                                      [Standard Generic Function]\n---------------------------------------------------------------------------\n\nSyntax::\n........\n\n`class-name'  class =>  name\n\nMethod Signatures::\n...................\n\n`class-name'  (class class)\n\nArguments and Values::\n......................\n\nclass--a class object.\n\nname--a symbol.\n\nDescription::\n.............\n\nReturns the name of the given class.\n\nSee Also::\n..........\n\n*Note find-class:: , *Note Classes::\n\nNotes::\n.......\n\nIf S is a symbol such that S =(class-name C) and C =(find-class S), then S\nis the proper name of C.  For further discussion, see *Note Classes::.\n\nThe name of an anonymous class is nil.\n\n"
}