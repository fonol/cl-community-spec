{
    "name": "Tilde Dollarsign-> Monetary Floating-Point",
    "prev": "Tilde G-> General Floating-Point",
    "next": null,
    "up": "FORMAT Floating-Point Printers",
    "header": {
        "type": null,
        "text": null
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Tilde Dollarsign: Monetary Floating-Point",
            "text": "The next arg is printed as a float in fixed-format notation.\nThe full form is ~d,n,w,padchar$.  The parameter d is the number of digits\nto print after the decimal point (default value 2); n is the minimum\nnumber of digits to print before the decimal point (default value 1); w is\nthe minimum total width of the field to be printed (default value 0).\nFirst padding and the sign are output.  If the arg is negative, then a\nminus sign is printed; if the arg is not negative, then a plus sign is\nprinted if and only if the @ modifier was supplied.  If the : modifier is\nused, the sign appears before any padding, and otherwise after the padding.\nIf w is supplied and the number of other characters to be output is less\nthan w, then copies of padchar (which defaults to a space) are output to\nmake the total field width equal w.  Then n digits are printed for the\ninteger part of arg, with leading zeros if necessary; then a decimal point;\nthen d digits of fraction, properly rounded.\nIf the magnitude of arg is so large that more than m digits would have to\nbe printed, where m is the larger of w and 100, then an implementation is\nfree, at its discretion, to print the number using exponential notation\ninstead, as if by the directive ~w,q,,,,padcharE, where w and padchar are\npresent or omitted according to whether they were present or omitted in\nthe ~$ directive, and where q=d+n- 1, where d and n are the (possibly\ndefault) values given to the ~$ directive.\nIf arg is a rational number, then it is coerced to be a single float and\nthen printed.  Alternatively, an implementation is permitted to process a\nrational number by any other method that has essentially the same behavior\nbut avoids loss of precision or overflow because of the coercion.\nIf arg is a complex number or some non-numeric object, then it is printed\nusing the format directive ~wD, thereby printing it in decimal radix and a\nminimum field width of w.\n~$ binds *print-escape* to false\nand *print-readably* to false.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: Tilde Dollarsign-> Monetary Floating-Point,  Prev: Tilde G-> General Floating-Point,  Up: FORMAT Floating-Point Printers\n\nTilde Dollarsign: Monetary Floating-Point\n.........................................\n\nThe next arg is printed as a float in fixed-format notation.\n\nThe full form is ~d,n,w,padchar$.  The parameter d is the number of digits\nto print after the decimal point (default value 2); n is the minimum\nnumber of digits to print before the decimal point (default value 1); w is\nthe minimum total width of the field to be printed (default value 0).\n\nFirst padding and the sign are output.  If the arg is negative, then a\nminus sign is printed; if the arg is not negative, then a plus sign is\nprinted if and only if the @ modifier was supplied.  If the : modifier is\nused, the sign appears before any padding, and otherwise after the padding.\nIf w is supplied and the number of other characters to be output is less\nthan w, then copies of padchar (which defaults to a space) are output to\nmake the total field width equal w.  Then n digits are printed for the\ninteger part of arg, with leading zeros if necessary; then a decimal point;\nthen d digits of fraction, properly rounded.\n\nIf the magnitude of arg is so large that more than m digits would have to\nbe printed, where m is the larger of w and 100, then an implementation is\nfree, at its discretion, to print the number using exponential notation\ninstead, as if by the directive ~w,q,,,,padcharE, where w and padchar are\npresent or omitted according to whether they were present or omitted in\nthe ~$ directive, and where q=d+n- 1, where d and n are the (possibly\ndefault) values given to the ~$ directive.\n\nIf arg is a rational number, then it is coerced to be a single float and\nthen printed.  Alternatively, an implementation is permitted to process a\nrational number by any other method that has essentially the same behavior\nbut avoids loss of precision or overflow because of the coercion.\n\nIf arg is a complex number or some non-numeric object, then it is printed\nusing the format directive ~wD, thereby printing it in decimal radix and a\nminimum field width of w.\n\n~$ binds *print-escape* to false\n\nand *print-readably* to false.\n\n"
}