{
    "name": "*print-gensym*",
    "prev": "*print-escape*",
    "next": "*print-level*",
    "up": "Printer Dictionary",
    "header": {
        "type": "Variable",
        "text": "*print-gensym*"
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Value Type",
            "text": "a generalized boolean.\n"
        },
        {
            "type": "Initial Value",
            "text": "true.\n"
        },
        {
            "type": "Description",
            "text": "Controls whether the prefix \"#:\" is printed before apparently uninterned\nsymbols.  The prefix is printed before such symbols if and only if the\nvalue of *print-gensym* is true.\n"
        },
        {
            "type": "Examples",
            "text": "      (let ((*print-gensym* nil))\n        (print (gensym)))\n      |>  G6040\n     =>  #:G6040\n"
        },
        {
            "type": "See Also",
            "text": "*Note write; prin1; print; pprint; princ:: , *print-escape*\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: *print-gensym*,  Next: *print-level*,  Prev: *print-escape*,  Up: Printer Dictionary\n\n*print-gensym*                                                   [Variable]\n---------------------------------------------------------------------------\n\nValue Type::\n............\n\na generalized boolean.\n\nInitial Value::\n...............\n\ntrue.\n\nDescription::\n.............\n\nControls whether the prefix \"#:\" is printed before apparently uninterned\nsymbols.  The prefix is printed before such symbols if and only if the\nvalue of *print-gensym* is true.\n\nExamples::\n..........\n\n      (let ((*print-gensym* nil))\n        (print (gensym)))\n      |>  G6040\n     =>  #:G6040\n\nSee Also::\n..........\n\n*Note write; prin1; print; pprint; princ:: , *print-escape*\n\n"
}