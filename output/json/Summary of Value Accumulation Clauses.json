{
    "name": "Summary of Value Accumulation Clauses",
    "prev": "Summary of Variable Initialization and Stepping Clauses",
    "next": "Summary of Termination Test Clauses",
    "up": "Overview of the Loop Facility",
    "header": {
        "type": null,
        "text": null
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Summary of Value Accumulation Clauses",
            "text": "The collect (or collecting) construct takes one form in its clause and\nadds the value of that form to the end of a list of values.  By default,\nthe list of values is returned when the loop finishes.\nThe append (or appending) construct takes one form in its clause and\nappends the value of that form to the end of a list of values.  By\ndefault, the list of values is returned when the loop finishes.\nThe nconc (or nconcing) construct is similar to the append construct, but\nits list values are concatenated as if by the function nconc.  By default,\nthe list of values is returned when the loop finishes.\nThe sum (or summing) construct takes one form in its clause that must\nevaluate to a number and accumulates the sum of all these numbers.  By\ndefault, the cumulative sum is returned when the loop finishes.\nThe count (or counting) construct takes one form in its clause and counts\nthe number of times that the form evaluates to true.  By default, the\ncount is returned when the loop finishes.\nThe minimize (or minimizing) construct takes one form in its clause and\ndetermines the minimum value obtained by evaluating that form.  By\ndefault, the minimum value is returned when the loop finishes.\nThe maximize (or maximizing) construct takes one form in its clause and\ndetermines the maximum value obtained by evaluating that form.  By\ndefault, the maximum value is returned when the loop finishes.\nFor more information, see *Note Value Accumulation Clauses::.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: Summary of Value Accumulation Clauses,  Next: Summary of Termination Test Clauses,  Prev: Summary of Variable Initialization and Stepping Clauses,  Up: Overview of the Loop Facility\n\nSummary of Value Accumulation Clauses\n.....................................\n\nThe collect (or collecting) construct takes one form in its clause and\nadds the value of that form to the end of a list of values.  By default,\nthe list of values is returned when the loop finishes.\n\nThe append (or appending) construct takes one form in its clause and\nappends the value of that form to the end of a list of values.  By\ndefault, the list of values is returned when the loop finishes.\n\nThe nconc (or nconcing) construct is similar to the append construct, but\nits list values are concatenated as if by the function nconc.  By default,\nthe list of values is returned when the loop finishes.\n\nThe sum (or summing) construct takes one form in its clause that must\nevaluate to a number and accumulates the sum of all these numbers.  By\ndefault, the cumulative sum is returned when the loop finishes.\n\nThe count (or counting) construct takes one form in its clause and counts\nthe number of times that the form evaluates to true.  By default, the\ncount is returned when the loop finishes.\n\nThe minimize (or minimizing) construct takes one form in its clause and\ndetermines the minimum value obtained by evaluating that form.  By\ndefault, the minimum value is returned when the loop finishes.\n\nThe maximize (or maximizing) construct takes one form in its clause and\ndetermines the maximum value obtained by evaluating that form.  By\ndefault, the maximum value is returned when the loop finishes.\n\nFor more information, see *Note Value Accumulation Clauses::.\n\n"
}