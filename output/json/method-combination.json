{
    "name": "method-combination",
    "prev": "standard-object",
    "next": "t (System Class)",
    "up": "Types and Classes Dictionary",
    "header": {
        "type": "System Class",
        "text": "method-combination"
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Class Precedence List",
            "text": "",
            "items": [
                {
                    "name": "method-combination",
                    "link": "method-combination"
                },
                {
                    "name": " t",
                    "link": null
                }
            ]
        },
        {
            "type": "Description",
            "text": "Every method combination object is an indirect instance of the class\nmethod-combination.  A method combination object represents the\ninformation about the method combination being used by a generic function.\nA method combination object contains information about both the type of\nmethod combination and the arguments being used with that type.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: method-combination,  Next: t (System Class),  Prev: standard-object,  Up: Types and Classes Dictionary\n\nmethod-combination                                           [System Class]\n---------------------------------------------------------------------------\n\nClass Precedence List::\n.......................\n\nmethod-combination, t\n\nDescription::\n.............\n\nEvery method combination object is an indirect instance of the class\nmethod-combination.  A method combination object represents the\ninformation about the method combination being used by a generic function.\nA method combination object contains information about both the type of\nmethod combination and the arguments being used with that type.\n\n"
}