{
    "name": "array-in-bounds-p",
    "prev": "array-displacement",
    "next": "array-rank",
    "up": "Arrays Dictionary",
    "header": {
        "type": "Function",
        "text": "array-in-bounds-p"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "array-in-bounds-p",
                    "text": " array &rest subscripts =>  generalized-boolean\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "array",
                    "desc": "an array."
                },
                {
                    "name": "subscripts",
                    "desc": "a list of integers of length equal to the rank of the array."
                },
                {
                    "name": "generalized-boolean",
                    "desc": "a generalized boolean."
                }
            ]
        },
        {
            "type": "Description",
            "text": "Returns true if the subscripts are all in bounds for array; otherwise\nreturns false.  (If array is a vector with a fill pointer, that fill\npointer is ignored.)\n"
        },
        {
            "type": "Examples",
            "text": "      (setq a (make-array '(7 11) :element-type 'string-char))\n      (array-in-bounds-p a 0  0) =>  true\n      (array-in-bounds-p a 6 10) =>  true\n      (array-in-bounds-p a 0 -1) =>  false\n      (array-in-bounds-p a 0 11) =>  false\n      (array-in-bounds-p a 7  0) =>  false\n"
        },
        {
            "type": "See Also",
            "text": "*Note array-dimensions::\n"
        },
        {
            "type": "Notes",
            "text": "      (array-in-bounds-p array subscripts)\n      == (and (not (some #'minusp (list subscripts)))\n              (every #'< (list subscripts) (array-dimensions array)))\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: array-in-bounds-p,  Next: array-rank,  Prev: array-displacement,  Up: Arrays Dictionary\n\narray-in-bounds-p                                                [Function]\n---------------------------------------------------------------------------\n\n`array-in-bounds-p'  array &rest subscripts =>  generalized-boolean\n\nArguments and Values::\n......................\n\narray--an array.\n\nsubscripts--a list of integers of length equal to the rank of the array.\n\ngeneralized-boolean--a generalized boolean.\n\nDescription::\n.............\n\nReturns true if the subscripts are all in bounds for array; otherwise\nreturns false.  (If array is a vector with a fill pointer, that fill\npointer is ignored.)\n\nExamples::\n..........\n\n      (setq a (make-array '(7 11) :element-type 'string-char))\n      (array-in-bounds-p a 0  0) =>  true\n      (array-in-bounds-p a 6 10) =>  true\n      (array-in-bounds-p a 0 -1) =>  false\n      (array-in-bounds-p a 0 11) =>  false\n      (array-in-bounds-p a 7  0) =>  false\n\nSee Also::\n..........\n\n*Note array-dimensions::\n\nNotes::\n.......\n\n      (array-in-bounds-p array subscripts)\n      == (and (not (some #'minusp (list subscripts)))\n              (every #'< (list subscripts) (array-dimensions array)))\n\n"
}