{
    "name": "Constraints on the COMMON-LISP Package for Conforming Implementations",
    "prev": "The COMMON-LISP Package",
    "next": "Constraints on the COMMON-LISP Package for Conforming Programs",
    "up": "Standardized Packages",
    "header": {
        "type": null,
        "text": null
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Constraints on the COMMON-LISP Package for Conforming Implementations",
            "text": "In a conforming implementation, an external symbol of the COMMON-LISP\npackage can have a function, macro, or special operator definition, a\nglobal variable definition (or other status as a dynamic variable due to a\nspecial proclamation), or a type definition only if explicitly permitted\nin this standard.  For example, fboundp yields false for any external\nsymbol of the COMMON-LISP package that is not the name of a standardized\nfunction, macro or special operator, and boundp returns false for any\nexternal symbol of the COMMON-LISP package that is not the name of a\nstandardized global variable.  It also follows that conforming programs\ncan use external symbols of the COMMON-LISP package as the names of local\nlexical variables with confidence that those names have not been\nproclaimed special by the implementation unless those symbols are names of\nstandardized global variables.\nA conforming implementation must not place any property on an external\nsymbol of the COMMON-LISP package using a property indicator that is\neither an external symbol of any standardized package or a symbol that is\notherwise accessible in the COMMON-LISP-USER package.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: Constraints on the COMMON-LISP Package for Conforming Implementations,  Next: Constraints on the COMMON-LISP Package for Conforming Programs,  Prev: The COMMON-LISP Package,  Up: Standardized Packages\n\nConstraints on the COMMON-LISP Package for Conforming Implementations\n.....................................................................\n\nIn a conforming implementation, an external symbol of the COMMON-LISP\npackage can have a function, macro, or special operator definition, a\nglobal variable definition (or other status as a dynamic variable due to a\nspecial proclamation), or a type definition only if explicitly permitted\nin this standard.  For example, fboundp yields false for any external\nsymbol of the COMMON-LISP package that is not the name of a standardized\nfunction, macro or special operator, and boundp returns false for any\nexternal symbol of the COMMON-LISP package that is not the name of a\nstandardized global variable.  It also follows that conforming programs\ncan use external symbols of the COMMON-LISP package as the names of local\nlexical variables with confidence that those names have not been\nproclaimed special by the implementation unless those symbols are names of\nstandardized global variables.\n\nA conforming implementation must not place any property on an external\nsymbol of the COMMON-LISP package using a property indicator that is\neither an external symbol of any standardized package or a symbol that is\notherwise accessible in the COMMON-LISP-USER package.\n\n"
}