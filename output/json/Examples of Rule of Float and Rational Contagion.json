{
    "name": "Examples of Rule of Float and Rational Contagion",
    "prev": "Rule of Float and Rational Contagion",
    "next": "Rule of Float Approximation",
    "up": "Floating-point Computations",
    "header": {
        "type": null,
        "text": null
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Examples of Rule of Float and Rational Contagion",
            "text": "      ;;;; Combining rationals with floats.\n      ;;; This example assumes an implementation in which\n      ;;; (float-radix 0.5) is 2 (as in IEEE) or 16 (as in IBM/360),\n      ;;; or else some other implementation in which 1/2 has an exact\n      ;;;  representation in floating point.\n      (+ 1/2 0.5) =>  1.0\n      (- 1/2 0.5d0) =>  0.0d0\n      (+ 0.5 -0.5 1/2) =>  0.5\n      ;;;; Comparing rationals with floats.\n      ;;; This example assumes an implementation in which the default float\n      ;;; format is IEEE single-float, IEEE double-float, or some other format\n      ;;; in which 5/7 is rounded upwards by FLOAT.\n      (< 5/7 (float 5/7)) =>  true\n      (< 5/7 (rational (float 5/7))) =>  true\n      (< (float 5/7) (float 5/7)) =>  false\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: Examples of Rule of Float and Rational Contagion,  Next: Rule of Float Approximation,  Prev: Rule of Float and Rational Contagion,  Up: Floating-point Computations\n\nExamples of Rule of Float and Rational Contagion\n................................................\n\n      ;;;; Combining rationals with floats.\n      ;;; This example assumes an implementation in which\n      ;;; (float-radix 0.5) is 2 (as in IEEE) or 16 (as in IBM/360),\n      ;;; or else some other implementation in which 1/2 has an exact\n      ;;;  representation in floating point.\n      (+ 1/2 0.5) =>  1.0\n      (- 1/2 0.5d0) =>  0.0d0\n      (+ 0.5 -0.5 1/2) =>  0.5\n     \n      ;;;; Comparing rationals with floats.\n      ;;; This example assumes an implementation in which the default float\n      ;;; format is IEEE single-float, IEEE double-float, or some other format\n      ;;; in which 5/7 is rounded upwards by FLOAT.\n      (< 5/7 (float 5/7)) =>  true\n      (< 5/7 (rational (float 5/7))) =>  true\n      (< (float 5/7) (float 5/7)) =>  false\n\n"
}