{
    "name": "simple-string",
    "prev": "base-string",
    "next": "simple-base-string",
    "up": "Strings Dictionary",
    "header": {
        "type": "Type",
        "text": "simple-string"
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Supertypes",
            "text": "simple-string, string, vector, simple-array, array, sequence, t\n"
        },
        {
            "type": "Description",
            "text": "A simple string is a specialized one-dimensional simple array whose\nelements are of type character or a subtype of type character.  When used\nas a type specifier for object creation, simple-string means (simple-array\ncharacter (size)).\n"
        },
        {
            "type": "Compound Type Specifier Kind",
            "text": "Abbreviating.\n"
        },
        {
            "type": "Compound Type Specifier Syntax",
            "text": "(`simple-string'{[size]})\n"
        },
        {
            "type": "Compound Type Specifier Arguments",
            "text": "size--a non-negative fixnum, or the symbol *.\n"
        },
        {
            "type": "Compound Type Specifier Description",
            "text": "This denotes the union of all types (simple-array c (size)) for all\nsubtypes c of character; that is, the set of simple strings of size size.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: simple-string,  Next: simple-base-string,  Prev: base-string,  Up: Strings Dictionary\n\nsimple-string                                                        [Type]\n---------------------------------------------------------------------------\n\nSupertypes::\n............\n\nsimple-string, string, vector, simple-array, array, sequence, t\n\nDescription::\n.............\n\nA simple string is a specialized one-dimensional simple array whose\nelements are of type character or a subtype of type character.  When used\nas a type specifier for object creation, simple-string means (simple-array\ncharacter (size)).\n\nCompound Type Specifier Kind::\n..............................\n\nAbbreviating.\n\nCompound Type Specifier Syntax::\n................................\n\n(`simple-string'{[size]})\n\nCompound Type Specifier Arguments::\n...................................\n\nsize--a non-negative fixnum, or the symbol *.\n\nCompound Type Specifier Description::\n.....................................\n\nThis denotes the union of all types (simple-array c (size)) for all\nsubtypes c of character; that is, the set of simple strings of size size.\n\n"
}