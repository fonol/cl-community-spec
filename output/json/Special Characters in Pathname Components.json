{
    "name": "Special Characters in Pathname Components",
    "prev": "Strings in Component Values",
    "next": "Case in Pathname Components",
    "up": "Interpreting Pathname Component Values",
    "header": {
        "type": null,
        "text": null
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Special Characters in Pathname Components",
            "text": "Strings in pathname component values never contain special characters that\nrepresent separation between pathname fields, such as slash in Unix\nfilenames.  Whether separator characters are permitted as part of a string\nin a pathname component is implementation-defined; however, if the\nimplementation does permit it, it must arrange to properly \"quote\" the\ncharacter for the file system when constructing a namestring.  For example,\n      ;; In a TOPS-20 implementation, which uses ^V to quote\n      (NAMESTRING (MAKE-PATHNAME :HOST \"OZ\" :NAME \"<TEST>\"))\n     =>  #P\"OZ:PS:^V<TEST^V>\"\n     NOT=> #P\"OZ:PS:<TEST>\"\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: Special Characters in Pathname Components,  Next: Case in Pathname Components,  Prev: Strings in Component Values,  Up: Interpreting Pathname Component Values\n\nSpecial Characters in Pathname Components\n.........................................\n\nStrings in pathname component values never contain special characters that\nrepresent separation between pathname fields, such as slash in Unix\nfilenames.  Whether separator characters are permitted as part of a string\nin a pathname component is implementation-defined; however, if the\nimplementation does permit it, it must arrange to properly \"quote\" the\ncharacter for the file system when constructing a namestring.  For example,\n\n      ;; In a TOPS-20 implementation, which uses ^V to quote\n      (NAMESTRING (MAKE-PATHNAME :HOST \"OZ\" :NAME \"<TEST>\"))\n     =>  #P\"OZ:PS:^V<TEST^V>\"\n     NOT=> #P\"OZ:PS:<TEST>\"\n\n"
}