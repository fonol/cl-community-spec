{
    "name": "compiler-macro-function",
    "prev": "quote",
    "next": "define-compiler-macro",
    "up": "Evaluation and Compilation Dictionary",
    "header": {
        "type": "Accessor",
        "text": "compiler-macro-function"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "compiler-macro-function",
                    "text": " name &optional environment =>  function\n(setf (`         compiler-macro-function' name &optional environment)\nnew-function)\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "name",
                    "desc": "a function name."
                },
                {
                    "name": "environment",
                    "desc": "an environment object."
                },
                {
                    "name": "function, new-function",
                    "desc": "a compiler macro function, or nil."
                }
            ]
        },
        {
            "type": "Description",
            "text": "Accesses the compiler macro function named name, if any, in the\nenvironment.\nA value of nil denotes the absence of a compiler macro function named name.\n"
        },
        {
            "type": "Exceptional Situations",
            "text": "The consequences are undefined if environment is non-nil in a use of setf\nof compiler-macro-function.\n"
        },
        {
            "type": "See Also",
            "text": "*Note define-compiler-macro:: , *Note Compiler Macros::\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: compiler-macro-function,  Next: define-compiler-macro,  Prev: quote,  Up: Evaluation and Compilation Dictionary\n\ncompiler-macro-function                                          [Accessor]\n---------------------------------------------------------------------------\n\n`compiler-macro-function'  name &optional environment =>  function\n\n(setf (`         compiler-macro-function' name &optional environment)\nnew-function)\nArguments and Values::\n......................\n\nname--a function name.\n\nenvironment--an environment object.\n\nfunction, new-function--a compiler macro function, or nil.\n\nDescription::\n.............\n\nAccesses the compiler macro function named name, if any, in the\nenvironment.\n\nA value of nil denotes the absence of a compiler macro function named name.\n\nExceptional Situations::\n........................\n\nThe consequences are undefined if environment is non-nil in a use of setf\nof compiler-macro-function.\n\nSee Also::\n..........\n\n*Note define-compiler-macro:: , *Note Compiler Macros::\n\n"
}