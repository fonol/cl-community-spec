{
    "name": "The EOF-ERROR-P argument",
    "prev": "Argument Conventions of Some Reader Functions",
    "next": "The RECURSIVE-P argument",
    "up": "Argument Conventions of Some Reader Functions",
    "header": {
        "type": null,
        "text": null
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "The EOF-ERROR-P argument",
            "text": "Eof-error-p in input function calls controls what happens if input is from\na file (or any other input source that has a definite end) and the end of\nthe file is reached.  If eof-error-p is true (the default), an error of\ntype end-of-file is signaled at end of file.  If it is false, then no\nerror is signaled, and instead the function returns eof-value.\nFunctions such as read that read the representation of an object rather\nthan a single character always signals an error, regardless of\neof-error-p, if the file ends in the middle of an object representation.\nFor example, if a file does not contain enough right parentheses to\nbalance the left parentheses in it, read signals an error.  If a file ends\nin a symbol or a number immediately followed by end-of-file, read reads the\nsymbol or number successfully and when called again will act according to\neof-error-p.  Similarly, the function read-line successfully reads the\nlast line of a file even if that line is terminated by end-of-file rather\nthan the newline character.  Ignorable text, such as lines containing only\nwhitespace_2 or comments, are not considered to begin an object; if read\nbegins to read an expression but sees only such ignorable text, it does\nnot consider the file to end in the middle of an object.  Thus an\neof-error-p argument controls what happens when the file ends between\nobjects.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: The EOF-ERROR-P argument,  Next: The RECURSIVE-P argument,  Prev: Argument Conventions of Some Reader Functions,  Up: Argument Conventions of Some Reader Functions\n\nThe EOF-ERROR-P argument\n........................\n\nEof-error-p in input function calls controls what happens if input is from\na file (or any other input source that has a definite end) and the end of\nthe file is reached.  If eof-error-p is true (the default), an error of\ntype end-of-file is signaled at end of file.  If it is false, then no\nerror is signaled, and instead the function returns eof-value.\n\nFunctions such as read that read the representation of an object rather\nthan a single character always signals an error, regardless of\neof-error-p, if the file ends in the middle of an object representation.\nFor example, if a file does not contain enough right parentheses to\nbalance the left parentheses in it, read signals an error.  If a file ends\nin a symbol or a number immediately followed by end-of-file, read reads the\nsymbol or number successfully and when called again will act according to\neof-error-p.  Similarly, the function read-line successfully reads the\nlast line of a file even if that line is terminated by end-of-file rather\nthan the newline character.  Ignorable text, such as lines containing only\nwhitespace_2 or comments, are not considered to begin an object; if read\nbegins to read an expression but sees only such ignorable text, it does\nnot consider the file to end in the middle of an object.  Thus an\neof-error-p argument controls what happens when the file ends between\nobjects.\n\n"
}