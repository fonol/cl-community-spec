{
    "name": "*",
    "prev": "+",
    "next": "/",
    "up": "Environment Dictionary",
    "header": {
        "type": "Variable",
        "text": "*, **, ***"
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Value Type",
            "text": "an object.\n"
        },
        {
            "type": "Initial Value",
            "text": "implementation-dependent.\n"
        },
        {
            "type": "Description",
            "text": "The variables *, **, and *** are maintained by the Lisp read-eval-print\nloop to save the values of results that are printed each time through the\nloop.\nThe value of *   is the most recent primary value that was printed, the\nvalue of **  is the previous value of *, and the value of *** is the\nprevious value of **.\nIf several values are produced, * contains the first value only; *\ncontains nil if zero values are produced.\nThe values of *, **, and *** are updated immediately prior to printing the\nreturn value of a top-level form by the Lisp read-eval-print loop.  If the\nevaluation of such a form is aborted prior to its normal return, the\nvalues of *, **, and *** are not updated.\n"
        },
        {
            "type": "Examples",
            "text": "     (values 'a1 'a2) =>  A1, A2\n     'b =>  B\n     (values 'c1 'c2 'c3) =>  C1, C2, C3\n     (list * ** ***) =>  (C1 B A1)\n     (defun cube-root (x) (expt x 1/3)) =>  CUBE-ROOT\n     (compile *) =>  CUBE-ROOT\n     (setq a (cube-root 27.0)) =>  3.0\n     (* * 9.0) =>  27.0\n"
        },
        {
            "type": "Affected By",
            "text": "Lisp read-eval-print loop.\n"
        },
        {
            "type": "See Also",
            "text": "*Note -:: (variable), + (variable), *Note /:: (variable), *Note Top level\nloop::\n"
        },
        {
            "type": "Notes",
            "text": "      *   == (car /)\n      **  == (car //)\n      *** == (car ///)\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: *,  Next: /,  Prev: +,  Up: Environment Dictionary\n\n*, **, ***                                                       [Variable]\n---------------------------------------------------------------------------\n\nValue Type::\n............\n\nan object.\n\nInitial Value::\n...............\n\nimplementation-dependent.\n\nDescription::\n.............\n\nThe variables *, **, and *** are maintained by the Lisp read-eval-print\nloop to save the values of results that are printed each time through the\nloop.\n\nThe value of *   is the most recent primary value that was printed, the\nvalue of **  is the previous value of *, and the value of *** is the\nprevious value of **.\n\nIf several values are produced, * contains the first value only; *\ncontains nil if zero values are produced.\n\nThe values of *, **, and *** are updated immediately prior to printing the\nreturn value of a top-level form by the Lisp read-eval-print loop.  If the\nevaluation of such a form is aborted prior to its normal return, the\nvalues of *, **, and *** are not updated.\n\nExamples::\n..........\n\n     (values 'a1 'a2) =>  A1, A2\n     'b =>  B\n     (values 'c1 'c2 'c3) =>  C1, C2, C3\n     (list * ** ***) =>  (C1 B A1)\n     \n     (defun cube-root (x) (expt x 1/3)) =>  CUBE-ROOT\n     (compile *) =>  CUBE-ROOT\n     (setq a (cube-root 27.0)) =>  3.0\n     (* * 9.0) =>  27.0\n\nAffected By::\n.............\n\nLisp read-eval-print loop.\n\nSee Also::\n..........\n\n*Note -:: (variable), + (variable), *Note /:: (variable), *Note Top level\nloop::\n\nNotes::\n.......\n\n      *   == (car /)\n      **  == (car //)\n      *** == (car ///)\n\n"
}