{
    "name": "Examples of Style for Semicolon",
    "prev": "Use of Quadruple Semicolon",
    "next": null,
    "up": "Semicolon",
    "header": {
        "type": null,
        "text": null
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Examples of Style for Semicolon",
            "text": "     ;;;; Math Utilities\n     ;;; FIB computes the the Fibonacci function in the traditional\n     ;;; recursive way.\n     (defun fib (n)\n       (check-type n integer)\n       ;; At this point we're sure we have an integer argument.\n       ;; Now we can get down to some serious computation.\n       (cond ((< n 0)\n              ;; Hey, this is just supposed to be a simple example.\n              ;; Did you really expect me to handle the general case?\n              (error \"FIB got ~D as an argument.\" n))\n             ((< n 2) n)             ;fib[0]=0 and fib[1]=1\n             ;; The cheap cases didn't work.\n             ;; Nothing more to do but recurse.\n             (t (+ (fib (- n 1))     ;The traditional formula\n                   (fib (- n 2)))))) ; is fib[n-1]+fib[n-2].\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: Examples of Style for Semicolon,  Prev: Use of Quadruple Semicolon,  Up: Semicolon\n\nExamples of Style for Semicolon\n...............................\n\n     ;;;; Math Utilities\n     \n     ;;; FIB computes the the Fibonacci function in the traditional\n     ;;; recursive way.\n     \n     (defun fib (n)\n       (check-type n integer)\n       ;; At this point we're sure we have an integer argument.\n       ;; Now we can get down to some serious computation.\n       (cond ((< n 0)\n              ;; Hey, this is just supposed to be a simple example.\n              ;; Did you really expect me to handle the general case?\n              (error \"FIB got ~D as an argument.\" n))\n             ((< n 2) n)             ;fib[0]=0 and fib[1]=1\n             ;; The cheap cases didn't work.\n             ;; Nothing more to do but recurse.\n             (t (+ (fib (- n 1))     ;The traditional formula\n                   (fib (- n 2)))))) ; is fib[n-1]+fib[n-2].\n\n"
}