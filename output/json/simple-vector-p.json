{
    "name": "simple-vector-p",
    "prev": "array-total-size-limit",
    "next": "svref",
    "up": "Arrays Dictionary",
    "header": {
        "type": "Function",
        "text": "simple-vector-p"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "simple-vector-p",
                    "text": " object =>  generalized-boolean\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "object",
                    "desc": "an object."
                },
                {
                    "name": "generalized-boolean",
                    "desc": "a generalized boolean."
                }
            ]
        },
        {
            "type": "Description",
            "text": "Returns true if object is of type simple-vector; otherwise, returns false..\n"
        },
        {
            "type": "Examples",
            "text": "      (simple-vector-p (make-array 6)) =>  true\n      (simple-vector-p \"aaaaaa\") =>  false\n      (simple-vector-p (make-array 6 :fill-pointer t)) =>  false\n"
        },
        {
            "type": "See Also",
            "text": "simple-vector\n"
        },
        {
            "type": "Notes",
            "text": "      (simple-vector-p object) == (typep object 'simple-vector)\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: simple-vector-p,  Next: svref,  Prev: array-total-size-limit,  Up: Arrays Dictionary\n\nsimple-vector-p                                                  [Function]\n---------------------------------------------------------------------------\n\n`simple-vector-p'  object =>  generalized-boolean\n\nArguments and Values::\n......................\n\nobject--an object.\n\ngeneralized-boolean--a generalized boolean.\n\nDescription::\n.............\n\nReturns true if object is of type simple-vector; otherwise, returns false..\n\nExamples::\n..........\n\n      (simple-vector-p (make-array 6)) =>  true\n      (simple-vector-p \"aaaaaa\") =>  false\n      (simple-vector-p (make-array 6 :fill-pointer t)) =>  false\n\nSee Also::\n..........\n\nsimple-vector\n\nNotes::\n.......\n\n      (simple-vector-p object) == (typep object 'simple-vector)\n\n"
}