{
    "name": "next-method-p",
    "prev": "find-class",
    "next": "call-method",
    "up": "Objects Dictionary",
    "header": {
        "type": "Local Function",
        "text": "next-method-p"
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "next-method-p",
                    "text": " <no arguments> =>  generalized-boolean\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "generalized-boolean",
                    "desc": "a generalized boolean."
                }
            ]
        },
        {
            "type": "Description",
            "text": "The locally defined function next-method-p can be used\nwithin the body forms (but not the lambda list)\ndefined by a method-defining form to determine whether a next method\nexists.\nThe function next-method-p has lexical scope and indefinite extent.\nWhether or not next-method-p is fbound in the global environment is\nimplementation-dependent; however, the restrictions on redefinition and\nshadowing of next-method-p are the same as for symbols in the COMMON-LISP\npackage which are fbound in the global environment.  The consequences of\nattempting to use next-method-p outside of a method-defining form are\nundefined.\n"
        },
        {
            "type": "See Also",
            "text": "*Note call-next-method:: , *Note defmethod:: , *Note call-method;\nmake-method::\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: next-method-p,  Next: call-method,  Prev: find-class,  Up: Objects Dictionary\n\nnext-method-p                                              [Local Function]\n---------------------------------------------------------------------------\n\nSyntax::\n........\n\n`next-method-p'  <no arguments> =>  generalized-boolean\n\nArguments and Values::\n......................\n\ngeneralized-boolean--a generalized boolean.\n\nDescription::\n.............\n\nThe locally defined function next-method-p can be used\n\nwithin the body forms (but not the lambda list)\n\ndefined by a method-defining form to determine whether a next method\nexists.\n\nThe function next-method-p has lexical scope and indefinite extent.\n\nWhether or not next-method-p is fbound in the global environment is\nimplementation-dependent; however, the restrictions on redefinition and\nshadowing of next-method-p are the same as for symbols in the COMMON-LISP\npackage which are fbound in the global environment.  The consequences of\nattempting to use next-method-p outside of a method-defining form are\nundefined.\n\nSee Also::\n..........\n\n*Note call-next-method:: , *Note defmethod:: , *Note call-method;\nmake-method::\n\n"
}