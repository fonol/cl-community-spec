{
    "name": "nth",
    "prev": "first",
    "next": "endp",
    "up": "Conses Dictionary",
    "header": {
        "type": "Accessor",
        "text": "nth"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "nth",
                    "text": " n list =>  object\n(setf (`         nth' n list) new-object)\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "n",
                    "desc": "a non-negative integer."
                },
                {
                    "name": "list",
                    "desc": "a list,which might be a dotted list or a circular list.\n"
                },
                {
                    "name": "object",
                    "desc": "an object."
                },
                {
                    "name": "new-object",
                    "desc": "an object."
                }
            ]
        },
        {
            "type": "Description",
            "text": "nth locates the nth element of list, where the car of the list is the\n\"zeroth\" element.\nSpecifically,\n      (nth n list) == (car (nthcdr n list))\nnth may be used to specify a place to setf.\nSpecifically,\n      (setf (nth n list) new-object) == (setf (car (nthcdr n list)) new-object)\n"
        },
        {
            "type": "Examples",
            "text": "      (nth 0 '(foo bar baz)) =>  FOO\n      (nth 1 '(foo bar baz)) =>  BAR\n      (nth 3 '(foo bar baz)) =>  NIL\n      (setq 0-to-3 (list 0 1 2 3)) =>  (0 1 2 3)\n      (setf (nth 2 0-to-3) \"two\") =>  \"two\"\n      0-to-3 =>  (0 1 \"two\" 3)\n"
        },
        {
            "type": "See Also",
            "text": "*Note elt:: , *Note first; second; third; fourth; fifth; sixth; seventh;\neighth; ninth; tenth:: , *Note nthcdr::\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: nth,  Next: endp,  Prev: first,  Up: Conses Dictionary\n\nnth                                                              [Accessor]\n---------------------------------------------------------------------------\n\n`nth'  n list =>  object\n\n(setf (`         nth' n list) new-object)\nArguments and Values::\n......................\n\nn--a non-negative integer.\n\nlist--a list,\n\nwhich might be a dotted list or a circular list.\n\nobject--an object.\n\nnew-object--an object.\n\nDescription::\n.............\n\nnth locates the nth element of list, where the car of the list is the\n\"zeroth\" element.\n\nSpecifically,\n\n      (nth n list) == (car (nthcdr n list))\n\nnth may be used to specify a place to setf.\n\nSpecifically,\n\n      (setf (nth n list) new-object) == (setf (car (nthcdr n list)) new-object)\n\nExamples::\n..........\n\n      (nth 0 '(foo bar baz)) =>  FOO\n      (nth 1 '(foo bar baz)) =>  BAR\n      (nth 3 '(foo bar baz)) =>  NIL\n      (setq 0-to-3 (list 0 1 2 3)) =>  (0 1 2 3)\n      (setf (nth 2 0-to-3) \"two\") =>  \"two\"\n      0-to-3 =>  (0 1 \"two\" 3)\n\nSee Also::\n..........\n\n*Note elt:: , *Note first; second; third; fourth; fifth; sixth; seventh;\neighth; ninth; tenth:: , *Note nthcdr::\n\n"
}