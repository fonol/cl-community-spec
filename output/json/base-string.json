{
    "name": "base-string",
    "prev": "string (System Class)",
    "next": "simple-string",
    "up": "Strings Dictionary",
    "header": {
        "type": "Type",
        "text": "base-string"
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Supertypes",
            "text": "base-string, string, vector, array, sequence, t\n"
        },
        {
            "type": "Description",
            "text": "The type base-string is equivalent to\n(vector base-char).\nThe base string representation is the most efficient string representation\nthat can hold an arbitrary sequence of standard characters.\n"
        },
        {
            "type": "Compound Type Specifier Kind",
            "text": "Abbreviating.\n"
        },
        {
            "type": "Compound Type Specifier Syntax",
            "text": "(`base-string'{[size]})\n"
        },
        {
            "type": "Compound Type Specifier Arguments",
            "text": "size--a non-negative fixnum, or the symbol *.\n"
        },
        {
            "type": "Compound Type Specifier Description",
            "text": "This is equivalent to the type (vector base-char size); that is, the set\nof base strings of size size.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: base-string,  Next: simple-string,  Prev: string (System Class),  Up: Strings Dictionary\n\nbase-string                                                          [Type]\n---------------------------------------------------------------------------\n\nSupertypes::\n............\n\nbase-string, string, vector, array, sequence, t\n\nDescription::\n.............\n\nThe type base-string is equivalent to\n\n(vector base-char).\n\nThe base string representation is the most efficient string representation\nthat can hold an arbitrary sequence of standard characters.\n\nCompound Type Specifier Kind::\n..............................\n\nAbbreviating.\n\nCompound Type Specifier Syntax::\n................................\n\n(`base-string'{[size]})\n\nCompound Type Specifier Arguments::\n...................................\n\nsize--a non-negative fixnum, or the symbol *.\n\nCompound Type Specifier Description::\n.....................................\n\nThis is equivalent to the type (vector base-char size); that is, the set\nof base strings of size size.\n\n"
}