{
    "name": "Character Encodings",
    "prev": "Treatment of Newline during Input and Output",
    "next": "Documentation of Implementation-Defined Scripts",
    "up": "Character Concepts",
    "header": {
        "type": null,
        "text": "Character Encodings"
    },
    "sections": [
        {
            "type": "",
            "text": "A character is sometimes represented merely by its code, and sometimes by\nanother integer value which is composed from the code and all\nimplementation-defined attributes (in an implementation-defined way that\nmight vary between Lisp images even in the same implementation).  This\ninteger, returned by the function char-int, is called the character's\n\"encoding.\" There is no corresponding function from a character's encoding\nback to the character, since its primary intended uses include things like\nhashing where an inverse operation is not really called for.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: Character Encodings,  Next: Documentation of Implementation-Defined Scripts,  Prev: Treatment of Newline during Input and Output,  Up: Character Concepts\n\nCharacter Encodings\n-------------------\n\nA character is sometimes represented merely by its code, and sometimes by\nanother integer value which is composed from the code and all\nimplementation-defined attributes (in an implementation-defined way that\nmight vary between Lisp images even in the same implementation).  This\ninteger, returned by the function char-int, is called the character's\n\"encoding.\" There is no corresponding function from a character's encoding\nback to the character, since its primary intended uses include things like\nhashing where an inverse operation is not really called for.\n\n"
}