{
    "name": "return",
    "prev": "return-from",
    "next": "tagbody",
    "up": "Data and Control Flow Dictionary",
    "header": {
        "type": "Macro",
        "text": "return"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "return",
                    "text": " [result] =>  #<NoValue>\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "result",
                    "desc": "a form; evaluated.  The default is nil."
                }
            ]
        },
        {
            "type": "Description",
            "text": "Returns, as if by return-from, from the block named nil.\n"
        },
        {
            "type": "Examples",
            "text": "      (block nil (return) 1) =>  NIL\n      (block nil (return 1) 2) =>  1\n      (block nil (return (values 1 2)) 3) =>  1, 2\n      (block nil (block alpha (return 1) 2)) =>  1\n      (block alpha (block nil (return 1)) 2) =>  2\n      (block nil (block nil (return 1) 2)) =>  1\n"
        },
        {
            "type": "See Also",
            "text": "*Note block:: , *Note return-from:: , *Note Evaluation::\n"
        },
        {
            "type": "Notes",
            "text": "      (return) == (return-from nil)\n      (return form) == (return-from nil form)\nThe implicit blocks established by macros such as do are often named nil,\nso that return can be used to exit from such forms.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: return,  Next: tagbody,  Prev: return-from,  Up: Data and Control Flow Dictionary\n\nreturn                                                              [Macro]\n---------------------------------------------------------------------------\n\n`return'  [result] =>  #<NoValue>\n\nArguments and Values::\n......................\n\nresult--a form; evaluated.  The default is nil.\n\nDescription::\n.............\n\nReturns, as if by return-from, from the block named nil.\n\nExamples::\n..........\n\n      (block nil (return) 1) =>  NIL\n      (block nil (return 1) 2) =>  1\n      (block nil (return (values 1 2)) 3) =>  1, 2\n      (block nil (block alpha (return 1) 2)) =>  1\n      (block alpha (block nil (return 1)) 2) =>  2\n      (block nil (block nil (return 1) 2)) =>  1\n\nSee Also::\n..........\n\n*Note block:: , *Note return-from:: , *Note Evaluation::\n\nNotes::\n.......\n\n      (return) == (return-from nil)\n      (return form) == (return-from nil form)\n\nThe implicit blocks established by macros such as do are often named nil,\nso that return can be used to exit from such forms.\n\n"
}