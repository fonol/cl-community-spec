{
    "name": "file-string-length",
    "prev": "file-position",
    "next": "open",
    "up": "Streams Dictionary",
    "header": {
        "type": "Function",
        "text": "file-string-length"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "file-string-length",
                    "text": " stream object =>  length\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "stream",
                    "desc": "an output character file stream."
                },
                {
                    "name": "object",
                    "desc": "a string or a character."
                },
                {
                    "name": "length",
                    "desc": "a non-negative integer, or nil."
                }
            ]
        },
        {
            "type": "Description",
            "text": "file-string-length returns the difference between what (file-position\nstream) would be after writing object and its current value, or nil if\nthis cannot be determined.\nThe returned value corresponds to the current state of stream at the time\nof the call and might not be the same if it is called again when the state\nof the stream has changed.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: file-string-length,  Next: open,  Prev: file-position,  Up: Streams Dictionary\n\nfile-string-length                                               [Function]\n---------------------------------------------------------------------------\n\n`file-string-length'  stream object =>  length\n\nArguments and Values::\n......................\n\nstream--an output character file stream.\n\nobject--a string or a character.\n\nlength--a non-negative integer, or nil.\n\nDescription::\n.............\n\nfile-string-length returns the difference between what (file-position\nstream) would be after writing object and its current value, or nil if\nthis cannot be determined.\n\nThe returned value corresponds to the current state of stream at the time\nof the call and might not be the same if it is called again when the state\nof the stream has changed.\n\n"
}