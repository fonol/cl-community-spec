{
    "name": "restart-name",
    "prev": "restart-case",
    "next": "with-condition-restarts",
    "up": "Conditions Dictionary",
    "header": {
        "type": "Function",
        "text": "restart-name"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "restart-name",
                    "text": " restart =>  name\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "restart",
                    "desc": "a restart."
                },
                {
                    "name": "name",
                    "desc": "a symbol."
                }
            ]
        },
        {
            "type": "Description",
            "text": "Returns the name of the restart, or nil if the restart is not named.\n"
        },
        {
            "type": "Examples",
            "text": "      (restart-case\n          (loop for restart in (compute-restarts)\n                    collect (restart-name restart))\n        (case1 () :report \"Return 1.\" 1)\n        (nil   () :report \"Return 2.\" 2)\n        (case3 () :report \"Return 3.\" 3)\n        (case1 () :report \"Return 4.\" 4))\n     =>  (CASE1 NIL CASE3 CASE1 ABORT)\n      ;; In the example above the restart named ABORT was not created\n      ;; explicitly, but was implicitly supplied by the system.\n"
        },
        {
            "type": "See Also",
            "text": "*Note compute-restarts::\n*Note find-restart::\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: restart-name,  Next: with-condition-restarts,  Prev: restart-case,  Up: Conditions Dictionary\n\nrestart-name                                                     [Function]\n---------------------------------------------------------------------------\n\n`restart-name'  restart =>  name\n\nArguments and Values::\n......................\n\nrestart--a restart.\n\nname--a symbol.\n\nDescription::\n.............\n\nReturns the name of the restart, or nil if the restart is not named.\n\nExamples::\n..........\n\n      (restart-case\n          (loop for restart in (compute-restarts)\n                    collect (restart-name restart))\n        (case1 () :report \"Return 1.\" 1)\n        (nil   () :report \"Return 2.\" 2)\n        (case3 () :report \"Return 3.\" 3)\n        (case1 () :report \"Return 4.\" 4))\n     =>  (CASE1 NIL CASE3 CASE1 ABORT)\n      ;; In the example above the restart named ABORT was not created\n      ;; explicitly, but was implicitly supplied by the system.\n\nSee Also::\n..........\n\n*Note compute-restarts::\n\n*Note find-restart::\n\n"
}