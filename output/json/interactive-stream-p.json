{
    "name": "interactive-stream-p",
    "prev": "input-stream-p",
    "next": "open-stream-p",
    "up": "Streams Dictionary",
    "header": {
        "type": "Function",
        "text": "interactive-stream-p"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "interactive-stream-p",
                    "text": " stream =>  generalized-boolean\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "stream",
                    "desc": "a stream."
                },
                {
                    "name": "generalized-boolean",
                    "desc": "a generalized boolean."
                }
            ]
        },
        {
            "type": "Description",
            "text": "Returns true if stream is an interactive stream; otherwise, returns false.\n"
        },
        {
            "type": "Examples",
            "text": "      (when (> measured limit)\n        (let ((error (round (* (- measured limit) 100)\n                            limit)))\n          (unless (if (interactive-stream-p *query-io*)\n                      (yes-or-no-p \"The frammis is out of tolerance by ~D\n                                    Is it safe to proceed? \" error)\n                      (< error 15))  ;15\n            (error \"The frammis is out of tolerance by ~D\n"
        },
        {
            "type": "Exceptional Situations",
            "text": "Should signal an error of type type-error if stream is not a stream.\n"
        },
        {
            "type": "See Also",
            "text": "*Note Stream Concepts::\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: interactive-stream-p,  Next: open-stream-p,  Prev: input-stream-p,  Up: Streams Dictionary\n\ninteractive-stream-p                                             [Function]\n---------------------------------------------------------------------------\n\n`interactive-stream-p'  stream =>  generalized-boolean\n\nArguments and Values::\n......................\n\nstream--a stream.\n\ngeneralized-boolean--a generalized boolean.\n\nDescription::\n.............\n\nReturns true if stream is an interactive stream; otherwise, returns false.\n\nExamples::\n..........\n\n      (when (> measured limit)\n        (let ((error (round (* (- measured limit) 100)\n                            limit)))\n          (unless (if (interactive-stream-p *query-io*)\n                      (yes-or-no-p \"The frammis is out of tolerance by ~D\n                                    Is it safe to proceed? \" error)\n                      (< error 15))  ;15\n            (error \"The frammis is out of tolerance by ~D\n\nExceptional Situations::\n........................\n\nShould signal an error of type type-error if stream is not a stream.\n\nSee Also::\n..........\n\n*Note Stream Concepts::\n\n"
}