{
    "name": "graphic-char-p",
    "prev": "digit-char-p",
    "next": "standard-char-p",
    "up": "Characters Dictionary",
    "header": {
        "type": "Function",
        "text": "graphic-char-p"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "graphic-char-p",
                    "text": " char =>  generalized-boolean\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "char",
                    "desc": "a character."
                },
                {
                    "name": "generalized-boolean",
                    "desc": "a generalized boolean."
                }
            ]
        },
        {
            "type": "Description",
            "text": "Returns true if character is a graphic character; otherwise, returns false.\n"
        },
        {
            "type": "Examples",
            "text": "      (graphic-char-p #\\G) =>  true\n      (graphic-char-p #\\#) =>  true\n      (graphic-char-p #\\Space) =>  true\n      (graphic-char-p #\\Newline) =>  false\n"
        },
        {
            "type": "Exceptional Situations",
            "text": "Should signal an error of type type-error if character is not a character.\n"
        },
        {
            "type": "See Also",
            "text": "*Note read; read-preserving-whitespace:: , *Note Character Syntax::, *Note\nDocumentation of Implementation-Defined Scripts::\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: graphic-char-p,  Next: standard-char-p,  Prev: digit-char-p,  Up: Characters Dictionary\n\ngraphic-char-p                                                   [Function]\n---------------------------------------------------------------------------\n\n`graphic-char-p'  char =>  generalized-boolean\n\nArguments and Values::\n......................\n\nchar--a character.\n\ngeneralized-boolean--a generalized boolean.\n\nDescription::\n.............\n\nReturns true if character is a graphic character; otherwise, returns false.\n\nExamples::\n..........\n\n      (graphic-char-p #\\G) =>  true\n      (graphic-char-p #\\#) =>  true\n      (graphic-char-p #\\Space) =>  true\n      (graphic-char-p #\\Newline) =>  false\n\nExceptional Situations::\n........................\n\nShould signal an error of type type-error if character is not a character.\n\nSee Also::\n..........\n\n*Note read; read-preserving-whitespace:: , *Note Character Syntax::, *Note\nDocumentation of Implementation-Defined Scripts::\n\n"
}