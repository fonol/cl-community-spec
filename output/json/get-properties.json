{
    "name": "get-properties",
    "prev": "rassoc",
    "next": "getf",
    "up": "Conses Dictionary",
    "header": {
        "type": "Function",
        "text": "get-properties"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "get-properties",
                    "text": " plist indicator-list =>  indicator, value, tail\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "plist",
                    "desc": "a property list."
                },
                {
                    "name": "indicator-list",
                    "desc": "a proper list (of indicators)."
                },
                {
                    "name": "indicator",
                    "desc": "an object that is an element of indicator-list."
                },
                {
                    "name": "value",
                    "desc": "an object."
                },
                {
                    "name": "tail",
                    "desc": "a list."
                }
            ]
        },
        {
            "type": "Description",
            "text": "get-properties is used to look up any of several property list entries all\nat once.\nIt searches the plist for the first entry whose indicator is identical to\none of the objects in indicator-list.  If such an entry is found, the\nindicator and value returned are the property indicator and its associated\nproperty value, and the tail returned is the tail of the plist that begins\nwith the found entry (i.e., whose car is the indicator).  If no such entry\nis found, the indicator, value, and tail are all nil.\n"
        },
        {
            "type": "Examples",
            "text": "      (setq x '()) =>  NIL\n      (setq *indicator-list* '(prop1 prop2)) =>  (PROP1 PROP2)\n      (getf x 'prop1) =>  NIL\n      (setf (getf x 'prop1) 'val1) =>  VAL1\n      (eq (getf x 'prop1) 'val1) =>  true\n      (get-properties x *indicator-list*) =>  PROP1, VAL1, (PROP1 VAL1)\n      x =>  (PROP1 VAL1)\n"
        },
        {
            "type": "See Also",
            "text": "*Note get:: , *Note getf::\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: get-properties,  Next: getf,  Prev: rassoc,  Up: Conses Dictionary\n\nget-properties                                                   [Function]\n---------------------------------------------------------------------------\n\n`get-properties'  plist indicator-list =>  indicator, value, tail\n\nArguments and Values::\n......................\n\nplist--a property list.\n\nindicator-list--a proper list (of indicators).\n\nindicator--an object that is an element of indicator-list.\n\nvalue--an object.\n\ntail--a list.\n\nDescription::\n.............\n\nget-properties is used to look up any of several property list entries all\nat once.\n\nIt searches the plist for the first entry whose indicator is identical to\none of the objects in indicator-list.  If such an entry is found, the\nindicator and value returned are the property indicator and its associated\nproperty value, and the tail returned is the tail of the plist that begins\nwith the found entry (i.e., whose car is the indicator).  If no such entry\nis found, the indicator, value, and tail are all nil.\n\nExamples::\n..........\n\n      (setq x '()) =>  NIL\n      (setq *indicator-list* '(prop1 prop2)) =>  (PROP1 PROP2)\n      (getf x 'prop1) =>  NIL\n      (setf (getf x 'prop1) 'val1) =>  VAL1\n      (eq (getf x 'prop1) 'val1) =>  true\n      (get-properties x *indicator-list*) =>  PROP1, VAL1, (PROP1 VAL1)\n      x =>  (PROP1 VAL1)\n\nSee Also::\n..........\n\n*Note get:: , *Note getf::\n\n"
}