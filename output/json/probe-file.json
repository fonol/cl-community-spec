{
    "name": "probe-file",
    "prev": "directory",
    "next": "ensure-directories-exist",
    "up": "Files Dictionary",
    "header": {
        "type": "Function",
        "text": "probe-file"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "probe-file",
                    "text": " pathspec =>  truename\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "pathspec",
                    "desc": "a pathname designator."
                },
                {
                    "name": "truename",
                    "desc": "a physical pathname or nil."
                }
            ]
        },
        {
            "type": "Description",
            "text": "probe-file tests whether a file exists.\nprobe-file returns false if there is no file named pathspec, and otherwise\nreturns the truename of pathspec.\nIf the pathspec designator is an open stream, then probe-file produces the\ntruename of its associated file.\nIf pathspec is a stream, whether open or closed, it is coerced to a\npathname as if by the function pathname.\n"
        },
        {
            "type": "Affected By",
            "text": "The host computer's file system.\n"
        },
        {
            "type": "Exceptional Situations",
            "text": "An error of type file-error is signaled if pathspec is wild.\nAn error of type file-error is signaled if the file system cannot perform\nthe requested operation.\n"
        },
        {
            "type": "See Also",
            "text": "*Note truename:: , *Note open:: , *Note ensure-directories-exist:: ,\npathname,\nlogical-pathname,\n*Note File System Concepts::, *Note File Operations on Open and Closed\nStreams::,\n*Note Pathnames as Filenames::\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: probe-file,  Next: ensure-directories-exist,  Prev: directory,  Up: Files Dictionary\n\nprobe-file                                                       [Function]\n---------------------------------------------------------------------------\n\n`probe-file'  pathspec =>  truename\n\nArguments and Values::\n......................\n\npathspec--a pathname designator.\n\ntruename--a physical pathname or nil.\n\nDescription::\n.............\n\nprobe-file tests whether a file exists.\n\nprobe-file returns false if there is no file named pathspec, and otherwise\nreturns the truename of pathspec.\n\nIf the pathspec designator is an open stream, then probe-file produces the\ntruename of its associated file.\n\nIf pathspec is a stream, whether open or closed, it is coerced to a\npathname as if by the function pathname.\n\nAffected By::\n.............\n\nThe host computer's file system.\n\nExceptional Situations::\n........................\n\nAn error of type file-error is signaled if pathspec is wild.\n\nAn error of type file-error is signaled if the file system cannot perform\nthe requested operation.\n\nSee Also::\n..........\n\n*Note truename:: , *Note open:: , *Note ensure-directories-exist:: ,\npathname,\n\nlogical-pathname,\n\n*Note File System Concepts::, *Note File Operations on Open and Closed\nStreams::,\n\n*Note Pathnames as Filenames::\n\n"
}