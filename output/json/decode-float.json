{
    "name": "decode-float",
    "prev": "most-positive-fixnum",
    "next": "float",
    "up": "Numbers Dictionary",
    "header": {
        "type": null,
        "text": "float-digits, float-precision, integer-decode-float"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "decode-float",
                    "text": " float =>  significand, exponent, sign\n"
                },
                {
                    "name": "scale-float",
                    "text": " float integer =>  scaled-float\n\n"
                },
                {
                    "name": "float-radix",
                    "text": " float =>  float-radix\n\n"
                },
                {
                    "name": "float-sign",
                    "text": " float-1 &optional float-2 =>  signed-float\n\n"
                },
                {
                    "name": "float-digits",
                    "text": " float =>  digits1\n\n"
                },
                {
                    "name": "float-precision",
                    "text": " float =>  digits2\n\n"
                },
                {
                    "name": "integer-decode-float",
                    "text": " float =>  significand, exponent, integer-sign\n\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "digits1",
                    "desc": "a non-negative integer."
                },
                {
                    "name": "digits2",
                    "desc": "a non-negative integer."
                },
                {
                    "name": "exponent",
                    "desc": "an integer."
                },
                {
                    "name": "float",
                    "desc": "a float."
                },
                {
                    "name": "float-1",
                    "desc": "a float."
                },
                {
                    "name": "float-2",
                    "desc": "a float."
                },
                {
                    "name": "float-radix",
                    "desc": "an integer."
                },
                {
                    "name": "integer",
                    "desc": "a non-negative integer."
                },
                {
                    "name": "integer-sign",
                    "desc": "the integer -1, or the integer 1."
                },
                {
                    "name": "scaled-float",
                    "desc": "a float."
                },
                {
                    "name": "sign",
                    "desc": "A float of the same type as float but numerically equal to 1.0 or"
                },
                {
                    "name": "sign",
                    "desc": "A float of the same type as float but numerically equal to 1.0 or-1.0.\n"
                },
                {
                    "name": "signed-float",
                    "desc": "a float."
                },
                {
                    "name": "significand",
                    "desc": "a float."
                }
            ]
        },
        {
            "type": "Description",
            "text": "decode-float computes three values that characterize float.  The first\nvalue is of the same type as float and represents the significand.  The\nsecond value represents the exponent to which the radix (notated in this\ndescription by b) must be raised to obtain the value that, when multiplied\nwith the first result, produces the absolute value of float.  If float is\nzero, any integer value may be returned, provided that the identity shown\nfor scale-float holds.  The third value is of the same type as float and\nis 1.0 if float is greater than or equal to zero or -1.0 otherwise.\ndecode-float divides float by an integral power of b so as to bring its\nvalue between 1/b (inclusive) and~1 (exclusive), and returns the quotient\nas the first value.  If float is zero, however, the result equals the\nabsolute value of float (that is, if there is a negative zero, its\nsignificand is considered to be a positive zero).\nscale-float returns (* float (expt (float b float) integer))\\/, where b is\nthe radix of the floating-point representation. float is not necessarily\nbetween 1/b and~1.\nfloat-radix returns the radix of float.\nfloat-sign returns a number z such that z and float-1 have the same sign\nand also such that z and float-2 have the same absolute value.  If float-2\nis not supplied, its value is (float 1 float-1).  If an implementation has\ndistinct representations for negative zero and positive zero, then\n(float-sign -0.0) =>  -1.0.\nfloat-digits returns the number of radix b digits used in the\nrepresentation of float (including any implicit digits, such as a \"hidden\nbit\").\nfloat-precision returns the number of significant radix b digits present\nin float; if float is a float zero, then the result is an integer zero.\nFor normalized floats, the results of float-digits and float-precision are\nthe same, but the precision is less than the number of representation\ndigits for a denormalized or zero number.\ninteger-decode-float computes three values that characterize float - the\nsignificand scaled so as to be an integer, and the same last two values\nthat are returned by decode-float.  If float is zero, integer-decode-float\nreturns zero as the first value.  The second value bears the same\nrelationship to the first value as for decode-float:\n      (multiple-value-bind (signif expon sign)\n                           (integer-decode-float f)\n        (scale-float (float signif f) expon)) == (abs f)\n"
        },
        {
            "type": "Examples",
            "text": "      ;; Note that since the purpose of this functionality is to expose\n      ;; details of the implementation, all of these examples are necessarily\n      ;; very implementation-dependent.  Results may vary widely.\n      ;; Values shown here are chosen consistently from one particular implementation.\n      (decode-float .5) =>  0.5, 0, 1.0\n      (decode-float 1.0) =>  0.5, 1, 1.0\n      (scale-float 1.0 1) =>  2.0\n      (scale-float 10.01 -2) =>  2.5025\n      (scale-float 23.0 0) =>  23.0\n      (float-radix 1.0) =>  2\n      (float-sign 5.0) =>  1.0\n      (float-sign -5.0) =>  -1.0\n      (float-sign 0.0) =>  1.0\n      (float-sign 1.0 0.0) =>  0.0\n      (float-sign 1.0 -10.0) =>  10.0\n      (float-sign -1.0 10.0) =>  -10.0\n      (float-digits 1.0) =>  24\n      (float-precision 1.0) =>  24\n      (float-precision least-positive-single-float) =>  1\n      (integer-decode-float 1.0) =>  8388608, -23, 1\n"
        },
        {
            "type": "Affected By",
            "text": "The implementation's representation for floats.\n"
        },
        {
            "type": "Exceptional Situations",
            "text": "The functions decode-float, float-radix, float-digits, float-precision,\nand integer-decode-float should signal an error if their only argument is\nnot a float.\nThe function scale-float should signal an error if its first argument is\nnot a float or if its second argument is not an integer.\nThe function float-sign should signal an error if its first argument is\nnot a float or if its second argument is supplied but is not a float.\n"
        },
        {
            "type": "Notes",
            "text": "The product of the first result of decode-float or integer-decode-float,\nof the radix raised to the power of the second result, and of the third\nresult is exactly equal to the value of float.\n      (multiple-value-bind (signif expon sign)\n                           (decode-float f)\n        (scale-float signif expon))\n     == (abs f)\nand\n      (multiple-value-bind (signif expon sign)\n                           (decode-float f)\n        (* (scale-float signif expon) sign))\n     == f\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: decode-float,  Next: float,  Prev: most-positive-fixnum,  Up: Numbers Dictionary\n\ndecode-float, scale-float, float-radix, float-sign,\n---------------------------------------------------\n\nfloat-digits, float-precision, integer-decode-float\n---------------------------------------------------\n\n                                                                [Function]\n\n`decode-float'  float =>  significand, exponent, sign\n\n`scale-float'  float integer =>  scaled-float\n\n`float-radix'  float =>  float-radix\n\n`float-sign'  float-1 &optional float-2 =>  signed-float\n\n`float-digits'  float =>  digits1\n\n`float-precision'  float =>  digits2\n\n`integer-decode-float'  float =>  significand, exponent, integer-sign\n\nArguments and Values::\n......................\n\ndigits1--a non-negative integer.\n\ndigits2--a non-negative integer.\n\nexponent--an integer.\n\nfloat--a float.\n\nfloat-1--a float.\n\nfloat-2--a float.\n\nfloat-radix--an integer.\n\ninteger--a non-negative integer.\n\ninteger-sign--the integer -1, or the integer 1.\n\nscaled-float--a float.\n\nsign--A float of the same type as float but numerically equal to 1.0 or\n-1.0.\n\nsigned-float--a float.\n\nsignificand--a float.\n\nDescription::\n.............\n\ndecode-float computes three values that characterize float.  The first\nvalue is of the same type as float and represents the significand.  The\nsecond value represents the exponent to which the radix (notated in this\ndescription by b) must be raised to obtain the value that, when multiplied\nwith the first result, produces the absolute value of float.  If float is\nzero, any integer value may be returned, provided that the identity shown\nfor scale-float holds.  The third value is of the same type as float and\nis 1.0 if float is greater than or equal to zero or -1.0 otherwise.\n\ndecode-float divides float by an integral power of b so as to bring its\nvalue between 1/b (inclusive) and~1 (exclusive), and returns the quotient\nas the first value.  If float is zero, however, the result equals the\nabsolute value of float (that is, if there is a negative zero, its\nsignificand is considered to be a positive zero).\n\nscale-float returns (* float (expt (float b float) integer))\\/, where b is\nthe radix of the floating-point representation. float is not necessarily\nbetween 1/b and~1.\n\nfloat-radix returns the radix of float.\n\nfloat-sign returns a number z such that z and float-1 have the same sign\nand also such that z and float-2 have the same absolute value.  If float-2\nis not supplied, its value is (float 1 float-1).  If an implementation has\ndistinct representations for negative zero and positive zero, then\n(float-sign -0.0) =>  -1.0.\n\nfloat-digits returns the number of radix b digits used in the\nrepresentation of float (including any implicit digits, such as a \"hidden\nbit\").\n\nfloat-precision returns the number of significant radix b digits present\nin float; if float is a float zero, then the result is an integer zero.\n\nFor normalized floats, the results of float-digits and float-precision are\nthe same, but the precision is less than the number of representation\ndigits for a denormalized or zero number.\n\ninteger-decode-float computes three values that characterize float - the\nsignificand scaled so as to be an integer, and the same last two values\nthat are returned by decode-float.  If float is zero, integer-decode-float\nreturns zero as the first value.  The second value bears the same\nrelationship to the first value as for decode-float:\n\n      (multiple-value-bind (signif expon sign)\n                           (integer-decode-float f)\n        (scale-float (float signif f) expon)) == (abs f)\n\nExamples::\n..........\n\n      ;; Note that since the purpose of this functionality is to expose\n      ;; details of the implementation, all of these examples are necessarily\n      ;; very implementation-dependent.  Results may vary widely.\n      ;; Values shown here are chosen consistently from one particular implementation.\n      (decode-float .5) =>  0.5, 0, 1.0\n      (decode-float 1.0) =>  0.5, 1, 1.0\n      (scale-float 1.0 1) =>  2.0\n      (scale-float 10.01 -2) =>  2.5025\n      (scale-float 23.0 0) =>  23.0\n      (float-radix 1.0) =>  2\n      (float-sign 5.0) =>  1.0\n      (float-sign -5.0) =>  -1.0\n      (float-sign 0.0) =>  1.0\n      (float-sign 1.0 0.0) =>  0.0\n      (float-sign 1.0 -10.0) =>  10.0\n      (float-sign -1.0 10.0) =>  -10.0\n      (float-digits 1.0) =>  24\n      (float-precision 1.0) =>  24\n      (float-precision least-positive-single-float) =>  1\n      (integer-decode-float 1.0) =>  8388608, -23, 1\n\nAffected By::\n.............\n\nThe implementation's representation for floats.\n\nExceptional Situations::\n........................\n\nThe functions decode-float, float-radix, float-digits, float-precision,\nand integer-decode-float should signal an error if their only argument is\nnot a float.\n\nThe function scale-float should signal an error if its first argument is\nnot a float or if its second argument is not an integer.\n\nThe function float-sign should signal an error if its first argument is\nnot a float or if its second argument is supplied but is not a float.\n\nNotes::\n.......\n\nThe product of the first result of decode-float or integer-decode-float,\nof the radix raised to the power of the second result, and of the third\nresult is exactly equal to the value of float.\n\n      (multiple-value-bind (signif expon sign)\n                           (decode-float f)\n        (scale-float signif expon))\n     == (abs f)\n\nand\n\n      (multiple-value-bind (signif expon sign)\n                           (decode-float f)\n        (* (scale-float signif expon) sign))\n     == f\n\n"
}