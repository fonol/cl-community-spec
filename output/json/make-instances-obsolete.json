{
    "name": "make-instances-obsolete",
    "prev": "make-instance",
    "next": "make-load-form",
    "up": "Objects Dictionary",
    "header": {
        "type": "Standard Generic Function",
        "text": "make-instances-obsolete"
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "make-instances-obsolete",
                    "text": " class =>  class\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "make-instances-obsolete",
                    "text": " (class standard-class)\n"
                },
                {
                    "name": "make-instances-obsolete",
                    "text": " (class symbol)\n\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "class",
                    "desc": "a class designator."
                }
            ]
        },
        {
            "type": "Description",
            "text": "The function make-instances-obsolete has the effect of initiating the\nprocess of updating the instances of the class. During updating, the\ngeneric function update-instance-for-redefined-class will be invoked.\nThe generic function make-instances-obsolete is invoked automatically by\nthe system when defclass has been used to redefine an existing standard\nclass and the set of local slots accessible in an instance is changed or\nthe order of slots in storage is changed.  It can also be explicitly\ninvoked by the user.\nIf the second of the above methods is selected, that method invokes\nmake-instances-obsolete on (find-class class).\n"
        },
        {
            "type": "Examples",
            "text": ""
        },
        {
            "type": "See Also",
            "text": "*Note update-instance-for-redefined-class:: , *Note Redefining Classes::\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: make-instances-obsolete,  Next: make-load-form,  Prev: make-instance,  Up: Objects Dictionary\n\nmake-instances-obsolete                         [Standard Generic Function]\n---------------------------------------------------------------------------\n\nSyntax::\n........\n\n`make-instances-obsolete'  class =>  class\n\nMethod Signatures::\n...................\n\n`make-instances-obsolete'  (class standard-class)\n\n`make-instances-obsolete'  (class symbol)\n\nArguments and Values::\n......................\n\nclass--a class designator.\n\nDescription::\n.............\n\nThe function make-instances-obsolete has the effect of initiating the\nprocess of updating the instances of the class. During updating, the\ngeneric function update-instance-for-redefined-class will be invoked.\n\nThe generic function make-instances-obsolete is invoked automatically by\nthe system when defclass has been used to redefine an existing standard\nclass and the set of local slots accessible in an instance is changed or\nthe order of slots in storage is changed.  It can also be explicitly\ninvoked by the user.\n\nIf the second of the above methods is selected, that method invokes\nmake-instances-obsolete on (find-class class).\n\nExamples::\n..........\n\nSee Also::\n..........\n\n*Note update-instance-for-redefined-class:: , *Note Redefining Classes::\n\n"
}