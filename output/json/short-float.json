{
    "name": "short-float",
    "prev": "float (System Class)",
    "next": "rational",
    "up": "Numbers Dictionary",
    "header": {
        "type": "Type",
        "text": "short-float, single-float, double-float, long-float"
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Supertypes",
            "text": "short-float: short-float, float,\nreal,\nnumber, t\nsingle-float: single-float, float,\nreal,\nnumber, t\ndouble-float: double-float, float,\nreal,\nnumber, t\nlong-float: long-float, float,\nreal,\nnumber, t\n"
        },
        {
            "type": "Description",
            "text": "For the four defined subtypes of type float, it is true that intermediate\nbetween the type short-float and the type long-float are the type\nsingle-float and the type double-float.  The precise definition of these\ncategories is implementation-defined.  The precision (measured in \"bits\",\ncomputed as p\\log_2b) and the exponent size (also measured in \"bits,\"\ncomputed as \\log_2(n+1), where n is the maximum exponent value) is\nrecommended to be at least as great as the values in Figure 12-11.  Each\nof the defined subtypes of type float might or might not have a minus zero.\n  Format  Minimum Precision  Minimum Exponent Size  \n  __________________________________________________\n  Short   13 bits            5 bits                 \n  Single  24 bits            8 bits                 \n  Double  50 bits            8 bits                 \n  Long    50 bits            8 bits                 \n  Figure 12-11: Recommended Minimum Floating-Point Precision and Exponent Size\nThere can be fewer than four internal representations for floats.  If\nthere are fewer distinct representations, the following rules apply:\n-\n     If there is only one, it is the type single-float.  In this\n     representation, an object is simultaneously of types single-float,\n     double-float, short-float, and long-float.\n-\n     Two internal representations can be arranged in either of the\n     following ways:\n    *\n          Two types are provided: single-float and short-float.  An object\n          is simultaneously of types single-float, double-float, and\n          long-float.\n    *\n          Two types are provided: single-float and double-float. An object\n          is simultaneously of types single-float and short-float, or\n          double-float and long-float.\n-\n     Three internal representations can be arranged in either of the\n     following ways:\n    *\n          Three types are provided: short-float, single-float, and\n          double-float.  An object can simultaneously be of type\n          double-float and long-float.\n    *\n          Three types are provided: single-float, double-float, and\n          long-float. An object can simultaneously be of types\n          single-float and short-float.\n"
        },
        {
            "type": "Compound Type Specifier Kind",
            "text": "Abbreviating.\n"
        },
        {
            "type": "Compound Type Specifier Syntax",
            "text": "(`short-float'{[short-lower-limit   [short-upper-limit]]})\n(`single-float'{[single-lower-limit [single-upper-limit]]})\n(`double-float'{[double-lower-limit [double-upper-limit]]})\n(`long-float'{[long-lower-limit     [long-upper-limit]]})\n"
        },
        {
            "type": "Compound Type Specifier Arguments",
            "text": "short-lower-limit, short-upper-limit--interval designators for type\nshort-float.  The defaults for each of lower-limit and upper-limit is the\nsymbol *.\nsingle-lower-limit, single-upper-limit--interval designators for type\nsingle-float.  The defaults for each of lower-limit and upper-limit is the\nsymbol *.\ndouble-lower-limit, double-upper-limit--interval designators for type\ndouble-float.  The defaults for each of lower-limit and upper-limit is the\nsymbol *.\nlong-lower-limit, long-upper-limit--interval designators for type\nlong-float.  The defaults for each of lower-limit and upper-limit is the\nsymbol *.\n"
        },
        {
            "type": "Compound Type Specifier Description",
            "text": "Each of these denotes the set of floats of the indicated type that are on\nthe interval specified by the interval designators.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: short-float,  Next: rational,  Prev: float (System Class),  Up: Numbers Dictionary\n\nshort-float, single-float, double-float, long-float                  [Type]\n---------------------------------------------------------------------------\n\nSupertypes::\n............\n\nshort-float: short-float, float,\n\nreal,\n\nnumber, t\n\nsingle-float: single-float, float,\n\nreal,\n\nnumber, t\n\ndouble-float: double-float, float,\n\nreal,\n\nnumber, t\n\nlong-float: long-float, float,\n\nreal,\n\nnumber, t\n\nDescription::\n.............\n\nFor the four defined subtypes of type float, it is true that intermediate\nbetween the type short-float and the type long-float are the type\nsingle-float and the type double-float.  The precise definition of these\ncategories is implementation-defined.  The precision (measured in \"bits\",\ncomputed as p\\log_2b) and the exponent size (also measured in \"bits,\"\ncomputed as \\log_2(n+1), where n is the maximum exponent value) is\nrecommended to be at least as great as the values in Figure 12-11.  Each\nof the defined subtypes of type float might or might not have a minus zero.\n\n  Format  Minimum Precision  Minimum Exponent Size  \n  __________________________________________________\n  Short   13 bits            5 bits                 \n  Single  24 bits            8 bits                 \n  Double  50 bits            8 bits                 \n  Long    50 bits            8 bits                 \n\n  Figure 12-11: Recommended Minimum Floating-Point Precision and Exponent Size\n\n\nThere can be fewer than four internal representations for floats.  If\nthere are fewer distinct representations, the following rules apply:\n-\n     If there is only one, it is the type single-float.  In this\n     representation, an object is simultaneously of types single-float,\n     double-float, short-float, and long-float.\n\n-\n     Two internal representations can be arranged in either of the\n     following ways:\n    *\n          Two types are provided: single-float and short-float.  An object\n          is simultaneously of types single-float, double-float, and\n          long-float.\n\n    *\n          Two types are provided: single-float and double-float. An object\n          is simultaneously of types single-float and short-float, or\n          double-float and long-float.\n\n-\n     Three internal representations can be arranged in either of the\n     following ways:\n    *\n          Three types are provided: short-float, single-float, and\n          double-float.  An object can simultaneously be of type\n          double-float and long-float.\n\n    *\n          Three types are provided: single-float, double-float, and\n          long-float. An object can simultaneously be of types\n          single-float and short-float.\n\nCompound Type Specifier Kind::\n..............................\n\nAbbreviating.\n\nCompound Type Specifier Syntax::\n................................\n\n(`short-float'{[short-lower-limit   [short-upper-limit]]})\n(`single-float'{[single-lower-limit [single-upper-limit]]})\n(`double-float'{[double-lower-limit [double-upper-limit]]})\n(`long-float'{[long-lower-limit     [long-upper-limit]]})\n\nCompound Type Specifier Arguments::\n...................................\n\nshort-lower-limit, short-upper-limit--interval designators for type\nshort-float.  The defaults for each of lower-limit and upper-limit is the\nsymbol *.\n\nsingle-lower-limit, single-upper-limit--interval designators for type\nsingle-float.  The defaults for each of lower-limit and upper-limit is the\nsymbol *.\n\ndouble-lower-limit, double-upper-limit--interval designators for type\ndouble-float.  The defaults for each of lower-limit and upper-limit is the\nsymbol *.\n\nlong-lower-limit, long-upper-limit--interval designators for type\nlong-float.  The defaults for each of lower-limit and upper-limit is the\nsymbol *.\n\nCompound Type Specifier Description::\n.....................................\n\nEach of these denotes the set of floats of the indicated type that are on\nthe interval specified by the interval designators.\n\n"
}