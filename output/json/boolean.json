{
    "name": "boolean",
    "prev": "nil (Type)",
    "next": "function (System Class)",
    "up": "Types and Classes Dictionary",
    "header": {
        "type": "Type",
        "text": "boolean"
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Supertypes",
            "text": "boolean, symbol, t\n"
        },
        {
            "type": "Description",
            "text": "The type boolean contains the symbols t and nil, which represent true and\nfalse, respectively.\n"
        },
        {
            "type": "See Also",
            "text": "t (constant variable), nil (constant variable), *Note if:: , *Note not:: ,\n*Note complement::\n"
        },
        {
            "type": "Notes",
            "text": "Conditional operations, such as if, permit the use of generalized booleans,\nnot just booleans; any non-nil value, not just t, counts as true for a\ngeneralized boolean.  However, as a matter of convention, the symbol t is\nconsidered the canonical value to use even for a generalized boolean when\nno better choice presents itself.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: boolean,  Next: function (System Class),  Prev: nil (Type),  Up: Types and Classes Dictionary\n\nboolean                                                              [Type]\n---------------------------------------------------------------------------\n\nSupertypes::\n............\n\nboolean, symbol, t\n\nDescription::\n.............\n\nThe type boolean contains the symbols t and nil, which represent true and\nfalse, respectively.\n\nSee Also::\n..........\n\nt (constant variable), nil (constant variable), *Note if:: , *Note not:: ,\n*Note complement::\n\nNotes::\n.......\n\nConditional operations, such as if, permit the use of generalized booleans,\nnot just booleans; any non-nil value, not just t, counts as true for a\ngeneralized boolean.  However, as a matter of convention, the symbol t is\nconsidered the canonical value to use even for a generalized boolean when\nno better choice presents itself.\n\n"
}