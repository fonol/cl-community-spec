{
    "name": "fill-pointer",
    "prev": "arrayp",
    "next": "row-major-aref",
    "up": "Arrays Dictionary",
    "header": {
        "type": "Accessor",
        "text": "fill-pointer"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "fill-pointer",
                    "text": " vector =>  fill-pointer\n(setf (`         fill-pointer' vector) new-fill-pointer)\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "vector",
                    "desc": "a vector with a fill pointer."
                },
                {
                    "name": "fill-pointer, new-fill-pointer",
                    "desc": "a valid fill pointer for the vector."
                }
            ]
        },
        {
            "type": "Description",
            "text": "Accesses the fill pointer of vector.\n"
        },
        {
            "type": "Examples",
            "text": "      (setq a (make-array 8 :fill-pointer 4)) =>  #(NIL NIL NIL NIL)\n      (fill-pointer a) =>  4\n      (dotimes (i (length a)) (setf (aref a i) (* i i))) =>  NIL\n      a =>  #(0 1 4 9)\n      (setf (fill-pointer a) 3) =>  3\n      (fill-pointer a) =>  3\n      a =>  #(0 1 4)\n      (setf (fill-pointer a) 8) =>  8\n      a =>  #(0 1 4 9 NIL NIL NIL NIL)\n"
        },
        {
            "type": "Exceptional Situations",
            "text": "Should signal an error of type type-error if vector is not a vector with a\nfill pointer.\n"
        },
        {
            "type": "See Also",
            "text": "*Note make-array:: , *Note length::\n"
        },
        {
            "type": "Notes",
            "text": "There is no operator that will remove a vector's fill pointer.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: fill-pointer,  Next: row-major-aref,  Prev: arrayp,  Up: Arrays Dictionary\n\nfill-pointer                                                     [Accessor]\n---------------------------------------------------------------------------\n\n`fill-pointer'  vector =>  fill-pointer\n\n(setf (`         fill-pointer' vector) new-fill-pointer)\nArguments and Values::\n......................\n\nvector--a vector with a fill pointer.\n\nfill-pointer, new-fill-pointer--a valid fill pointer for the vector.\n\nDescription::\n.............\n\nAccesses the fill pointer of vector.\n\nExamples::\n..........\n\n      (setq a (make-array 8 :fill-pointer 4)) =>  #(NIL NIL NIL NIL)\n      (fill-pointer a) =>  4\n      (dotimes (i (length a)) (setf (aref a i) (* i i))) =>  NIL\n      a =>  #(0 1 4 9)\n      (setf (fill-pointer a) 3) =>  3\n      (fill-pointer a) =>  3\n      a =>  #(0 1 4)\n      (setf (fill-pointer a) 8) =>  8\n      a =>  #(0 1 4 9 NIL NIL NIL NIL)\n\nExceptional Situations::\n........................\n\nShould signal an error of type type-error if vector is not a vector with a\nfill pointer.\n\nSee Also::\n..........\n\n*Note make-array:: , *Note length::\n\nNotes::\n.......\n\nThere is no operator that will remove a vector's fill pointer.\n\n"
}