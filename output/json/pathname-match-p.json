{
    "name": "pathname-match-p",
    "prev": "wild-pathname-p",
    "next": "translate-logical-pathname",
    "up": "Filenames Dictionary",
    "header": {
        "type": "Function",
        "text": "pathname-match-p"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "pathname-match-p",
                    "text": " pathname wildcard =>  generalized-boolean\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "pathname",
                    "desc": "a pathname designator."
                },
                {
                    "name": "wildcard",
                    "desc": "a designator for a wild pathname."
                },
                {
                    "name": "generalized-boolean",
                    "desc": "a generalized boolean."
                }
            ]
        },
        {
            "type": "Description",
            "text": "pathname-match-p returns true if pathname matches wildcard, otherwise nil.\nThe matching rules are implementation-defined but should be consistent\nwith directory. Missing components of wildcard default to :wild.\nIt is valid for pathname to be a wild pathname; a wildcard field in\npathname only matches a wildcard field in wildcard (i.e., pathname-match-p\nis not commutative).  It is valid for wildcard to be a non-wild pathname.\n"
        },
        {
            "type": "Exceptional Situations",
            "text": "If pathname or wildcard is not a pathname, string, or stream associated\nwith a file an error of type type-error is signaled.\n"
        },
        {
            "type": "See Also",
            "text": "*Note directory:: , pathname, logical-pathname, *Note File System\nConcepts::,\n*Note Pathnames as Filenames::\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: pathname-match-p,  Next: translate-logical-pathname,  Prev: wild-pathname-p,  Up: Filenames Dictionary\n\npathname-match-p                                                 [Function]\n---------------------------------------------------------------------------\n\n`pathname-match-p'  pathname wildcard =>  generalized-boolean\n\nArguments and Values::\n......................\n\npathname--a pathname designator.\n\nwildcard--a designator for a wild pathname.\n\ngeneralized-boolean--a generalized boolean.\n\nDescription::\n.............\n\npathname-match-p returns true if pathname matches wildcard, otherwise nil.\nThe matching rules are implementation-defined but should be consistent\nwith directory. Missing components of wildcard default to :wild.\n\nIt is valid for pathname to be a wild pathname; a wildcard field in\npathname only matches a wildcard field in wildcard (i.e., pathname-match-p\nis not commutative).  It is valid for wildcard to be a non-wild pathname.\n\nExceptional Situations::\n........................\n\nIf pathname or wildcard is not a pathname, string, or stream associated\nwith a file an error of type type-error is signaled.\n\nSee Also::\n..........\n\n*Note directory:: , pathname, logical-pathname, *Note File System\nConcepts::,\n\n*Note Pathnames as Filenames::\n\n"
}