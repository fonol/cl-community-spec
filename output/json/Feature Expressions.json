{
    "name": "Feature Expressions",
    "prev": "Features",
    "next": "Examples of Feature Expressions",
    "up": "Features",
    "header": {
        "type": null,
        "text": null
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Feature Expressions",
            "text": "Boolean combinations of features, called feature expressions , are used by\nthe #+ and #- reader macros in order to direct conditional reading of\nexpressions by the Lisp reader.\nThe rules for interpreting a feature expression are as follows:\nfeature\n     If a symbol naming a feature is used as a feature expression, the\n     feature expression succeeds if that feature is present; otherwise it\n     fails.\n(not feature-conditional)\n     A not feature expression succeeds if its argument feature-conditional\n     fails; otherwise, it succeeds.\n(and {feature-conditional}*)\n     An and feature expression succeeds if all of its argument\n     feature-conditionals succeed; otherwise, it fails.\n(or {feature-conditional}*)\n     An or feature expression succeeds if any of its argument\n     feature-conditionals succeed; otherwise, it fails.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: Feature Expressions,  Next: Examples of Feature Expressions,  Prev: Features,  Up: Features\n\nFeature Expressions\n...................\n\nBoolean combinations of features, called feature expressions , are used by\nthe #+ and #- reader macros in order to direct conditional reading of\nexpressions by the Lisp reader.\n\nThe rules for interpreting a feature expression are as follows:\n\nfeature\n     If a symbol naming a feature is used as a feature expression, the\n     feature expression succeeds if that feature is present; otherwise it\n     fails.\n\n(not feature-conditional)\n     A not feature expression succeeds if its argument feature-conditional\n     fails; otherwise, it succeeds.\n\n(and {feature-conditional}*)\n     An and feature expression succeeds if all of its argument\n     feature-conditionals succeed; otherwise, it fails.\n\n(or {feature-conditional}*)\n     An or feature expression succeeds if any of its argument\n     feature-conditionals succeed; otherwise, it fails.\n\n"
}