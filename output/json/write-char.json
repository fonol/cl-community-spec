{
    "name": "write-char",
    "prev": "unread-char",
    "next": "read-line",
    "up": "Streams Dictionary",
    "header": {
        "type": "Function",
        "text": "write-char"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "write-char",
                    "text": " character &optional output-stream =>  character\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": []
        },
        {
            "type": "Description",
            "text": "write-char outputs character to output-stream.\n"
        },
        {
            "type": "Examples",
            "text": "      (write-char #\\a)\n      |>  a\n     =>  #\\a\n      (with-output-to-string (s)\n        (write-char #\\a s)\n        (write-char #\\Space s)\n        (write-char #\\b s))\n     =>  \"a b\"\n"
        },
        {
            "type": "Side Effects",
            "text": "The output-stream is modified.\n"
        },
        {
            "type": "Affected By",
            "text": "*standard-output*, *terminal-io*.\n"
        },
        {
            "type": "See Also",
            "text": "*Note read-char:: , *Note write-byte:: ,\n*Note write-sequence::\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: write-char,  Next: read-line,  Prev: unread-char,  Up: Streams Dictionary\n\nwrite-char                                                       [Function]\n---------------------------------------------------------------------------\n\n`write-char'  character &optional output-stream =>  character\n\nArguments and Values::\n......................\n\ncharacter--a character.\n\noutput-stream - an output stream designator.  The default is standard\noutput.\n\nDescription::\n.............\n\nwrite-char outputs character to output-stream.\n\nExamples::\n..........\n\n      (write-char #\\a)\n      |>  a\n     =>  #\\a\n      (with-output-to-string (s)\n        (write-char #\\a s)\n        (write-char #\\Space s)\n        (write-char #\\b s))\n     =>  \"a b\"\n\nSide Effects::\n..............\n\nThe output-stream is modified.\n\nAffected By::\n.............\n\n*standard-output*, *terminal-io*.\n\nSee Also::\n..........\n\n*Note read-char:: , *Note write-byte:: ,\n\n*Note write-sequence::\n\n"
}