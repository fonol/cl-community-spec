{
    "name": "Examples of ALWAYS",
    "prev": "Examples of REPEAT clause",
    "next": "Examples of WHILE and UNTIL clauses",
    "up": "Termination Test Clauses",
    "header": {
        "type": null,
        "text": null
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Examples of ALWAYS, NEVER, and THEREIS clauses",
            "text": "     ;; Make sure I is always less than 11 (two ways).\n     ;; The FOR construct terminates these loops.\n      (loop for i from 0 to 10\n            always (< i 11))\n     =>  T\n      (loop for i from 0 to 10\n            never (> i 11))\n     =>  T\n     ;; If I exceeds 10 return I; otherwise, return NIL.\n     ;; The THEREIS construct terminates this loop.\n      (loop for i from 0\n            thereis (when (> i 10) i) )\n     =>  11\n     ;;; The FINALLY clause is not evaluated in these examples.\n      (loop for i from 0 to 10\n            always (< i 9)\n            finally (print \"you won't see this\"))\n     =>  NIL\n      (loop never t\n            finally (print \"you won't see this\"))\n     =>  NIL\n      (loop thereis \"Here is my value\"\n            finally (print \"you won't see this\"))\n     =>  \"Here is my value\"\n     ;; The FOR construct terminates this loop, so the FINALLY clause\n     ;; is evaluated.\n      (loop for i from 1 to 10\n            thereis (> i 11)\n            finally (prin1 'got-here))\n      |>  GOT-HERE\n     =>  NIL\n     ;; If this code could be used to find a counterexample to Fermat's\n     ;; last theorem, it would still not return the value of the\n     ;; counterexample because all of the THEREIS clauses in this example\n     ;; only return T.  But if Fermat is right, that won't matter\n     ;; because this won't terminate.\n      (loop for z upfrom 2\n            thereis\n              (loop for n upfrom 3 below (log z 2)\n                    thereis\n                      (loop for x below z\n                            thereis\n                              (loop for y below z\n                                    thereis (= (+ (expt x n) (expt y n))\n                                               (expt z n))))))\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: Examples of ALWAYS,  Next: Examples of WHILE and UNTIL clauses,  Prev: Examples of REPEAT clause,  Up: Termination Test Clauses\n\nExamples of ALWAYS, NEVER, and THEREIS clauses\n..............................................\n\n     ;; Make sure I is always less than 11 (two ways).\n     ;; The FOR construct terminates these loops.\n      (loop for i from 0 to 10\n            always (< i 11))\n     =>  T\n      (loop for i from 0 to 10\n            never (> i 11))\n     =>  T\n     \n     ;; If I exceeds 10 return I; otherwise, return NIL.\n     ;; The THEREIS construct terminates this loop.\n      (loop for i from 0\n            thereis (when (> i 10) i) )\n     =>  11\n     \n     ;;; The FINALLY clause is not evaluated in these examples.\n      (loop for i from 0 to 10\n            always (< i 9)\n            finally (print \"you won't see this\"))\n     =>  NIL\n      (loop never t\n            finally (print \"you won't see this\"))\n     =>  NIL\n      (loop thereis \"Here is my value\"\n            finally (print \"you won't see this\"))\n     =>  \"Here is my value\"\n     \n     ;; The FOR construct terminates this loop, so the FINALLY clause\n     ;; is evaluated.\n      (loop for i from 1 to 10\n            thereis (> i 11)\n            finally (prin1 'got-here))\n      |>  GOT-HERE\n     =>  NIL\n     \n     ;; If this code could be used to find a counterexample to Fermat's\n     ;; last theorem, it would still not return the value of the\n     ;; counterexample because all of the THEREIS clauses in this example\n     ;; only return T.  But if Fermat is right, that won't matter\n     ;; because this won't terminate.\n     \n      (loop for z upfrom 2\n            thereis\n              (loop for n upfrom 3 below (log z 2)\n                    thereis\n                      (loop for x below z\n                            thereis\n                              (loop for y below z\n                                    thereis (= (+ (expt x n) (expt y n))\n                                               (expt z n))))))\n\n"
}