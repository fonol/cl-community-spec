{
    "name": "Tilde Slash-> Call Function",
    "prev": "Tilde I-> Indent",
    "next": null,
    "up": "FORMAT Pretty Printer Operations",
    "header": {
        "type": null,
        "text": null
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Tilde Slash: Call Function",
            "text": "~/name/\nUser defined functions can be called from within a format string by using\nthe directive ~/name/.  The colon modifier, the at-sign modifier, and\narbitrarily many parameters can be specified with the ~/name/ directive.\nname can be any arbitrary string that does not contain a \"/\".  All of the\ncharacters in name are treated as if they were upper case.  If name\ncontains a single colon (:) or double colon (::), then everything up to\nbut not including the first \":\" or \"::\" is taken to be a string that names\na package.  Everything after the first \":\" or \"::\" (if any) is taken to be\na string that names a symbol.  The function corresponding to a ~/name/\ndirective is obtained by looking up the symbol that has the indicated name\nin the indicated package.  If name does not contain a \":\" or \"::\", then\nthe whole name string is looked up in the COMMON-LISP-USER package.\nWhen a ~/name/ directive is encountered, the indicated function is called\nwith four or more arguments.  The first four arguments are: the output\nstream, the format argument corresponding to the directive, a generalized\nboolean that is true if the colon modifier was used, and a generalized\nboolean that is true if the at-sign modifier was used.  The remaining\narguments consist of any parameters specified with the directive.  The\nfunction should print the argument appropriately.  Any values returned by\nthe function are ignored.\nThe three functions pprint-linear, pprint-fill, and pprint-tabular are\nspecifically designed so that they can be called by ~/.../ (i.e.,\n~/pprint-linear/, ~/pprint-fill/, and ~/pprint-tabular/).  In particular\nthey take colon and at-sign arguments.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: Tilde Slash-> Call Function,  Prev: Tilde I-> Indent,  Up: FORMAT Pretty Printer Operations\n\nTilde Slash: Call Function\n..........................\n\n~/name/\n\nUser defined functions can be called from within a format string by using\nthe directive ~/name/.  The colon modifier, the at-sign modifier, and\narbitrarily many parameters can be specified with the ~/name/ directive.\nname can be any arbitrary string that does not contain a \"/\".  All of the\ncharacters in name are treated as if they were upper case.  If name\ncontains a single colon (:) or double colon (::), then everything up to\nbut not including the first \":\" or \"::\" is taken to be a string that names\na package.  Everything after the first \":\" or \"::\" (if any) is taken to be\na string that names a symbol.  The function corresponding to a ~/name/\ndirective is obtained by looking up the symbol that has the indicated name\nin the indicated package.  If name does not contain a \":\" or \"::\", then\nthe whole name string is looked up in the COMMON-LISP-USER package.\n\nWhen a ~/name/ directive is encountered, the indicated function is called\nwith four or more arguments.  The first four arguments are: the output\nstream, the format argument corresponding to the directive, a generalized\nboolean that is true if the colon modifier was used, and a generalized\nboolean that is true if the at-sign modifier was used.  The remaining\narguments consist of any parameters specified with the directive.  The\nfunction should print the argument appropriately.  Any values returned by\nthe function are ignored.\n\nThe three functions pprint-linear, pprint-fill, and pprint-tabular are\nspecifically designed so that they can be called by ~/.../ (i.e.,\n~/pprint-linear/, ~/pprint-fill/, and ~/pprint-tabular/).  In particular\nthey take colon and at-sign arguments.\n\n"
}