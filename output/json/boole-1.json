{
    "name": "boole-1",
    "prev": "boole",
    "next": "logand",
    "up": "Numbers Dictionary",
    "header": {
        "type": null,
        "text": "boole-xor"
    },
    "sections": [
        {
            "type": "",
            "text": "                                                       [Constant Variable]\n"
        },
        {
            "type": "Constant Value",
            "text": "The identity and nature of the values of each of these variables is\nimplementation-dependent, except that it must be distinct from each of the\nvalues of the others, and it must be a valid first argument to the\nfunction boole.\n"
        },
        {
            "type": "Description",
            "text": "Each of these constants has a value which is one of the sixteen possible\nbit-wise logical operation specifiers.\n"
        },
        {
            "type": "Examples",
            "text": "      (boole boole-ior 1 16) =>  17\n      (boole boole-and -2 5) =>  4\n      (boole boole-eqv 17 15) =>  -31\n"
        },
        {
            "type": "See Also",
            "text": "*Note boole::\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: boole-1,  Next: logand,  Prev: boole,  Up: Numbers Dictionary\n\nboole-1,    boole-2,   boole-and,  boole-andc1, boole-andc2,\n------------------------------------------------------------\n\nboole-c1,   boole-c2,  boole-clr,  boole-eqv,   boole-ior,\n----------------------------------------------------------\n\nboole-nand, boole-nor, boole-orc1, boole-orc2,  boole-set,\n----------------------------------------------------------\n\nboole-xor\n---------\n\n                                                       [Constant Variable]\n\nConstant Value::\n................\n\nThe identity and nature of the values of each of these variables is\nimplementation-dependent, except that it must be distinct from each of the\nvalues of the others, and it must be a valid first argument to the\nfunction boole.\n\nDescription::\n.............\n\nEach of these constants has a value which is one of the sixteen possible\nbit-wise logical operation specifiers.\n\nExamples::\n..........\n\n      (boole boole-ior 1 16) =>  17\n      (boole boole-and -2 5) =>  4\n      (boole boole-eqv 17 15) =>  -31\n\nSee Also::\n..........\n\n*Note boole::\n\n"
}