{
    "name": "array-dimensions",
    "prev": "array-dimension",
    "next": "array-element-type",
    "up": "Arrays Dictionary",
    "header": {
        "type": "Function",
        "text": "array-dimensions"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "array-dimensions",
                    "text": " array =>  dimensions\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "array",
                    "desc": "an array."
                },
                {
                    "name": "dimensions",
                    "desc": "a list of integers."
                }
            ]
        },
        {
            "type": "Description",
            "text": "Returns a list of the dimensions of array.  (If array is a vector with a\nfill pointer, that fill pointer is ignored.)\n"
        },
        {
            "type": "Examples",
            "text": "      (array-dimensions (make-array 4)) =>  (4)\n      (array-dimensions (make-array '(2 3))) =>  (2 3)\n      (array-dimensions (make-array 4 :fill-pointer 2)) =>  (4)\n"
        },
        {
            "type": "Exceptional Situations",
            "text": "Should signal an error of type type-error if its argument is not an array.\n"
        },
        {
            "type": "See Also",
            "text": "*Note array-dimension::\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: array-dimensions,  Next: array-element-type,  Prev: array-dimension,  Up: Arrays Dictionary\n\narray-dimensions                                                 [Function]\n---------------------------------------------------------------------------\n\n`array-dimensions'  array =>  dimensions\n\nArguments and Values::\n......................\n\narray--an array.\n\ndimensions--a list of integers.\n\nDescription::\n.............\n\nReturns a list of the dimensions of array.  (If array is a vector with a\nfill pointer, that fill pointer is ignored.)\n\nExamples::\n..........\n\n      (array-dimensions (make-array 4)) =>  (4)\n      (array-dimensions (make-array '(2 3))) =>  (2 3)\n      (array-dimensions (make-array 4 :fill-pointer 2)) =>  (4)\n\nExceptional Situations::\n........................\n\nShould signal an error of type type-error if its argument is not an array.\n\nSee Also::\n..........\n\n*Note array-dimension::\n\n"
}