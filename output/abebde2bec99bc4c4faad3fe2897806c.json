{
    "name": "*read-base*",
    "prev": "with-standard-io-syntax",
    "next": "*read-default-float-format*",
    "up": "Reader Dictionary",
    "header": {
        "type": "Variable",
        "text": "*read-base*"
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Value Type",
            "text": "a radix.\n"
        },
        {
            "type": "Initial Value",
            "text": "10.\n"
        },
        {
            "type": "Description",
            "text": "Controls the interpretation of tokens by read as being integers or ratios.\nThe value of *read-base*, called the current input base , is the radix in\nwhich integers and ratios are to be read by the Lisp reader.  The parsing\nof other numeric types (e.g., floats) is not affected by this option.\nThe effect of *read-base* on the reading of any particular rational number\ncan be locally overridden by explicit use of the #O, #X, #B, or #nR syntax\nor by a trailing decimal point.\n"
        },
        {
            "type": "Examples",
            "text": "      (dotimes (i 6)\n        (let ((*read-base* (+ 10. i)))\n          (let ((object (read-from-string \"(\\\\DAD DAD |BEE| BEE 123. 123)\")))\n            (print (list *read-base* object)))))\n      |>  (10 (DAD DAD BEE BEE 123 123))\n      |>  (11 (DAD DAD BEE BEE 123 146))\n      |>  (12 (DAD DAD BEE BEE 123 171))\n      |>  (13 (DAD DAD BEE BEE 123 198))\n      |>  (14 (DAD 2701 BEE BEE 123 227))\n      |>  (15 (DAD 3088 BEE 2699 123 258))\n     =>  NIL\n"
        },
        {
            "type": "Notes",
            "text": "Altering the input radix can be useful when reading data files in special\nformats.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: *read-base*,  Next: *read-default-float-format*,  Prev: with-standard-io-syntax,  Up: Reader Dictionary\n\n*read-base*                                                      [Variable]\n---------------------------------------------------------------------------\n\nValue Type::\n............\n\na radix.\n\nInitial Value::\n...............\n\n10.\n\nDescription::\n.............\n\nControls the interpretation of tokens by read as being integers or ratios.\n\nThe value of *read-base*, called the current input base , is the radix in\nwhich integers and ratios are to be read by the Lisp reader.  The parsing\nof other numeric types (e.g., floats) is not affected by this option.\n\nThe effect of *read-base* on the reading of any particular rational number\ncan be locally overridden by explicit use of the #O, #X, #B, or #nR syntax\nor by a trailing decimal point.\n\nExamples::\n..........\n\n      (dotimes (i 6)\n        (let ((*read-base* (+ 10. i)))\n          (let ((object (read-from-string \"(\\\\DAD DAD |BEE| BEE 123. 123)\")))\n            (print (list *read-base* object)))))\n      |>  (10 (DAD DAD BEE BEE 123 123))\n      |>  (11 (DAD DAD BEE BEE 123 146))\n      |>  (12 (DAD DAD BEE BEE 123 171))\n      |>  (13 (DAD DAD BEE BEE 123 198))\n      |>  (14 (DAD 2701 BEE BEE 123 227))\n      |>  (15 (DAD 3088 BEE 2699 123 258))\n     =>  NIL\n\nNotes::\n.......\n\nAltering the input radix can be useful when reading data files in special\nformats.\n\n"
}