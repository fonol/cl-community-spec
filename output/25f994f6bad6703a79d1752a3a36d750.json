{
    "name": "Extensions to Similarity Rules",
    "prev": "Definition of Similarity",
    "next": "Additional Constraints on Externalizable Objects",
    "up": "Literal Objects in Compiled Files",
    "header": {
        "type": null,
        "text": null
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Extensions to Similarity Rules",
            "text": "Some objects, such as streams, readtables, and methods are not\nexternalizable objects under the definition of similarity given above.\nThat is, such objects may not portably appear as literal objects in code\nto be processed by the file compiler.\nAn implementation is permitted to extend the rules of similarity, so that\nother kinds of objects are externalizable objects for that implementation.\nIf for some kind of object, similarity is neither defined by this\nspecification nor by the implementation, then the file compiler must\nsignal an error upon encountering such an object as a literal constant.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: Extensions to Similarity Rules,  Next: Additional Constraints on Externalizable Objects,  Prev: Definition of Similarity,  Up: Literal Objects in Compiled Files\n\nExtensions to Similarity Rules\n..............................\n\nSome objects, such as streams, readtables, and methods are not\nexternalizable objects under the definition of similarity given above.\nThat is, such objects may not portably appear as literal objects in code\nto be processed by the file compiler.\n\nAn implementation is permitted to extend the rules of similarity, so that\nother kinds of objects are externalizable objects for that implementation.\n\nIf for some kind of object, similarity is neither defined by this\nspecification nor by the implementation, then the file compiler must\nsignal an error upon encountering such an object as a literal constant.\n\n"
}