{
    "name": "multiple-value-list",
    "prev": "multiple-value-call",
    "next": "multiple-value-prog1",
    "up": "Data and Control Flow Dictionary",
    "header": {
        "type": "Macro",
        "text": "multiple-value-list"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "multiple-value-list",
                    "text": " form =>  list\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "form",
                    "desc": "a form; evaluated as described below."
                },
                {
                    "name": "list",
                    "desc": "a list of the values returned by form."
                }
            ]
        },
        {
            "type": "Description",
            "text": "multiple-value-list evaluates form and creates a list of the multiple\nvalues_2 it returns.\n"
        },
        {
            "type": "Examples",
            "text": "      (multiple-value-list (floor -3 4)) =>  (-1 1)\n"
        },
        {
            "type": "See Also",
            "text": "*Note values-list:: , *Note multiple-value-call::\n"
        },
        {
            "type": "Notes",
            "text": "multiple-value-list and values-list are inverses of each other.\n      (multiple-value-list form) == (multiple-value-call #'list form)\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: multiple-value-list,  Next: multiple-value-prog1,  Prev: multiple-value-call,  Up: Data and Control Flow Dictionary\n\nmultiple-value-list                                                 [Macro]\n---------------------------------------------------------------------------\n\n`multiple-value-list'  form =>  list\n\nArguments and Values::\n......................\n\nform--a form; evaluated as described below.\n\nlist--a list of the values returned by form.\n\nDescription::\n.............\n\nmultiple-value-list evaluates form and creates a list of the multiple\nvalues_2 it returns.\n\nExamples::\n..........\n\n      (multiple-value-list (floor -3 4)) =>  (-1 1)\n\nSee Also::\n..........\n\n*Note values-list:: , *Note multiple-value-call::\n\nNotes::\n.......\n\nmultiple-value-list and values-list are inverses of each other.\n\n      (multiple-value-list form) == (multiple-value-call #'list form)\n\n"
}