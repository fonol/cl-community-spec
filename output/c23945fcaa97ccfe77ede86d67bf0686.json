{
    "name": "translate-logical-pathname",
    "prev": "pathname-match-p",
    "next": "translate-pathname",
    "up": "Filenames Dictionary",
    "header": {
        "type": "Function",
        "text": "translate-logical-pathname"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "translate-logical-pathname",
                    "text": " pathname &key =>  physical-pathname\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "pathname",
                    "desc": "a pathname designator, or a logical pathname namestring."
                },
                {
                    "name": "physical-pathname",
                    "desc": "a physical pathname."
                }
            ]
        },
        {
            "type": "Description",
            "text": "Translates pathname to a physical pathname, which it returns.\nIf pathname is a stream, the stream can be either open or closed.\ntranslate-logical-pathname returns the same physical pathname after a file\nis closed as it did when the file was open.\nIt is an error if pathname is a stream that is created with\nmake-two-way-stream, make-echo-stream, make-broadcast-stream,\nmake-concatenated-stream, make-string-input-stream,\nmake-string-output-stream.\nIf pathname is a logical pathname namestring, the host portion of the\nlogical pathname namestring and its following colon are required.\nPathname is first coerced to a pathname.  If the coerced pathname is a\nphysical pathname, it is returned.  If the coerced pathname is a logical\npathname, the first matching translation (according to pathname-match-p)\nof the logical pathname host is applied, as if by calling\ntranslate-pathname.  If the result is a logical pathname, this process is\nrepeated.  When the result is finally a physical pathname, it is returned.\nIf no translation matches, an error is signaled.\ntranslate-logical-pathname might perform additional translations,\ntypically to provide translation of file types to local naming\nconventions, to accomodate physical file systems with limited length\nnames, or to deal with special character requirements such as translating\nhyphens to underscores or uppercase letters to lowercase.  Any such\nadditional translations are implementation-defined.  Some implementations\ndo no additional translations.\nThere are no specified keyword arguments for translate-logical-pathname,\nbut implementations are permitted to extend it by adding keyword arguments.\n"
        },
        {
            "type": "Examples",
            "text": "See logical-pathname-translations.\n"
        },
        {
            "type": "Exceptional Situations",
            "text": "If pathname is incorrectly supplied, an error of type type-error is\nsignaled.\nIf no translation matches, an error of type file-error is signaled.\n[Editorial Note by KMP: Is file-error really right, or should it be\npathname-error?]\n"
        },
        {
            "type": "See Also",
            "text": "*Note logical-pathname:: , *Note logical-pathname-translations:: ,\nlogical-pathname, *Note File System Concepts::,\n*Note Pathnames as Filenames::\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: translate-logical-pathname,  Next: translate-pathname,  Prev: pathname-match-p,  Up: Filenames Dictionary\n\ntranslate-logical-pathname                                       [Function]\n---------------------------------------------------------------------------\n\n`translate-logical-pathname'  pathname &key =>  physical-pathname\n\nArguments and Values::\n......................\n\npathname--a pathname designator, or a logical pathname namestring.\n\nphysical-pathname--a physical pathname.\n\nDescription::\n.............\n\nTranslates pathname to a physical pathname, which it returns.\n\nIf pathname is a stream, the stream can be either open or closed.\ntranslate-logical-pathname returns the same physical pathname after a file\nis closed as it did when the file was open.\n\nIt is an error if pathname is a stream that is created with\nmake-two-way-stream, make-echo-stream, make-broadcast-stream,\nmake-concatenated-stream, make-string-input-stream,\nmake-string-output-stream.\n\nIf pathname is a logical pathname namestring, the host portion of the\nlogical pathname namestring and its following colon are required.\n\nPathname is first coerced to a pathname.  If the coerced pathname is a\nphysical pathname, it is returned.  If the coerced pathname is a logical\npathname, the first matching translation (according to pathname-match-p)\nof the logical pathname host is applied, as if by calling\ntranslate-pathname.  If the result is a logical pathname, this process is\nrepeated.  When the result is finally a physical pathname, it is returned.\nIf no translation matches, an error is signaled.\n\ntranslate-logical-pathname might perform additional translations,\ntypically to provide translation of file types to local naming\nconventions, to accomodate physical file systems with limited length\nnames, or to deal with special character requirements such as translating\nhyphens to underscores or uppercase letters to lowercase.  Any such\nadditional translations are implementation-defined.  Some implementations\ndo no additional translations.\n\nThere are no specified keyword arguments for translate-logical-pathname,\nbut implementations are permitted to extend it by adding keyword arguments.\n\nExamples::\n..........\n\nSee logical-pathname-translations.\n\nExceptional Situations::\n........................\n\nIf pathname is incorrectly supplied, an error of type type-error is\nsignaled.\n\nIf no translation matches, an error of type file-error is signaled.\n\n[Editorial Note by KMP: Is file-error really right, or should it be\npathname-error?]\n\nSee Also::\n..........\n\n*Note logical-pathname:: , *Note logical-pathname-translations:: ,\nlogical-pathname, *Note File System Concepts::,\n\n*Note Pathnames as Filenames::\n\n"
}