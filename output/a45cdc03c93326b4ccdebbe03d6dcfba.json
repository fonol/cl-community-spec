{
    "name": "make-string",
    "prev": "stringp",
    "next": null,
    "up": "Strings Dictionary",
    "header": {
        "type": "Function",
        "text": "make-string"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "make-string",
                    "text": " size &key initial-element element-type =>  string\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "size",
                    "desc": "a valid array dimension."
                },
                {
                    "name": "initial-element",
                    "desc": "a character.The default is implementation-dependent.\n"
                },
                {
                    "name": "element-type",
                    "desc": "a type specifier.  The default is character."
                },
                {
                    "name": "string",
                    "desc": "a simple string."
                }
            ]
        },
        {
            "type": "Description",
            "text": "make-string returns a simple string of length size whose elements have\nbeen initialized to initial-element.\nThe element-type names the type of the elements of the string; a string is\nconstructed of the most specialized type that can accommodate elements of\nthe given type.\n"
        },
        {
            "type": "Examples",
            "text": "      (make-string 10 :initial-element #\\5) =>  \"5555555555\"\n      (length (make-string 10)) =>  10\n"
        },
        {
            "type": "Affected By",
            "text": "The implementation.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: make-string,  Prev: stringp,  Up: Strings Dictionary\n\nmake-string                                                      [Function]\n---------------------------------------------------------------------------\n\n`make-string'  size &key initial-element element-type =>  string\n\nArguments and Values::\n......................\n\nsize--a valid array dimension.\n\ninitial-element--a character.\n\nThe default is implementation-dependent.\n\nelement-type--a type specifier.  The default is character.\n\nstring--a simple string.\n\nDescription::\n.............\n\nmake-string returns a simple string of length size whose elements have\nbeen initialized to initial-element.\n\nThe element-type names the type of the elements of the string; a string is\nconstructed of the most specialized type that can accommodate elements of\nthe given type.\n\nExamples::\n..........\n\n      (make-string 10 :initial-element #\\5) =>  \"5555555555\"\n      (length (make-string 10)) =>  10\n\nAffected By::\n.............\n\nThe implementation.\n\n"
}