{
    "name": "clrhash",
    "prev": "with-hash-table-iterator",
    "next": "sxhash",
    "up": "Hash Tables Dictionary",
    "header": {
        "type": "Function",
        "text": "clrhash"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "clrhash",
                    "text": " hash-table =>  hash-table\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "hash-table",
                    "desc": "a hash table."
                }
            ]
        },
        {
            "type": "Description",
            "text": "Removes all entries from hash-table, and then returns that empty hash\ntable.\n"
        },
        {
            "type": "Examples",
            "text": "      (setq table (make-hash-table)) =>  #<HASH-TABLE EQL 0/120 32004073>\n      (dotimes (i 100) (setf (gethash i table) (format nil \"~R\" i))) =>  NIL\n      (hash-table-count table) =>  100\n      (gethash 57 table) =>  \"fifty-seven\", true\n      (clrhash table) =>  #<HASH-TABLE EQL 0/120 32004073>\n      (hash-table-count table) =>  0\n      (gethash 57 table) =>  NIL, false\n"
        },
        {
            "type": "Side Effects",
            "text": "The hash-table is modified.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: clrhash,  Next: sxhash,  Prev: with-hash-table-iterator,  Up: Hash Tables Dictionary\n\nclrhash                                                          [Function]\n---------------------------------------------------------------------------\n\n`clrhash'  hash-table =>  hash-table\n\nArguments and Values::\n......................\n\nhash-table--a hash table.\n\nDescription::\n.............\n\nRemoves all entries from hash-table, and then returns that empty hash\ntable.\n\nExamples::\n..........\n\n      (setq table (make-hash-table)) =>  #<HASH-TABLE EQL 0/120 32004073>\n      (dotimes (i 100) (setf (gethash i table) (format nil \"~R\" i))) =>  NIL\n      (hash-table-count table) =>  100\n      (gethash 57 table) =>  \"fifty-seven\", true\n      (clrhash table) =>  #<HASH-TABLE EQL 0/120 32004073>\n      (hash-table-count table) =>  0\n      (gethash 57 table) =>  NIL, false\n\nSide Effects::\n..............\n\nThe hash-table is modified.\n\n"
}