{
    "name": "apropos",
    "prev": "sleep",
    "next": "describe",
    "up": "Environment Dictionary",
    "header": {
        "type": "Function",
        "text": "apropos, apropos-list"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "apropos",
                    "text": " string &optional package =>  <no values>\n"
                },
                {
                    "name": "apropos-list",
                    "text": " string &optional package =>  symbols\n\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "string",
                    "desc": "a string designator."
                },
                {
                    "name": "package",
                    "desc": "a package designator or nil.  The default is nil."
                },
                {
                    "name": "symbols",
                    "desc": "a list of symbols."
                }
            ]
        },
        {
            "type": "Description",
            "text": "These functions search for interned symbols whose names contain the\nsubstring string.\nFor apropos, as each such symbol is found, its name is printed on standard\noutput.  In addition, if such a symbol is defined as a function or dynamic\nvariable, information about those definitions might also be printed.\nFor apropos-list, no output occurs as the search proceeds; instead a list\nof the matching symbols is returned when the search is complete.\nIf package is non-nil, only the symbols accessible in that package are\nsearched; otherwise all symbols accessible in any package are searched.\nBecause a symbol might be available by way of more than one inheritance\npath, apropos might print information about the same symbol more than once,\nor apropos-list might return a list containing duplicate symbols.\nWhether or not the search is case-sensitive is implementation-defined.\n"
        },
        {
            "type": "Affected By",
            "text": "The set of symbols which are currently interned in any packages being\nsearched.\napropos is also affected by *standard-output*.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: apropos,  Next: describe,  Prev: sleep,  Up: Environment Dictionary\n\napropos, apropos-list                                            [Function]\n---------------------------------------------------------------------------\n\n`apropos'  string &optional package =>  <no values>\n\n`apropos-list'  string &optional package =>  symbols\n\nArguments and Values::\n......................\n\nstring--a string designator.\n\npackage--a package designator or nil.  The default is nil.\n\nsymbols--a list of symbols.\n\nDescription::\n.............\n\nThese functions search for interned symbols whose names contain the\nsubstring string.\n\nFor apropos, as each such symbol is found, its name is printed on standard\noutput.  In addition, if such a symbol is defined as a function or dynamic\nvariable, information about those definitions might also be printed.\n\nFor apropos-list, no output occurs as the search proceeds; instead a list\nof the matching symbols is returned when the search is complete.\n\nIf package is non-nil, only the symbols accessible in that package are\nsearched; otherwise all symbols accessible in any package are searched.\n\nBecause a symbol might be available by way of more than one inheritance\npath, apropos might print information about the same symbol more than once,\nor apropos-list might return a list containing duplicate symbols.\n\nWhether or not the search is case-sensitive is implementation-defined.\n\nAffected By::\n.............\n\nThe set of symbols which are currently interned in any packages being\nsearched.\n\napropos is also affected by *standard-output*.\n\n"
}