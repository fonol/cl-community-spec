{
    "name": "Namestrings as Filenames",
    "prev": "Overview of Filenames",
    "next": "Pathnames as Filenames",
    "up": "Overview of Filenames",
    "header": {
        "type": null,
        "text": "Namestrings as Filenames"
    },
    "sections": [
        {
            "type": "",
            "text": "A namestring is a string that represents a filename.\nIn general, the syntax of namestrings involves the use of\nimplementation-defined conventions, usually those customary for the file\nsystem in which the named file resides.  The only exception is the syntax\nof a logical pathname namestring, which is defined in this specification;\nsee *Note Syntax of Logical Pathname Namestrings::.\nA conforming program must never unconditionally use a literal namestring\nother than a logical pathname namestring because Common Lisp does not\ndefine any namestring syntax other than that for logical pathnames that\nwould be guaranteed to be portable.  However, a conforming program can, if\nit is careful, successfully manipulate user-supplied data which contains\nor refers to non-portable namestrings.\nA namestring can be coerced to a pathname by the functions pathname or\nparse-namestring.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: Namestrings as Filenames,  Next: Pathnames as Filenames,  Prev: Overview of Filenames,  Up: Overview of Filenames\n\nNamestrings as Filenames\n------------------------\n\nA namestring is a string that represents a filename.\n\nIn general, the syntax of namestrings involves the use of\nimplementation-defined conventions, usually those customary for the file\nsystem in which the named file resides.  The only exception is the syntax\nof a logical pathname namestring, which is defined in this specification;\nsee *Note Syntax of Logical Pathname Namestrings::.\n\nA conforming program must never unconditionally use a literal namestring\nother than a logical pathname namestring because Common Lisp does not\ndefine any namestring syntax other than that for logical pathnames that\nwould be guaranteed to be portable.  However, a conforming program can, if\nit is careful, successfully manipulate user-supplied data which contains\nor refers to non-portable namestrings.\n\nA namestring can be coerced to a pathname by the functions pathname or\nparse-namestring.\n\n"
}