{
    "name": "Modifying Hash Table Keys",
    "prev": "Hash-Table Operations",
    "next": null,
    "up": "Hash Table Concepts",
    "header": {
        "type": null,
        "text": "Modifying Hash Table Keys"
    },
    "sections": [
        {
            "type": "",
            "text": "The function supplied as the :test argument to make-hash-table specifies\nthe `equivalence test' for the hash table it creates.\nAn object is `visibly modified' with regard to an equivalence test if\nthere exists some set of objects (or potential objects) which are\nequivalent to the object before the modification but are no longer\nequivalent afterwards.\nIf an object O_1 is used as a key in a hash table H and is then visibly\nmodified with regard to the equivalence test of H, then the consequences\nare unspecified if O_1, or any object O_2 equivalent to O_1 under the\nequivalence test (either before or after the modification), is used as a\nkey in further operations on H.  The consequences of using O_1 as a key\nare unspecified even if O_1 is visibly modified and then later modified\nagain in such a way as to undo the visible modification.\nFollowing are specifications of the modifications which are visible to the\nequivalence tests which must be supported by hash tables.  The\nmodifications are described in terms of modification of components, and\nare defined recursively.  Visible modifications of components of the\nobject are visible modifications of the object.\n* Menu:\n* Visible Modification of Objects with respect to EQ and EQL::\n* Visible Modification of Objects with respect to EQUAL::\n* Visible Modification of Conses with respect to EQUAL::\n* Visible Modification of Bit Vectors and Strings with respect to EQUAL::\n* Visible Modification of Objects with respect to EQUALP::\n* Visible Modification of Structures with respect to EQUALP::\n* Visible Modification of Arrays with respect to EQUALP::\n* Visible Modification of Hash Tables with respect to EQUALP::\n* Visible Modifications by Language Extensions::\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: Modifying Hash Table Keys,  Prev: Hash-Table Operations,  Up: Hash Table Concepts\n\nModifying Hash Table Keys\n-------------------------\n\nThe function supplied as the :test argument to make-hash-table specifies\nthe `equivalence test' for the hash table it creates.\n\nAn object is `visibly modified' with regard to an equivalence test if\nthere exists some set of objects (or potential objects) which are\nequivalent to the object before the modification but are no longer\nequivalent afterwards.\n\nIf an object O_1 is used as a key in a hash table H and is then visibly\nmodified with regard to the equivalence test of H, then the consequences\nare unspecified if O_1, or any object O_2 equivalent to O_1 under the\nequivalence test (either before or after the modification), is used as a\nkey in further operations on H.  The consequences of using O_1 as a key\nare unspecified even if O_1 is visibly modified and then later modified\nagain in such a way as to undo the visible modification.\n\nFollowing are specifications of the modifications which are visible to the\nequivalence tests which must be supported by hash tables.  The\nmodifications are described in terms of modification of components, and\nare defined recursively.  Visible modifications of components of the\nobject are visible modifications of the object.\n\n* Menu:\n\n* Visible Modification of Objects with respect to EQ and EQL::\n* Visible Modification of Objects with respect to EQUAL::\n* Visible Modification of Conses with respect to EQUAL::\n* Visible Modification of Bit Vectors and Strings with respect to EQUAL::\n* Visible Modification of Objects with respect to EQUALP::\n* Visible Modification of Structures with respect to EQUALP::\n* Visible Modification of Arrays with respect to EQUALP::\n* Visible Modification of Hash Tables with respect to EQUALP::\n* Visible Modifications by Language Extensions::\n\n"
}