{
    "name": "Tilde A-> Aesthetic",
    "prev": "FORMAT Printer Operations",
    "next": "Tilde S-> Standard",
    "up": "FORMAT Printer Operations",
    "header": {
        "type": null,
        "text": null
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Tilde A: Aesthetic",
            "text": "An arg, any object, is printed without escape characters (as by princ).\nIf arg is a string, its characters will be output verbatim.  If arg is nil\nit will be printed as nil; the colon modifier (~:A) will cause an arg of\nnil to be printed as (), but if arg is a composite structure, such as a\nlist or vector, any contained occurrences of nil will still be printed as\nnil.\n~mincolA inserts spaces on the right, if necessary, to make the width at\nleast mincol columns.  The @ modifier causes the spaces to be inserted on\nthe left rather than the right.\n~mincol,colinc,minpad,padcharA is the full form of ~A, which allows\ncontrol of the padding.  The string is padded on the right (or on the left\nif the @ modifier is used) with at least minpad copies of padchar; padding\ncharacters are then inserted colinc characters at a time until the total\nwidth is at least mincol.  The defaults are 0 for mincol and minpad, 1 for\ncolinc, and the space character for padchar.\n~A binds *print-escape* to false,\nand *print-readably* to false.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: Tilde A-> Aesthetic,  Next: Tilde S-> Standard,  Prev: FORMAT Printer Operations,  Up: FORMAT Printer Operations\n\nTilde A: Aesthetic\n..................\n\nAn arg, any object, is printed without escape characters (as by princ).\nIf arg is a string, its characters will be output verbatim.  If arg is nil\nit will be printed as nil; the colon modifier (~:A) will cause an arg of\nnil to be printed as (), but if arg is a composite structure, such as a\nlist or vector, any contained occurrences of nil will still be printed as\nnil.\n\n~mincolA inserts spaces on the right, if necessary, to make the width at\nleast mincol columns.  The @ modifier causes the spaces to be inserted on\nthe left rather than the right.\n\n~mincol,colinc,minpad,padcharA is the full form of ~A, which allows\ncontrol of the padding.  The string is padded on the right (or on the left\nif the @ modifier is used) with at least minpad copies of padchar; padding\ncharacters are then inserted colinc characters at a time until the total\nwidth is at least mincol.  The defaults are 0 for mincol and minpad, 1 for\ncolinc, and the space character for padchar.\n\n~A binds *print-escape* to false,\n\nand *print-readably* to false.\n\n"
}