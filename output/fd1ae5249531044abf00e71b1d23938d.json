{
    "name": "Sharpsign Left-Parenthesis",
    "prev": "Sharpsign Single-Quote",
    "next": "Sharpsign Asterisk",
    "up": "Sharpsign",
    "header": {
        "type": null,
        "text": null
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Sharpsign Left-Parenthesis",
            "text": "#( and ) are used to notate a simple vector.\nIf an unsigned decimal integer appears between the # and (, it specifies\nexplicitly the length of the vector.  The consequences are undefined if\nthe number of objects specified before the closing ) exceeds the unsigned\ndecimal integer.  If the number of objects supplied before the closing )\nis less than the unsigned decimal integer but greater than zero, the last\nobject is used to fill all remaining elements of the vector.\n[Editorial Note by Barmar: This should say \"signals...\".] The consequences\nare undefined if the unsigned decimal integer is non-zero and number of\nobjects supplied before the closing ) is zero.  For example,\n      #(a b c c c c)\n      #6(a b c c c c)\n      #6(a b c)\n      #6(a b c c)\nall mean the same thing: a vector of length 6 with elements a, b, and four\noccurrences of c.  Other examples follow:\n      #(a b c)               ;A vector of length 3\n      #(2 3 5 7 11 13 17 19 23 29 31 37 41 43 47)\n                             ;A vector containing the primes below 50\n      #()                    ;An empty vector\nThe notation #() denotes an empty vector, as does #0().\nFor information on how the Lisp printer prints vectors, see *Note Printing\nStrings::, *Note Printing Bit Vectors::, or *Note Printing Other Vectors::.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: Sharpsign Left-Parenthesis,  Next: Sharpsign Asterisk,  Prev: Sharpsign Single-Quote,  Up: Sharpsign\n\nSharpsign Left-Parenthesis\n..........................\n\n#( and ) are used to notate a simple vector.\n\nIf an unsigned decimal integer appears between the # and (, it specifies\nexplicitly the length of the vector.  The consequences are undefined if\nthe number of objects specified before the closing ) exceeds the unsigned\ndecimal integer.  If the number of objects supplied before the closing )\nis less than the unsigned decimal integer but greater than zero, the last\nobject is used to fill all remaining elements of the vector.\n\n[Editorial Note by Barmar: This should say \"signals...\".] The consequences\nare undefined if the unsigned decimal integer is non-zero and number of\nobjects supplied before the closing ) is zero.  For example,\n\n      #(a b c c c c)\n      #6(a b c c c c)\n      #6(a b c)\n      #6(a b c c)\n\nall mean the same thing: a vector of length 6 with elements a, b, and four\noccurrences of c.  Other examples follow:\n\n      #(a b c)               ;A vector of length 3\n      #(2 3 5 7 11 13 17 19 23 29 31 37 41 43 47)\n                             ;A vector containing the primes below 50\n      #()                    ;An empty vector\n\nThe notation #() denotes an empty vector, as does #0().\n\nFor information on how the Lisp printer prints vectors, see *Note Printing\nStrings::, *Note Printing Bit Vectors::, or *Note Printing Other Vectors::.\n\n"
}