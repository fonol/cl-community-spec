{
    "name": "simple-condition",
    "prev": "signal",
    "next": "simple-condition-format-control",
    "up": "Conditions Dictionary",
    "header": {
        "type": "Condition Type",
        "text": "simple-condition"
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Class Precedence List",
            "text": "",
            "items": [
                {
                    "name": "simple-condition",
                    "link": "e4e3c217d322538698c3ac5ffcebd538"
                },
                {
                    "name": " condition",
                    "link": null
                },
                {
                    "name": " t",
                    "link": null
                }
            ]
        },
        {
            "type": "Description",
            "text": "The type simple-condition represents conditions that are signaled by\nsignal whenever a format-control is supplied as the function's first\nargument.\nThe format control and format arguments are initialized with the\ninitialization arguments named :format-control\nand :format-arguments to make-condition, and are accessed by the functions\nsimple-condition-format-control\nand simple-condition-format-arguments.  If format arguments are not\nsupplied to make-condition, nil is used as a default.\n"
        },
        {
            "type": "See Also",
            "text": "*Note simple-condition-format-control; simple-condition-format-arguments::\n,\nsimple-condition-format-arguments\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: simple-condition,  Next: simple-condition-format-control,  Prev: signal,  Up: Conditions Dictionary\n\nsimple-condition                                           [Condition Type]\n---------------------------------------------------------------------------\n\nClass Precedence List::\n.......................\n\nsimple-condition, condition, t\n\nDescription::\n.............\n\nThe type simple-condition represents conditions that are signaled by\nsignal whenever a format-control is supplied as the function's first\nargument.\n\nThe format control and format arguments are initialized with the\ninitialization arguments named :format-control\n\nand :format-arguments to make-condition, and are accessed by the functions\n\nsimple-condition-format-control\n\nand simple-condition-format-arguments.  If format arguments are not\nsupplied to make-condition, nil is used as a default.\n\nSee Also::\n..........\n\n*Note simple-condition-format-control; simple-condition-format-arguments::\n,\n\nsimple-condition-format-arguments\n\n"
}