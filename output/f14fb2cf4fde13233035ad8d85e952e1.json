{
    "name": "Summary of Variable Initialization and Stepping Clauses",
    "prev": "Summary of Loop Clauses",
    "next": "Summary of Value Accumulation Clauses",
    "up": "Overview of the Loop Facility",
    "header": {
        "type": null,
        "text": null
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Summary of Variable Initialization and Stepping Clauses",
            "text": "The for and as constructs provide iteration control clauses that establish\na variable to be initialized.  for and as clauses can be combined with the\nloop keyword and to get parallel initialization and stepping_1.\nOtherwise, the initialization and stepping_1 are sequential.\nThe with construct is similar to a single let clause.  with clauses can be\ncombined using the loop keyword and to get parallel initialization.\nFor more information, see *Note Variable Initialization and Stepping\nClauses::.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: Summary of Variable Initialization and Stepping Clauses,  Next: Summary of Value Accumulation Clauses,  Prev: Summary of Loop Clauses,  Up: Overview of the Loop Facility\n\nSummary of Variable Initialization and Stepping Clauses\n.......................................................\n\nThe for and as constructs provide iteration control clauses that establish\na variable to be initialized.  for and as clauses can be combined with the\nloop keyword and to get parallel initialization and stepping_1.\nOtherwise, the initialization and stepping_1 are sequential.\n\nThe with construct is similar to a single let clause.  with clauses can be\ncombined using the loop keyword and to get parallel initialization.\n\nFor more information, see *Note Variable Initialization and Stepping\nClauses::.\n\n"
}