{
    "name": "Examples of Sharpsign Vertical-Bar",
    "prev": "Sharpsign Vertical-Bar",
    "next": "Notes about Style for Sharpsign Vertical-Bar",
    "up": "Sharpsign",
    "header": {
        "type": null,
        "text": null
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Examples of Sharpsign Vertical-Bar",
            "text": "The following are some examples that exploit the #|...|# notation:\n     ;;; In this example, some debugging code is commented out with #|...|#\n     ;;; Note that this kind of comment can occur in the middle of a line\n     ;;; (because a delimiter marks where the end of the comment occurs)\n     ;;; where a semicolon comment can only occur at the end of a line\n     ;;; (because it comments out the rest of the line).\n      (defun add3 (n) #|(format t \"~&Adding 3 to ~D.\" n)|# (+ n 3))\n     ;;; The examples that follow show issues related to #| ... |# nesting.\n     ;;; In this first example, #| and |# always occur properly paired,\n     ;;; so nesting works naturally.\n      (defun mention-fun-fact-1a ()\n        (format t \"CL uses ; and #|...|# in comments.\"))\n     =>  MENTION-FUN-FACT-1A\n      (mention-fun-fact-1a)\n      |>  CL uses ; and #|...|# in comments.\n     =>  NIL\n      #| (defun mention-fun-fact-1b ()\n           (format t \"CL uses ; and #|...|# in comments.\")) |#\n      (fboundp 'mention-fun-fact-1b) =>  NIL\n     ;;; In this example, vertical-bar followed by sharpsign needed to appear\n     ;;; in a string without any matching sharpsign followed by vertical-bar\n     ;;; having preceded this.  To compensate, the programmer has included a\n     ;;; slash separating the two characters.  In case 2a, the slash is\n     ;;; unnecessary but harmless, but in case 2b, the slash is critical to\n     ;;; allowing the outer #| ... |# pair match.  If the slash were not present,\n     ;;; the outer comment would terminate prematurely.\n      (defun mention-fun-fact-2a ()\n        (format t \"Don't use |\\# unmatched or you'll get in trouble!\"))\n     =>  MENTION-FUN-FACT-2A\n      (mention-fun-fact-2a)\n      |>  Don't use |# unmatched or you'll get in trouble!\n     =>  NIL\n      #| (defun mention-fun-fact-2b ()\n           (format t \"Don't use |\\# unmatched or you'll get in trouble!\") |#\n      (fboundp 'mention-fun-fact-2b) =>  NIL\n     ;;; In this example, the programmer attacks the mismatch problem in a\n     ;;; different way.  The sharpsign vertical bar in the comment is not needed\n     ;;; for the correct parsing of the program normally (as in case 3a), but\n     ;;; becomes important to avoid premature termination of a comment when such\n     ;;; a program is commented out (as in case 3b).\n      (defun mention-fun-fact-3a () ; #|\n        (format t \"Don't use |# unmatched or you'll get in trouble!\"))\n     =>  MENTION-FUN-FACT-3A\n      (mention-fun-fact-3a)\n      |>  Don't use |# unmatched or you'll get in trouble!\n     =>  NIL\n      #|\n      (defun mention-fun-fact-3b () ; #|\n        (format t \"Don't use |# unmatched or you'll get in trouble!\"))\n      |#\n      (fboundp 'mention-fun-fact-3b) =>  NIL\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: Examples of Sharpsign Vertical-Bar,  Next: Notes about Style for Sharpsign Vertical-Bar,  Prev: Sharpsign Vertical-Bar,  Up: Sharpsign\n\nExamples of Sharpsign Vertical-Bar\n..................................\n\nThe following are some examples that exploit the #|...|# notation:\n\n     ;;; In this example, some debugging code is commented out with #|...|#\n     ;;; Note that this kind of comment can occur in the middle of a line\n     ;;; (because a delimiter marks where the end of the comment occurs)\n     ;;; where a semicolon comment can only occur at the end of a line\n     ;;; (because it comments out the rest of the line).\n      (defun add3 (n) #|(format t \"~&Adding 3 to ~D.\" n)|# (+ n 3))\n     \n     ;;; The examples that follow show issues related to #| ... |# nesting.\n     \n     ;;; In this first example, #| and |# always occur properly paired,\n     ;;; so nesting works naturally.\n      (defun mention-fun-fact-1a ()\n        (format t \"CL uses ; and #|...|# in comments.\"))\n     =>  MENTION-FUN-FACT-1A\n      (mention-fun-fact-1a)\n      |>  CL uses ; and #|...|# in comments.\n     =>  NIL\n      #| (defun mention-fun-fact-1b ()\n           (format t \"CL uses ; and #|...|# in comments.\")) |#\n      (fboundp 'mention-fun-fact-1b) =>  NIL\n     \n     ;;; In this example, vertical-bar followed by sharpsign needed to appear\n     ;;; in a string without any matching sharpsign followed by vertical-bar\n     ;;; having preceded this.  To compensate, the programmer has included a\n     ;;; slash separating the two characters.  In case 2a, the slash is\n     ;;; unnecessary but harmless, but in case 2b, the slash is critical to\n     ;;; allowing the outer #| ... |# pair match.  If the slash were not present,\n     ;;; the outer comment would terminate prematurely.\n      (defun mention-fun-fact-2a ()\n        (format t \"Don't use |\\# unmatched or you'll get in trouble!\"))\n     =>  MENTION-FUN-FACT-2A\n      (mention-fun-fact-2a)\n      |>  Don't use |# unmatched or you'll get in trouble!\n     =>  NIL\n      #| (defun mention-fun-fact-2b ()\n           (format t \"Don't use |\\# unmatched or you'll get in trouble!\") |#\n      (fboundp 'mention-fun-fact-2b) =>  NIL\n     \n     ;;; In this example, the programmer attacks the mismatch problem in a\n     ;;; different way.  The sharpsign vertical bar in the comment is not needed\n     ;;; for the correct parsing of the program normally (as in case 3a), but\n     ;;; becomes important to avoid premature termination of a comment when such\n     ;;; a program is commented out (as in case 3b).\n      (defun mention-fun-fact-3a () ; #|\n        (format t \"Don't use |# unmatched or you'll get in trouble!\"))\n     =>  MENTION-FUN-FACT-3A\n      (mention-fun-fact-3a)\n      |>  Don't use |# unmatched or you'll get in trouble!\n     =>  NIL\n      #|\n      (defun mention-fun-fact-3b () ; #|\n        (format t \"Don't use |# unmatched or you'll get in trouble!\"))\n      |#\n      (fboundp 'mention-fun-fact-3b) =>  NIL\n\n"
}