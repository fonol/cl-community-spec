{
    "name": "make-synonym-stream",
    "prev": "y-or-n-p",
    "next": "synonym-stream-symbol",
    "up": "Streams Dictionary",
    "header": {
        "type": "Function",
        "text": "make-synonym-stream"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "make-synonym-stream",
                    "text": " symbol =>  synonym-stream\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "symbol",
                    "desc": "a symbol that names a dynamic variable."
                },
                {
                    "name": "synonym-stream",
                    "desc": "a synonym stream."
                }
            ]
        },
        {
            "type": "Description",
            "text": "Returns a synonym stream whose synonym stream symbol is symbol.\n"
        },
        {
            "type": "Examples",
            "text": "      (setq a-stream (make-string-input-stream \"a-stream\")\n             b-stream (make-string-input-stream \"b-stream\"))\n     =>  #<String Input Stream>\n      (setq s-stream (make-synonym-stream 'c-stream))\n     =>  #<SYNONYM-STREAM for C-STREAM>\n      (setq c-stream a-stream)\n     =>  #<String Input Stream>\n      (read s-stream) =>  A-STREAM\n      (setq c-stream b-stream)\n     =>  #<String Input Stream>\n      (read s-stream) =>  B-STREAM\n"
        },
        {
            "type": "Exceptional Situations",
            "text": "Should signal type-error if its argument is not a symbol.\n"
        },
        {
            "type": "See Also",
            "text": "*Note Stream Concepts::\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: make-synonym-stream,  Next: synonym-stream-symbol,  Prev: y-or-n-p,  Up: Streams Dictionary\n\nmake-synonym-stream                                              [Function]\n---------------------------------------------------------------------------\n\n`make-synonym-stream'  symbol =>  synonym-stream\n\nArguments and Values::\n......................\n\nsymbol--a symbol that names a dynamic variable.\n\nsynonym-stream--a synonym stream.\n\nDescription::\n.............\n\nReturns a synonym stream whose synonym stream symbol is symbol.\n\nExamples::\n..........\n\n      (setq a-stream (make-string-input-stream \"a-stream\")\n             b-stream (make-string-input-stream \"b-stream\"))\n     =>  #<String Input Stream>\n      (setq s-stream (make-synonym-stream 'c-stream))\n     =>  #<SYNONYM-STREAM for C-STREAM>\n      (setq c-stream a-stream)\n     =>  #<String Input Stream>\n      (read s-stream) =>  A-STREAM\n      (setq c-stream b-stream)\n     =>  #<String Input Stream>\n      (read s-stream) =>  B-STREAM\n\nExceptional Situations::\n........................\n\nShould signal type-error if its argument is not a symbol.\n\nSee Also::\n..........\n\n*Note Stream Concepts::\n\n"
}