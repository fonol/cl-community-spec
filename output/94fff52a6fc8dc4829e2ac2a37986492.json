{
    "name": "Declarations",
    "prev": "Compilation",
    "next": "Lambda Lists",
    "up": "Evaluation and Compilation",
    "header": {
        "type": null,
        "text": "Declarations"
    },
    "sections": [
        {
            "type": "",
            "text": "Declarations provide a way of specifying information for use by program\nprocessors, such as the evaluator or the compiler.\nLocal declarations\ncan be embedded in executable code using declare.  Global declarations ,\nor proclamations , are established by proclaim or declaim.\nThe the special form provides a shorthand notation for making a local\ndeclaration about the type of the value of a given form.\nThe consequences are undefined if a program violates a declaration or a\nproclamation.\n* Menu:\n* Minimal Declaration Processing Requirements::\n* Declaration Specifiers::\n* Declaration Identifiers::\n* Declaration Scope::\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: Declarations,  Next: Lambda Lists,  Prev: Compilation,  Up: Evaluation and Compilation\n\nDeclarations\n============\n\nDeclarations provide a way of specifying information for use by program\nprocessors, such as the evaluator or the compiler.\n\nLocal declarations\n\ncan be embedded in executable code using declare.  Global declarations ,\nor proclamations , are established by proclaim or declaim.\n\nThe the special form provides a shorthand notation for making a local\ndeclaration about the type of the value of a given form.\n\nThe consequences are undefined if a program violates a declaration or a\nproclamation.\n\n* Menu:\n\n* Minimal Declaration Processing Requirements::\n* Declaration Specifiers::\n* Declaration Identifiers::\n* Declaration Scope::\n\n"
}