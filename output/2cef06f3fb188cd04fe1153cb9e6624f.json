{
    "name": "make-string-input-stream",
    "prev": "get-output-stream-string",
    "next": "make-string-output-stream",
    "up": "Streams Dictionary",
    "header": {
        "type": "Function",
        "text": "make-string-input-stream"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "make-string-input-stream",
                    "text": " string &optional start end =>  string-stream\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "string",
                    "desc": "a string."
                },
                {
                    "name": "start, end",
                    "desc": "bounding index designators of string.  The defaults for start"
                },
                {
                    "name": "start, end",
                    "desc": "bounding index designators of string.  The defaults for startand end are 0 and nil, respectively.\n"
                },
                {
                    "name": "string-stream",
                    "desc": "an input string stream."
                }
            ]
        },
        {
            "type": "Description",
            "text": "Returns an input string stream.  This stream will supply, in order, the\ncharacters in the substring of string bounded by start and end.  After the\nlast character has been supplied, the string stream will then be at end of\nfile.\n"
        },
        {
            "type": "Examples",
            "text": "      (let ((string-stream (make-string-input-stream \"1 one \")))\n        (list (read string-stream nil nil)\n              (read string-stream nil nil)\n              (read string-stream nil nil)))\n     =>  (1 ONE NIL)\n      (read (make-string-input-stream \"prefixtargetsuffix\" 6 12)) =>  TARGET\n"
        },
        {
            "type": "See Also",
            "text": "*Note with-input-from-string::\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: make-string-input-stream,  Next: make-string-output-stream,  Prev: get-output-stream-string,  Up: Streams Dictionary\n\nmake-string-input-stream                                         [Function]\n---------------------------------------------------------------------------\n\n`make-string-input-stream'  string &optional start end =>  string-stream\n\nArguments and Values::\n......................\n\nstring--a string.\n\nstart, end--bounding index designators of string.  The defaults for start\nand end are 0 and nil, respectively.\n\nstring-stream--an input string stream.\n\nDescription::\n.............\n\nReturns an input string stream.  This stream will supply, in order, the\ncharacters in the substring of string bounded by start and end.  After the\nlast character has been supplied, the string stream will then be at end of\nfile.\n\nExamples::\n..........\n\n      (let ((string-stream (make-string-input-stream \"1 one \")))\n        (list (read string-stream nil nil)\n              (read string-stream nil nil)\n              (read string-stream nil nil)))\n     =>  (1 ONE NIL)\n     \n      (read (make-string-input-stream \"prefixtargetsuffix\" 6 12)) =>  TARGET\n\nSee Also::\n..........\n\n*Note with-input-from-string::\n\n"
}