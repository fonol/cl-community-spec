{
    "name": "Determining the Class Precedence List",
    "prev": "Inheritance",
    "next": "Redefining Classes",
    "up": "Classes",
    "header": {
        "type": null,
        "text": "Determining the Class Precedence List"
    },
    "sections": [
        {
            "type": "",
            "text": "The defclass form for a class provides a total ordering on that class and\nits direct superclasses.  This ordering is called the local precedence\norder .  It is an ordered list of the class and its direct superclasses.\nThe class precedence list for a class C is a total ordering on C and its\nsuperclasses that is consistent with the local precedence orders for each\nof C and its superclasses.\nA class precedes its direct superclasses, and a direct superclass precedes\nall other direct superclasses specified to its right in the superclasses\nlist of the defclass form.  For every class C, define\n                R_C={(C,C_1),(C_1,C_2),...,(C_{n-1},C_n)}\nwhere C_1,...,C_n are the direct superclasses of C in the order in which\nthey are mentioned in the defclass form. These ordered pairs generate the\ntotal ordering on the class C and its direct superclasses.\nLet S_C be the set of C and its superclasses. Let R be\n                         R=\\bigcup_{c\\in S_C}R_c\n.\n[Reviewer Note by Barmar: \"Consistent\" needs to be defined, or maybe we\nshould say \"logically consistent\"?]\nThe set R might or might not generate a partial ordering, depending on\nwhether the R_c, c\\in S_C, are consistent; it is assumed that they are\nconsistent and that R generates a partial ordering.  When the R_c are not\nconsistent, it is said that R is inconsistent.\nTo compute the class precedence list for~C, topologically sort the\nelements of S_C with respect to the partial ordering generated by R.  When\nthe topological sort must select a class from a set of two or more\nclasses, none of which are preceded by other classes with respect to~R,\nthe class selected is chosen deterministically, as described below.\nIf R is inconsistent, an error is signaled.\n* Menu:\n* Topological Sorting::\n* Examples of Class Precedence List Determination::\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: Determining the Class Precedence List,  Next: Redefining Classes,  Prev: Inheritance,  Up: Classes\n\nDetermining the Class Precedence List\n-------------------------------------\n\nThe defclass form for a class provides a total ordering on that class and\nits direct superclasses.  This ordering is called the local precedence\norder .  It is an ordered list of the class and its direct superclasses.\nThe class precedence list for a class C is a total ordering on C and its\nsuperclasses that is consistent with the local precedence orders for each\nof C and its superclasses.\n\nA class precedes its direct superclasses, and a direct superclass precedes\nall other direct superclasses specified to its right in the superclasses\nlist of the defclass form.  For every class C, define\n\n                R_C={(C,C_1),(C_1,C_2),...,(C_{n-1},C_n)}\n\nwhere C_1,...,C_n are the direct superclasses of C in the order in which\nthey are mentioned in the defclass form. These ordered pairs generate the\ntotal ordering on the class C and its direct superclasses.\n\nLet S_C be the set of C and its superclasses. Let R be\n\n                         R=\\bigcup_{c\\in S_C}R_c\n\n.\n\n[Reviewer Note by Barmar: \"Consistent\" needs to be defined, or maybe we\nshould say \"logically consistent\"?]\n\nThe set R might or might not generate a partial ordering, depending on\nwhether the R_c, c\\in S_C, are consistent; it is assumed that they are\nconsistent and that R generates a partial ordering.  When the R_c are not\nconsistent, it is said that R is inconsistent.\n\nTo compute the class precedence list for~C, topologically sort the\nelements of S_C with respect to the partial ordering generated by R.  When\nthe topological sort must select a class from a set of two or more\nclasses, none of which are preceded by other classes with respect to~R,\nthe class selected is chosen deterministically, as described below.\n\nIf R is inconsistent, an error is signaled.\n\n* Menu:\n\n* Topological Sorting::\n* Examples of Class Precedence List Determination::\n\n"
}