{
    "name": "function-keywords",
    "prev": "Objects Dictionary",
    "next": "ensure-generic-function",
    "up": "Objects Dictionary",
    "header": {
        "type": "Standard Generic Function",
        "text": "function-keywords"
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "function-keywords",
                    "text": " method =>  keys, allow-other-keys-p\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "function-keywords",
                    "text": " (method standard-method)\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "method",
                    "desc": "a method."
                },
                {
                    "name": "keys",
                    "desc": "a list."
                },
                {
                    "name": "allow-other-keys-p",
                    "desc": "a generalized boolean."
                }
            ]
        },
        {
            "type": "Description",
            "text": "Returns the keyword parameter specifiers for a method.\nTwo values are returned: a list of the explicitly named keywords and a\ngeneralized boolean that states whether &allow-other-keys had been\nspecified in the method definition.\n"
        },
        {
            "type": "Examples",
            "text": "      (defmethod gf1 ((a integer) &optional (b 2)\n                      &key (c 3) ((:dee d) 4) e ((eff f)))\n        (list a b c d e f))\n     =>  #<STANDARD-METHOD GF1 (INTEGER) 36324653>\n      (find-method #'gf1 '() (list (find-class 'integer)))\n     =>  #<STANDARD-METHOD GF1 (INTEGER) 36324653>\n      (function-keywords *)\n     =>  (:C :DEE :E EFF), false\n      (defmethod gf2 ((a integer))\n        (list a b c d e f))\n     =>  #<STANDARD-METHOD GF2 (INTEGER) 42701775>\n      (function-keywords (find-method #'gf1 '() (list (find-class 'integer))))\n     =>  (), false\n      (defmethod gf3 ((a integer) &key b c d &allow-other-keys)\n        (list a b c d e f))\n      (function-keywords *)\n     =>  (:B :C :D), true\n"
        },
        {
            "type": "Affected By",
            "text": "defmethod\n"
        },
        {
            "type": "See Also",
            "text": "*Note defmethod::\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: function-keywords,  Next: ensure-generic-function,  Prev: Objects Dictionary,  Up: Objects Dictionary\n\nfunction-keywords                               [Standard Generic Function]\n---------------------------------------------------------------------------\n\nSyntax::\n........\n\n`function-keywords'  method =>  keys, allow-other-keys-p\n\nMethod Signatures::\n...................\n\n`function-keywords'  (method standard-method)\n\nArguments and Values::\n......................\n\nmethod--a method.\n\nkeys--a list.\n\nallow-other-keys-p--a generalized boolean.\n\nDescription::\n.............\n\nReturns the keyword parameter specifiers for a method.\n\nTwo values are returned: a list of the explicitly named keywords and a\ngeneralized boolean that states whether &allow-other-keys had been\nspecified in the method definition.\n\nExamples::\n..........\n\n      (defmethod gf1 ((a integer) &optional (b 2)\n                      &key (c 3) ((:dee d) 4) e ((eff f)))\n        (list a b c d e f))\n     =>  #<STANDARD-METHOD GF1 (INTEGER) 36324653>\n      (find-method #'gf1 '() (list (find-class 'integer)))\n     =>  #<STANDARD-METHOD GF1 (INTEGER) 36324653>\n      (function-keywords *)\n     =>  (:C :DEE :E EFF), false\n      (defmethod gf2 ((a integer))\n        (list a b c d e f))\n     =>  #<STANDARD-METHOD GF2 (INTEGER) 42701775>\n      (function-keywords (find-method #'gf1 '() (list (find-class 'integer))))\n     =>  (), false\n      (defmethod gf3 ((a integer) &key b c d &allow-other-keys)\n        (list a b c d e f))\n      (function-keywords *)\n     =>  (:B :C :D), true\n\nAffected By::\n.............\n\ndefmethod\n\nSee Also::\n..........\n\n*Note defmethod::\n\n"
}