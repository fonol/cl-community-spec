{
    "name": "add-method",
    "prev": "find-method",
    "next": "initialize-instance",
    "up": "Objects Dictionary",
    "header": {
        "type": "Standard Generic Function",
        "text": "add-method"
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "add-method",
                    "text": " generic-function method =>  generic-function\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "add-method",
                    "text": " (generic-function standard-generic-function) (method method)\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "generic-function",
                    "desc": "a generic function object."
                },
                {
                    "name": "method",
                    "desc": "a method object."
                }
            ]
        },
        {
            "type": "Description",
            "text": "The generic function add-method adds a method to a generic function.\nIf method agrees with an existing method of generic-function on parameter\nspecializers and qualifiers, the existing method is replaced.\n"
        },
        {
            "type": "Exceptional Situations",
            "text": "The lambda list of the method function of method must be congruent with\nthe lambda list of generic-function, or an error of type error is signaled.\nIf method is a method object of another generic function, an error of type\nerror is signaled.\n"
        },
        {
            "type": "See Also",
            "text": "*Note defmethod:: , *Note defgeneric:: , *Note find-method:: , *Note\nremove-method:: , *Note Agreement on Parameter Specializers and\nQualifiers::\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: add-method,  Next: initialize-instance,  Prev: find-method,  Up: Objects Dictionary\n\nadd-method                                      [Standard Generic Function]\n---------------------------------------------------------------------------\n\nSyntax::\n........\n\n`add-method'  generic-function method =>  generic-function\n\nMethod Signatures::\n...................\n\n`add-method'  (generic-function standard-generic-function) (method method)\n\nArguments and Values::\n......................\n\ngeneric-function--a generic function object.\n\nmethod--a method object.\n\nDescription::\n.............\n\nThe generic function add-method adds a method to a generic function.\n\nIf method agrees with an existing method of generic-function on parameter\nspecializers and qualifiers, the existing method is replaced.\n\nExceptional Situations::\n........................\n\nThe lambda list of the method function of method must be congruent with\nthe lambda list of generic-function, or an error of type error is signaled.\n\nIf method is a method object of another generic function, an error of type\nerror is signaled.\n\nSee Also::\n..........\n\n*Note defmethod:: , *Note defgeneric:: , *Note find-method:: , *Note\nremove-method:: , *Note Agreement on Parameter Specializers and\nQualifiers::\n\n"
}