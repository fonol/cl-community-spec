{
    "name": "The for-as-on-list subclause",
    "prev": "Examples of for-as-in-list subclause",
    "next": "Examples of for-as-on-list subclause",
    "up": "Variable Initialization and Stepping Clauses",
    "header": {
        "type": null,
        "text": null
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "The for-as-on-list subclause",
            "text": "In the for-as-on-list subclause, the for or as construct iterates over a\nlist. It checks for the end of the list as if by using atom.\nThe variable var is bound to the successive tails of the list in form1.\nAt the end of each iteration, the function step-fun is applied to the\nlist; the default value for step-fun is cdr.  The loop keywords on and by\nserve as valid prepositions in this syntax.  The for or as construct\ncauses termination when the end of the list is reached.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: The for-as-on-list subclause,  Next: Examples of for-as-on-list subclause,  Prev: Examples of for-as-in-list subclause,  Up: Variable Initialization and Stepping Clauses\n\nThe for-as-on-list subclause\n............................\n\nIn the for-as-on-list subclause, the for or as construct iterates over a\nlist. It checks for the end of the list as if by using atom.\n\nThe variable var is bound to the successive tails of the list in form1.\nAt the end of each iteration, the function step-fun is applied to the\nlist; the default value for step-fun is cdr.  The loop keywords on and by\nserve as valid prepositions in this syntax.  The for or as construct\ncauses termination when the end of the list is reached.\n\n"
}