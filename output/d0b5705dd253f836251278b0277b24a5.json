{
    "name": "simple-vector",
    "prev": "vector (System Class)",
    "next": "bit-vector",
    "up": "Arrays Dictionary",
    "header": {
        "type": "Type",
        "text": "simple-vector"
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Supertypes",
            "text": "simple-vector, vector, simple-array, array, sequence, t\n"
        },
        {
            "type": "Description",
            "text": "The type of a vector that is not displaced to another array, has no fill\npointer, is not expressly adjustable and is able to hold elements of any\ntype is a subtype of type simple-vector.\nThe type simple-vector is a subtype of type vector, and is a subtype of\ntype (vector t).\n"
        },
        {
            "type": "Compound Type Specifier Kind",
            "text": "Specializing.\n"
        },
        {
            "type": "Compound Type Specifier Syntax",
            "text": "(`simple-vector'{[size]})\n"
        },
        {
            "type": "Compound Type Specifier Arguments",
            "text": "size--a non-negative fixnum, or the symbol *.  The default is the symbol *.\n"
        },
        {
            "type": "Compound Type Specifier Description",
            "text": "This is the same as (simple-array t (size)).\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: simple-vector,  Next: bit-vector,  Prev: vector (System Class),  Up: Arrays Dictionary\n\nsimple-vector                                                        [Type]\n---------------------------------------------------------------------------\n\nSupertypes::\n............\n\nsimple-vector, vector, simple-array, array, sequence, t\n\nDescription::\n.............\n\nThe type of a vector that is not displaced to another array, has no fill\npointer, is not expressly adjustable and is able to hold elements of any\ntype is a subtype of type simple-vector.\n\nThe type simple-vector is a subtype of type vector, and is a subtype of\ntype (vector t).\n\nCompound Type Specifier Kind::\n..............................\n\nSpecializing.\n\nCompound Type Specifier Syntax::\n................................\n\n(`simple-vector'{[size]})\n\nCompound Type Specifier Arguments::\n...................................\n\nsize--a non-negative fixnum, or the symbol *.  The default is the symbol *.\n\nCompound Type Specifier Description::\n.....................................\n\nThis is the same as (simple-array t (size)).\n\n"
}