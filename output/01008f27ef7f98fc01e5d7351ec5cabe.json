{
    "name": "dpb",
    "prev": "deposit-field",
    "next": "ldb",
    "up": "Numbers Dictionary",
    "header": {
        "type": "Function",
        "text": "dpb"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "dpb",
                    "text": " newbyte bytespec integer =>  result-integer\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Pronunciation",
            "text": "pronounced ,de  'pib or pronounced ,de  'pe b or pronounced 'd\\=e 'p\\=e\n'b\\=e\n"
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "newbyte",
                    "desc": "an integer."
                },
                {
                    "name": "bytespec",
                    "desc": "a byte specifier."
                },
                {
                    "name": "integer",
                    "desc": "an integer."
                },
                {
                    "name": "result-integer",
                    "desc": "an integer."
                }
            ]
        },
        {
            "type": "Description",
            "text": "dpb (deposit byte) is used to replace a field of bits within integer.  dpb\nreturns an integer that is the same as integer except in the bits\nspecified by bytespec.\nLet s be the size specified by bytespec; then the low s bits of newbyte\nappear in the result in the byte specified by bytespec.  Newbyte is\ninterpreted as being right-justified, as if it were the result of ldb.\n"
        },
        {
            "type": "Examples",
            "text": "      (dpb 1 (byte 1 10) 0) =>  1024\n      (dpb -2 (byte 2 10) 0) =>  2048\n      (dpb 1 (byte 2 10) 2048) =>  1024\n"
        },
        {
            "type": "See Also",
            "text": "*Note byte; byte-size; byte-position:: , *Note deposit-field:: , *Note\nldb::\n"
        },
        {
            "type": "Notes",
            "text": "      (logbitp j (dpb m (byte s p) n))\n      == (if (and (>= j p) (< j (+ p s)))\n             (logbitp (- j p) m)\n             (logbitp j n))\nIn general,\n      (dpb x (byte 0 y) z) =>  z\nfor all valid values of x, y, and z.\nHistorically, the name \"dpb\" comes from a DEC PDP-10 assembly language\ninstruction meaning \"deposit byte.\"\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: dpb,  Next: ldb,  Prev: deposit-field,  Up: Numbers Dictionary\n\ndpb                                                              [Function]\n---------------------------------------------------------------------------\n\n`dpb'  newbyte bytespec integer =>  result-integer\n\nPronunciation::\n...............\n\npronounced ,de  'pib or pronounced ,de  'pe b or pronounced 'd\\=e 'p\\=e\n'b\\=e\n\nArguments and Values::\n......................\n\nnewbyte--an integer.\n\nbytespec--a byte specifier.\n\ninteger--an integer.\n\nresult-integer--an integer.\n\nDescription::\n.............\n\ndpb (deposit byte) is used to replace a field of bits within integer.  dpb\nreturns an integer that is the same as integer except in the bits\nspecified by bytespec.\n\nLet s be the size specified by bytespec; then the low s bits of newbyte\nappear in the result in the byte specified by bytespec.  Newbyte is\ninterpreted as being right-justified, as if it were the result of ldb.\n\nExamples::\n..........\n\n      (dpb 1 (byte 1 10) 0) =>  1024\n      (dpb -2 (byte 2 10) 0) =>  2048\n      (dpb 1 (byte 2 10) 2048) =>  1024\n\nSee Also::\n..........\n\n*Note byte; byte-size; byte-position:: , *Note deposit-field:: , *Note\nldb::\n\nNotes::\n.......\n\n      (logbitp j (dpb m (byte s p) n))\n      == (if (and (>= j p) (< j (+ p s)))\n             (logbitp (- j p) m)\n             (logbitp j n))\n\nIn general,\n\n      (dpb x (byte 0 y) z) =>  z\n\nfor all valid values of x, y, and z.\n\nHistorically, the name \"dpb\" comes from a DEC PDP-10 assembly language\ninstruction meaning \"deposit byte.\"\n\n"
}