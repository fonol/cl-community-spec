{
    "name": "set-pprint-dispatch",
    "prev": "print-unreadable-object",
    "next": "write",
    "up": "Printer Dictionary",
    "header": {
        "type": "Function",
        "text": "set-pprint-dispatch"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "set-pprint-dispatch",
                    "text": " type-specifier function &optional priority table =>nil\n\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "type-specifier",
                    "desc": "a type specifier."
                },
                {
                    "name": "function",
                    "desc": "a function, a function name, or nil."
                },
                {
                    "name": "priority",
                    "desc": "a real.  The default is 0."
                },
                {
                    "name": "table",
                    "desc": "a pprint dispatch table.  The default is the value of"
                }
            ]
        },
        {
            "type": "Description",
            "text": "Installs an entry into the pprint dispatch table which is table.\nType-specifier is the key of the entry.  The first action of\nset-pprint-dispatch is to remove any pre-existing entry associated with\ntype-specifier.  This guarantees that there will never be two entries\nassociated with the same type specifier in a given pprint dispatch table.\nEquality of type specifiers is tested by equal.\nTwo values are associated with each type specifier in a pprint dispatch\ntable: a function and a priority.  The function must accept two arguments:\nthe stream to which output is sent and the object to be printed.  The\nfunction should pretty print the object to the stream.  The function can\nassume that object satisfies the type given by type-specifier.  The\nfunction must obey *print-readably*.  Any values returned by the function\nare ignored.\nPriority is a priority to resolve conflicts when an object matches more\nthan one entry.\nIt is permissible for function to be nil.  In this situation, there will\nbe no type-specifier entry in table after set-pprint-dispatch returns.\n"
        },
        {
            "type": "Exceptional Situations",
            "text": "An error is signaled if priority is not a real.\n"
        },
        {
            "type": "Notes",
            "text": "Since pprint dispatch tables are often used to control the pretty printing\nof Lisp code, it is common for the type-specifier to be an expression of\nthe form\n      (cons car-type cdr-type)\nThis signifies that the corresponding object must be a cons cell whose car\nmatches the type specifier car-type and whose cdr matches the type\nspecifier cdr-type.  The cdr-type can be omitted in which case it defaults\nto t.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: set-pprint-dispatch,  Next: write,  Prev: print-unreadable-object,  Up: Printer Dictionary\n\nset-pprint-dispatch                                              [Function]\n---------------------------------------------------------------------------\n\n`set-pprint-dispatch'  type-specifier function &optional priority table =>\nnil\n\nArguments and Values::\n......................\n\ntype-specifier--a type specifier.\n\nfunction--a function, a function name, or nil.\n\npriority--a real.  The default is 0.\n\ntable--a pprint dispatch table.  The default is the value of\n*print-pprint-dispatch*.\n\nDescription::\n.............\n\nInstalls an entry into the pprint dispatch table which is table.\n\nType-specifier is the key of the entry.  The first action of\nset-pprint-dispatch is to remove any pre-existing entry associated with\ntype-specifier.  This guarantees that there will never be two entries\nassociated with the same type specifier in a given pprint dispatch table.\nEquality of type specifiers is tested by equal.\n\nTwo values are associated with each type specifier in a pprint dispatch\ntable: a function and a priority.  The function must accept two arguments:\nthe stream to which output is sent and the object to be printed.  The\nfunction should pretty print the object to the stream.  The function can\nassume that object satisfies the type given by type-specifier.  The\nfunction must obey *print-readably*.  Any values returned by the function\nare ignored.\n\nPriority is a priority to resolve conflicts when an object matches more\nthan one entry.\n\nIt is permissible for function to be nil.  In this situation, there will\nbe no type-specifier entry in table after set-pprint-dispatch returns.\n\nExceptional Situations::\n........................\n\nAn error is signaled if priority is not a real.\n\nNotes::\n.......\n\nSince pprint dispatch tables are often used to control the pretty printing\nof Lisp code, it is common for the type-specifier to be an expression of\nthe form\n\n      (cons car-type cdr-type)\n\nThis signifies that the corresponding object must be a cons cell whose car\nmatches the type specifier car-type and whose cdr matches the type\nspecifier cdr-type.  The cdr-type can be omitted in which case it defaults\nto t.\n\n"
}