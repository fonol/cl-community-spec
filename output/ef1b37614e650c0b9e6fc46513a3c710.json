{
    "name": "Compilation Semantics",
    "prev": "Compiler Terminology",
    "next": "File Compilation",
    "up": "Compilation",
    "header": {
        "type": null,
        "text": "Compilation Semantics"
    },
    "sections": [
        {
            "type": "",
            "text": "Conceptually, compilation is a process that traverses code, performs\ncertain kinds of syntactic and semantic analyses using information (such\nas proclamations and macro definitions) present in the compilation\nenvironment, and produces equivalent, possibly more efficient code.\n* Menu:\n* Compiler Macros::\n* Purpose of Compiler Macros::\n* Naming of Compiler Macros::\n* When Compiler Macros Are Used::\n* Notes about the Implementation of Compiler Macros::\n* Minimal Compilation::\n* Semantic Constraints::\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: Compilation Semantics,  Next: File Compilation,  Prev: Compiler Terminology,  Up: Compilation\n\nCompilation Semantics\n---------------------\n\nConceptually, compilation is a process that traverses code, performs\ncertain kinds of syntactic and semantic analyses using information (such\nas proclamations and macro definitions) present in the compilation\nenvironment, and produces equivalent, possibly more efficient code.\n\n* Menu:\n\n* Compiler Macros::\n* Purpose of Compiler Macros::\n* Naming of Compiler Macros::\n* When Compiler Macros Are Used::\n* Notes about the Implementation of Compiler Macros::\n* Minimal Compilation::\n* Semantic Constraints::\n\n"
}