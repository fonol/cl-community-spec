{
    "name": "base-char",
    "prev": "character (System Class)",
    "next": "standard-char",
    "up": "Characters Dictionary",
    "header": {
        "type": "Type",
        "text": "base-char"
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Supertypes",
            "text": "base-char, character, t\n"
        },
        {
            "type": "Description",
            "text": "The type base-char is defined as the upgraded array element type of\nstandard-char.  An implementation can support additional subtypes of type\ncharacter (besides the ones listed in this standard) that might or might\nnot be supertypes of type base-char.  In addition, an implementation can\ndefine base-char to be the same type as character.\nBase characters are distinguished in the following respects:\n1.\n     The type standard-char is a subrepertoire of the type base-char.\n2.\n     The selection of base characters that are not standard characters is\n     implementation defined.\n3.\n     Only objects of the type base-char can be elements of a base string.\n4.\n     No upper bound is specified for the number of characters in the\n     base-char repertoire; the size of that repertoire is\n     implementation-defined.  The lower bound is~96, the number of\n     standard characters.\nWhether a character is a base character depends on the way that an\nimplementation represents strings, and not any other properties of the\nimplementation or the host operating system.  For example, one\nimplementation might encode all strings as characters having 16-bit\nencodings, and another might have two kinds of strings: those with\ncharacters having 8-bit encodings and those with characters having 16-bit\nencodings.  In the first implementation, the type base-char is equivalent\nto the type character: there is only one kind of string.  In the second\nimplementation, the base characters might be those characters that could\nbe stored in a string of characters having 8-bit encodings.  In such an\nimplementation, the type base-char is a proper subtype of the type\ncharacter.\nThe type standard-char is a\nsubtype of type base-char.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: base-char,  Next: standard-char,  Prev: character (System Class),  Up: Characters Dictionary\n\nbase-char                                                            [Type]\n---------------------------------------------------------------------------\n\nSupertypes::\n............\n\nbase-char, character, t\n\nDescription::\n.............\n\nThe type base-char is defined as the upgraded array element type of\nstandard-char.  An implementation can support additional subtypes of type\ncharacter (besides the ones listed in this standard) that might or might\nnot be supertypes of type base-char.  In addition, an implementation can\ndefine base-char to be the same type as character.\n\nBase characters are distinguished in the following respects:\n1.\n     The type standard-char is a subrepertoire of the type base-char.\n\n2.\n     The selection of base characters that are not standard characters is\n     implementation defined.\n\n3.\n     Only objects of the type base-char can be elements of a base string.\n\n4.\n     No upper bound is specified for the number of characters in the\n     base-char repertoire; the size of that repertoire is\n     implementation-defined.  The lower bound is~96, the number of\n     standard characters.\n\nWhether a character is a base character depends on the way that an\nimplementation represents strings, and not any other properties of the\nimplementation or the host operating system.  For example, one\nimplementation might encode all strings as characters having 16-bit\nencodings, and another might have two kinds of strings: those with\ncharacters having 8-bit encodings and those with characters having 16-bit\nencodings.  In the first implementation, the type base-char is equivalent\nto the type character: there is only one kind of string.  In the second\nimplementation, the base characters might be those characters that could\nbe stored in a string of characters having 8-bit encodings.  In such an\nimplementation, the type base-char is a proper subtype of the type\ncharacter.\n\nThe type standard-char is a\n\nsubtype of type base-char.\n\n"
}