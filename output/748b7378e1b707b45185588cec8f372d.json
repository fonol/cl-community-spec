{
    "name": "pprint-dispatch",
    "prev": "formatter",
    "next": "pprint-exit-if-list-exhausted",
    "up": "Printer Dictionary",
    "header": {
        "type": "Function",
        "text": "pprint-dispatch"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "pprint-dispatch",
                    "text": " object &optional table =>  function, found-p\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "object",
                    "desc": "an object."
                },
                {
                    "name": "table",
                    "desc": "a pprint dispatch table, or nil.  The default is the value of"
                },
                {
                    "name": "table",
                    "desc": "a pprint dispatch table, or nil.  The default is the value of*print-pprint-dispatch*.\n"
                },
                {
                    "name": "function",
                    "desc": "a function designator."
                },
                {
                    "name": "found-p",
                    "desc": "a generalized boolean."
                }
            ]
        },
        {
            "type": "Description",
            "text": "Retrieves the highest priority function in table that is associated with a\ntype specifier that matches object.  The function is chosen by finding all\nof the type specifiers in table that match the object and selecting the\nhighest priority function associated with any of these type specifiers.\nIf there is more than one highest priority function, an arbitrary choice\nis made.  If no type specifiers match the object, a function is returned\nthat prints object\nusing print-object.\nThe secondary value, found-p, is true if a matching type specifier was\nfound in table, or false otherwise.\nIf table is nil, retrieval is done in the initial pprint dispatch table.\n"
        },
        {
            "type": "Affected By",
            "text": "The state of the table.\n"
        },
        {
            "type": "Exceptional Situations",
            "text": "Should signal an error of type type-error if table is neither a\npprint-dispatch-table nor nil.\n"
        },
        {
            "type": "Notes",
            "text": "     (let ((*print-pretty* t))\n       (write object :stream s))\n     == (funcall (pprint-dispatch object) s object)\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: pprint-dispatch,  Next: pprint-exit-if-list-exhausted,  Prev: formatter,  Up: Printer Dictionary\n\npprint-dispatch                                                  [Function]\n---------------------------------------------------------------------------\n\n`pprint-dispatch'  object &optional table =>  function, found-p\n\nArguments and Values::\n......................\n\nobject--an object.\n\ntable--a pprint dispatch table, or nil.  The default is the value of\n*print-pprint-dispatch*.\n\nfunction--a function designator.\n\nfound-p--a generalized boolean.\n\nDescription::\n.............\n\nRetrieves the highest priority function in table that is associated with a\ntype specifier that matches object.  The function is chosen by finding all\nof the type specifiers in table that match the object and selecting the\nhighest priority function associated with any of these type specifiers.\nIf there is more than one highest priority function, an arbitrary choice\nis made.  If no type specifiers match the object, a function is returned\nthat prints object\n\nusing print-object.\n\nThe secondary value, found-p, is true if a matching type specifier was\nfound in table, or false otherwise.\n\nIf table is nil, retrieval is done in the initial pprint dispatch table.\n\nAffected By::\n.............\n\nThe state of the table.\n\nExceptional Situations::\n........................\n\nShould signal an error of type type-error if table is neither a\npprint-dispatch-table nor nil.\n\nNotes::\n.......\n\n     (let ((*print-pretty* t))\n       (write object :stream s))\n     == (funcall (pprint-dispatch object) s object)\n\n"
}