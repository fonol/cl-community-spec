{
    "name": "make-echo-stream",
    "prev": "echo-stream-input-stream",
    "next": "concatenated-stream-streams",
    "up": "Streams Dictionary",
    "header": {
        "type": "Function",
        "text": "make-echo-stream"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "make-echo-stream",
                    "text": " input-stream output-stream =>  echo-stream\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "input-stream",
                    "desc": "an input stream."
                },
                {
                    "name": "output-stream",
                    "desc": "an output stream."
                },
                {
                    "name": "echo-stream",
                    "desc": "an echo stream."
                }
            ]
        },
        {
            "type": "Description",
            "text": "Creates and returns an echo stream that takes input  from input-stream and\nsends output to   output-stream.\n"
        },
        {
            "type": "Examples",
            "text": "      (let ((out (make-string-output-stream)))\n         (with-open-stream\n             (s (make-echo-stream\n                 (make-string-input-stream \"this-is-read-and-echoed\")\n                 out))\n           (read s)\n           (format s \" * this-is-direct-output\")\n           (get-output-stream-string out)))\n     =>  \"this-is-read-and-echoed * this-is-direct-output\"\n"
        },
        {
            "type": "See Also",
            "text": "*Note echo-stream-input-stream; echo-stream-output-stream:: ,\necho-stream-output-stream, *Note make-two-way-stream::\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: make-echo-stream,  Next: concatenated-stream-streams,  Prev: echo-stream-input-stream,  Up: Streams Dictionary\n\nmake-echo-stream                                                 [Function]\n---------------------------------------------------------------------------\n\n`make-echo-stream'  input-stream output-stream =>  echo-stream\n\nArguments and Values::\n......................\n\ninput-stream--an input stream.\n\noutput-stream--an output stream.\n\necho-stream--an echo stream.\n\nDescription::\n.............\n\nCreates and returns an echo stream that takes input  from input-stream and\nsends output to   output-stream.\n\nExamples::\n..........\n\n      (let ((out (make-string-output-stream)))\n         (with-open-stream\n             (s (make-echo-stream\n                 (make-string-input-stream \"this-is-read-and-echoed\")\n                 out))\n           (read s)\n           (format s \" * this-is-direct-output\")\n           (get-output-stream-string out)))\n     =>  \"this-is-read-and-echoed * this-is-direct-output\"\n\nSee Also::\n..........\n\n*Note echo-stream-input-stream; echo-stream-output-stream:: ,\necho-stream-output-stream, *Note make-two-way-stream::\n\n"
}