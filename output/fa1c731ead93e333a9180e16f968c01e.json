{
    "name": "sequence",
    "prev": "Sequences Dictionary",
    "next": "copy-seq",
    "up": "Sequences Dictionary",
    "header": {
        "type": "System Class",
        "text": "sequence"
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Class Precedence List",
            "text": "",
            "items": [
                {
                    "name": "sequence",
                    "link": "fa1c731ead93e333a9180e16f968c01e"
                },
                {
                    "name": " t",
                    "link": null
                }
            ]
        },
        {
            "type": "Description",
            "text": "Sequences are ordered collections of objects, called the elements of the\nsequence.\nThe types vector and the type list are disjoint subtypes of type sequence,\nbut are not necessarily an exhaustive partition of sequence.\nWhen viewing a vector as a sequence, only the active elements of that\nvector are considered elements of the sequence; that is, sequence\noperations respect the fill pointer when given sequences represented as\nvectors.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: sequence,  Next: copy-seq,  Prev: Sequences Dictionary,  Up: Sequences Dictionary\n\nsequence                                                     [System Class]\n---------------------------------------------------------------------------\n\nClass Precedence List::\n.......................\n\nsequence, t\n\nDescription::\n.............\n\nSequences are ordered collections of objects, called the elements of the\nsequence.\n\nThe types vector and the type list are disjoint subtypes of type sequence,\nbut are not necessarily an exhaustive partition of sequence.\n\nWhen viewing a vector as a sequence, only the active elements of that\nvector are considered elements of the sequence; that is, sequence\noperations respect the fill pointer when given sequences represented as\nvectors.\n\n"
}