{
    "name": "style-warning",
    "prev": "warning",
    "next": "serious-condition",
    "up": "Conditions Dictionary",
    "header": {
        "type": "Condition Type",
        "text": "style-warning"
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Class Precedence List",
            "text": "",
            "items": [
                {
                    "name": "style-warning",
                    "link": "b19ff7e7678c36efbe68a6f71d824b76"
                },
                {
                    "name": " warning",
                    "link": null
                },
                {
                    "name": " condition",
                    "link": null
                },
                {
                    "name": " t",
                    "link": null
                }
            ]
        },
        {
            "type": "Description",
            "text": "The type style-warning includes those conditions that represent situations\ninvolving code that is conforming code but that is nevertheless considered\nto be faulty or substandard.\n"
        },
        {
            "type": "See Also",
            "text": "*Note muffle-warning::\n"
        },
        {
            "type": "Notes",
            "text": "An implementation might signal such a condition if it encounters code that\nuses deprecated features or that appears unaesthetic or inefficient.\nAn `unused variable' warning must be of type style-warning.\nIn general, the question of whether code is faulty or substandard is a\nsubjective decision to be made by the facility processing that code.  The\nintent is that whenever such a facility wishes to complain about code on\nsuch subjective grounds, it should use this condition type so that any\nclients who wish to redirect or muffle superfluous warnings can do so\nwithout risking that they will be redirecting or muffling other, more\nserious warnings.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: style-warning,  Next: serious-condition,  Prev: warning,  Up: Conditions Dictionary\n\nstyle-warning                                              [Condition Type]\n---------------------------------------------------------------------------\n\nClass Precedence List::\n.......................\n\nstyle-warning, warning, condition, t\n\nDescription::\n.............\n\nThe type style-warning includes those conditions that represent situations\ninvolving code that is conforming code but that is nevertheless considered\nto be faulty or substandard.\n\nSee Also::\n..........\n\n*Note muffle-warning::\n\nNotes::\n.......\n\nAn implementation might signal such a condition if it encounters code that\nuses deprecated features or that appears unaesthetic or inefficient.\n\nAn `unused variable' warning must be of type style-warning.\n\nIn general, the question of whether code is faulty or substandard is a\nsubjective decision to be made by the facility processing that code.  The\nintent is that whenever such a facility wishes to complain about code on\nsuch subjective grounds, it should use this condition type so that any\nclients who wish to redirect or muffle superfluous warnings can do so\nwithout risking that they will be redirecting or muffling other, more\nserious warnings.\n\n"
}