{
    "name": "character",
    "prev": "char=",
    "next": "characterp",
    "up": "Characters Dictionary",
    "header": {
        "type": "Function",
        "text": "character"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "character",
                    "text": " character =>  denoted-character\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "character",
                    "desc": "a character designator."
                },
                {
                    "name": "denoted-character",
                    "desc": "a character."
                }
            ]
        },
        {
            "type": "Description",
            "text": "Returns the character denoted by the character designator.\n"
        },
        {
            "type": "Examples",
            "text": "      (character #\\a) =>  #\\a\n      (character \"a\") =>  #\\a\n      (character 'a) =>  #\\A\n      (character '\\a) =>  #\\a\n      (character 65.) is an error.\n      (character 'apple) is an error.\n"
        },
        {
            "type": "Exceptional Situations",
            "text": "Should signal an error of type type-error if object is not a character\ndesignator.\n"
        },
        {
            "type": "See Also",
            "text": "*Note coerce::\n"
        },
        {
            "type": "Notes",
            "text": "      (character object) == (coerce object 'character)\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: character,  Next: characterp,  Prev: char=,  Up: Characters Dictionary\n\ncharacter                                                        [Function]\n---------------------------------------------------------------------------\n\n`character'  character =>  denoted-character\n\nArguments and Values::\n......................\n\ncharacter--a character designator.\n\ndenoted-character--a character.\n\nDescription::\n.............\n\nReturns the character denoted by the character designator.\n\nExamples::\n..........\n\n      (character #\\a) =>  #\\a\n      (character \"a\") =>  #\\a\n      (character 'a) =>  #\\A\n      (character '\\a) =>  #\\a\n      (character 65.) is an error.\n      (character 'apple) is an error.\n\nExceptional Situations::\n........................\n\nShould signal an error of type type-error if object is not a character\ndesignator.\n\nSee Also::\n..........\n\n*Note coerce::\n\nNotes::\n.......\n\n      (character object) == (coerce object 'character)\n\n"
}