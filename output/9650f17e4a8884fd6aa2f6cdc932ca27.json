{
    "name": "Conses as Lists",
    "prev": "Conses as Trees",
    "next": null,
    "up": "Cons Concepts",
    "header": {
        "type": null,
        "text": "Conses as Lists"
    },
    "sections": [
        {
            "type": "",
            "text": "A list is a chain of conses in which the car of each cons is an element of\nthe list, and the cdr of each cons is either the next link in the chain or\na terminating atom.\nA proper list is a list terminated by the empty list.  The empty list is a\nproper list, but is not a cons.\nAn improper list is a list that is not a proper list; that is, it is a\ncircular list or a dotted list.\nA dotted list is a list that has a terminating atom that is not the empty\nlist.  A non-nil atom by itself is not considered to be a list of any\nkind--not even a dotted list.\nA circular list is a chain of conses that has no termination because some\ncons in the chain is the cdr of a later cons.\n  append      last           nbutlast  rest       \n  butlast     ldiff          nconc     revappend  \n  copy-alist  list           ninth     second     \n  copy-list   list*          nreconc   seventh    \n  eighth      list-length    nth       sixth      \n  endp        make-list      nthcdr    tailp      \n  fifth       member         pop       tenth      \n  first       member-if      push      third      \n  fourth      member-if-not  pushnew              \n  Figure 14-3: Some defined names relating to lists.\n* Menu:\n* Lists as Association Lists::\n* Lists as Sets::\n* General Restrictions on Parameters that must be Lists::\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: Conses as Lists,  Prev: Conses as Trees,  Up: Cons Concepts\n\nConses as Lists\n---------------\n\nA list is a chain of conses in which the car of each cons is an element of\nthe list, and the cdr of each cons is either the next link in the chain or\na terminating atom.\n\nA proper list is a list terminated by the empty list.  The empty list is a\nproper list, but is not a cons.\n\nAn improper list is a list that is not a proper list; that is, it is a\ncircular list or a dotted list.\n\nA dotted list is a list that has a terminating atom that is not the empty\nlist.  A non-nil atom by itself is not considered to be a list of any\nkind--not even a dotted list.\n\nA circular list is a chain of conses that has no termination because some\ncons in the chain is the cdr of a later cons.\n\n  append      last           nbutlast  rest       \n  butlast     ldiff          nconc     revappend  \n  copy-alist  list           ninth     second     \n  copy-list   list*          nreconc   seventh    \n  eighth      list-length    nth       sixth      \n  endp        make-list      nthcdr    tailp      \n  fifth       member         pop       tenth      \n  first       member-if      push      third      \n  fourth      member-if-not  pushnew              \n\n  Figure 14-3: Some defined names relating to lists.\n\n\n* Menu:\n\n* Lists as Association Lists::\n* Lists as Sets::\n* General Restrictions on Parameters that must be Lists::\n\n"
}