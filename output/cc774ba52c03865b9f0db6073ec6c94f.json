{
    "name": "unsigned-byte",
    "prev": "signed-byte",
    "next": "mod",
    "up": "Numbers Dictionary",
    "header": {
        "type": "Type",
        "text": "unsigned-byte"
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Supertypes",
            "text": "unsigned-byte, signed-byte, integer, rational,\nreal,\nnumber, t\n"
        },
        {
            "type": "Description",
            "text": "The atomic type specifier unsigned-byte denotes the same type as is\ndenoted by the type specifier (integer 0 *).\n"
        },
        {
            "type": "Compound Type Specifier Kind",
            "text": "Abbreviating.\n"
        },
        {
            "type": "Compound Type Specifier Syntax",
            "text": "(`unsigned-byte'{[s | *]})\n"
        },
        {
            "type": "Compound Type Specifier Arguments",
            "text": "s--a positive integer.\n"
        },
        {
            "type": "Compound Type Specifier Description",
            "text": "This denotes the set of non-negative integers that can be represented in a\nbyte of size s (bits).  This is equivalent to (mod m) for m=2^s, or to\n(integer 0 n) for n=2^s-1.  The type unsigned-byte or the type\n(unsigned-byte *) is the same as the type (integer 0 *), the set of\nnon-negative integers.\n"
        },
        {
            "type": "Notes",
            "text": "The type (unsigned-byte 1) is also called bit.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: unsigned-byte,  Next: mod,  Prev: signed-byte,  Up: Numbers Dictionary\n\nunsigned-byte                                                        [Type]\n---------------------------------------------------------------------------\n\nSupertypes::\n............\n\nunsigned-byte, signed-byte, integer, rational,\n\nreal,\n\nnumber, t\n\nDescription::\n.............\n\nThe atomic type specifier unsigned-byte denotes the same type as is\ndenoted by the type specifier (integer 0 *).\n\nCompound Type Specifier Kind::\n..............................\n\nAbbreviating.\n\nCompound Type Specifier Syntax::\n................................\n\n(`unsigned-byte'{[s | *]})\n\nCompound Type Specifier Arguments::\n...................................\n\ns--a positive integer.\n\nCompound Type Specifier Description::\n.....................................\n\nThis denotes the set of non-negative integers that can be represented in a\nbyte of size s (bits).  This is equivalent to (mod m) for m=2^s, or to\n(integer 0 n) for n=2^s-1.  The type unsigned-byte or the type\n(unsigned-byte *) is the same as the type (integer 0 *), the set of\nnon-negative integers.\n\nNotes::\n.......\n\nThe type (unsigned-byte 1) is also called bit.\n\n"
}