{
    "name": "set",
    "prev": "makunbound",
    "next": "unbound-variable",
    "up": "Symbols Dictionary",
    "header": {
        "type": "Function",
        "text": "set"
    },
    "sections": [
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "set",
                    "text": " symbol value =>  value\n"
                }
            ],
            "text": ""
        },
        {
            "type": "Arguments and Values",
            "text": "",
            "values": [
                {
                    "name": "symbol",
                    "desc": "a symbol."
                },
                {
                    "name": "value",
                    "desc": "an object."
                }
            ]
        },
        {
            "type": "Description",
            "text": "set changes the contents of the value cell of symbol to the given value.\n     (set symbol value) == (setf (symbol-value symbol) value)\n"
        },
        {
            "type": "Examples",
            "text": "      (setf (symbol-value 'n) 1) =>  1\n      (set 'n 2) =>  2\n      (symbol-value 'n) =>  2\n      (let ((n 3))\n        (declare (special n))\n        (setq n (+ n 1))\n        (setf (symbol-value 'n) (* n 10))\n        (set 'n (+ (symbol-value 'n) n))\n        n) =>  80\n      n =>  2\n      (let ((n 3))\n        (setq n (+ n 1))\n        (setf (symbol-value 'n) (* n 10))\n        (set 'n (+ (symbol-value 'n) n))\n        n) =>  4\n      n =>  44\n      (defvar *n* 2)\n      (let ((*n* 3))\n        (setq *n* (+ *n* 1))\n        (setf (symbol-value '*n*) (* *n* 10))\n        (set '*n* (+ (symbol-value '*n*) *n*))\n        *n*) =>  80\n       *n* =>  2\n      (defvar *even-count* 0) =>  *EVEN-COUNT*\n      (defvar *odd-count* 0) =>  *ODD-COUNT*\n      (defun tally-list (list)\n        (dolist (element list)\n          (set (if (evenp element) '*even-count* '*odd-count*)\n               (+ element (if (evenp element) *even-count* *odd-count*)))))\n      (tally-list '(1 9 4 3 2 7)) =>  NIL\n      *even-count* =>  6\n      *odd-count* =>  20\n"
        },
        {
            "type": "Side Effects",
            "text": "The value of symbol is changed.\n"
        },
        {
            "type": "See Also",
            "text": "*Note setq:: , *Note progv:: , *Note symbol-value::\n"
        },
        {
            "type": "Notes",
            "text": "The function set is deprecated.\nset cannot change the value of a lexical variable.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: set,  Next: unbound-variable,  Prev: makunbound,  Up: Symbols Dictionary\n\nset                                                              [Function]\n---------------------------------------------------------------------------\n\n`set'  symbol value =>  value\n\nArguments and Values::\n......................\n\nsymbol--a symbol.\n\nvalue--an object.\n\nDescription::\n.............\n\nset changes the contents of the value cell of symbol to the given value.\n\n     (set symbol value) == (setf (symbol-value symbol) value)\n\nExamples::\n..........\n\n      (setf (symbol-value 'n) 1) =>  1\n      (set 'n 2) =>  2\n      (symbol-value 'n) =>  2\n      (let ((n 3))\n        (declare (special n))\n        (setq n (+ n 1))\n        (setf (symbol-value 'n) (* n 10))\n        (set 'n (+ (symbol-value 'n) n))\n        n) =>  80\n      n =>  2\n      (let ((n 3))\n        (setq n (+ n 1))\n        (setf (symbol-value 'n) (* n 10))\n        (set 'n (+ (symbol-value 'n) n))\n        n) =>  4\n      n =>  44\n      (defvar *n* 2)\n      (let ((*n* 3))\n        (setq *n* (+ *n* 1))\n        (setf (symbol-value '*n*) (* *n* 10))\n        (set '*n* (+ (symbol-value '*n*) *n*))\n        *n*) =>  80\n       *n* =>  2\n      (defvar *even-count* 0) =>  *EVEN-COUNT*\n      (defvar *odd-count* 0) =>  *ODD-COUNT*\n      (defun tally-list (list)\n        (dolist (element list)\n          (set (if (evenp element) '*even-count* '*odd-count*)\n               (+ element (if (evenp element) *even-count* *odd-count*)))))\n      (tally-list '(1 9 4 3 2 7)) =>  NIL\n      *even-count* =>  6\n      *odd-count* =>  20\n\nSide Effects::\n..............\n\nThe value of symbol is changed.\n\nSee Also::\n..........\n\n*Note setq:: , *Note progv:: , *Note symbol-value::\n\nNotes::\n.......\n\nThe function set is deprecated.\n\nset cannot change the value of a lexical variable.\n\n"
}