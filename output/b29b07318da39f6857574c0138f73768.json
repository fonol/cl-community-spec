{
    "name": "Constant Variables",
    "prev": "Dynamic Variables",
    "next": "Symbols Naming Both Lexical and Dynamic Variables",
    "up": "The Evaluation Model",
    "header": {
        "type": null,
        "text": null
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Syntax",
            "defs": [
                {
                    "name": "compatible",
                    "text": "redefinition of a constant variable using defconstant ispermitted; see the macro defconstant.\n\nKeywords, symbols defined by Common Lisp or the implementation as constant\n(such as nil, t, and pi), and symbols declared as constant using\ndefconstant are constant variables.\n\n"
                }
            ],
            "text": "`compatible' redefinition of a constant variable using defconstant is\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: Constant Variables,  Next: Symbols Naming Both Lexical and Dynamic Variables,  Prev: Dynamic Variables,  Up: The Evaluation Model\n\nConstant Variables\n..................\n\nCertain variables, called constant variables, are reserved as \"named\nconstants.\" The consequences are undefined if an attempt is made to assign\na value to, or create a binding for a constant variable, except that a\n`compatible' redefinition of a constant variable using defconstant is\npermitted; see the macro defconstant.\n\nKeywords, symbols defined by Common Lisp or the implementation as constant\n(such as nil, t, and pi), and symbols declared as constant using\ndefconstant are constant variables.\n\n"
}