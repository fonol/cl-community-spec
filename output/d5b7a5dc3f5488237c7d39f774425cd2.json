{
    "name": "signed-byte",
    "prev": "integer",
    "next": "unsigned-byte",
    "up": "Numbers Dictionary",
    "header": {
        "type": "Type",
        "text": "signed-byte"
    },
    "sections": [
        {
            "type": "",
            "text": ""
        },
        {
            "type": "Supertypes",
            "text": "signed-byte, integer, rational,\nreal,\nnumber, t\n"
        },
        {
            "type": "Description",
            "text": "The atomic type specifier signed-byte denotes the same type as is denoted\nby the type specifier integer; however, the list forms of these two type\nspecifiers have different semantics.\n"
        },
        {
            "type": "Compound Type Specifier Kind",
            "text": "Abbreviating.\n"
        },
        {
            "type": "Compound Type Specifier Syntax",
            "text": "(`signed-byte'{[s | *]})\n"
        },
        {
            "type": "Compound Type Specifier Arguments",
            "text": "s--a positive integer.\n"
        },
        {
            "type": "Compound Type Specifier Description",
            "text": "This denotes the set of integers that can be represented in\ntwo's-complement form in a byte of s bits.  This is equivalent to (integer\n-2^s-1 2^s-1-1).  The type signed-byte or the type (signed-byte *) is the\nsame as the type integer.\n"
        }
    ],
    "_otext": "File: gcl.info,  Node: signed-byte,  Next: unsigned-byte,  Prev: integer,  Up: Numbers Dictionary\n\nsigned-byte                                                          [Type]\n---------------------------------------------------------------------------\n\nSupertypes::\n............\n\nsigned-byte, integer, rational,\n\nreal,\n\nnumber, t\n\nDescription::\n.............\n\nThe atomic type specifier signed-byte denotes the same type as is denoted\nby the type specifier integer; however, the list forms of these two type\nspecifiers have different semantics.\n\nCompound Type Specifier Kind::\n..............................\n\nAbbreviating.\n\nCompound Type Specifier Syntax::\n................................\n\n(`signed-byte'{[s | *]})\n\nCompound Type Specifier Arguments::\n...................................\n\ns--a positive integer.\n\nCompound Type Specifier Description::\n.....................................\n\nThis denotes the set of integers that can be represented in\ntwo's-complement form in a byte of s bits.  This is equivalent to (integer\n-2^s-1 2^s-1-1).  The type signed-byte or the type (signed-byte *) is the\nsame as the type integer.\n\n"
}